{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/.fable/fable-library.3.1.11/Util.js","webpack:///./src/.fable/fable-library.3.1.11/Types.js","webpack:///./src/.fable/fable-library.3.1.11/Reflection.js","webpack:///./src/.fable/fable-library.3.1.11/Option.js","webpack:///./src/.fable/fable-library.3.1.11/Int32.js","webpack:///./src/.fable/fable-library.3.1.11/Numeric.js","webpack:///./src/.fable/fable-library.3.1.11/lib/long.js","webpack:///./src/.fable/fable-library.3.1.11/RegExp.js","webpack:///./src/.fable/fable-library.3.1.11/String.js","webpack:///./src/.fable/fable-library.3.1.11/Array.js","webpack:///./src/.fable/Feliz.1.40.0/Interop.fs.js","webpack:///./src/.fable/fable-library.3.1.11/List.js","webpack:///./src/.fable/fable-library.3.1.11/System.Text.js","webpack:///./src/.fable/fable-library.3.1.11/FSharp.Core.js","webpack:///./src/.fable/fable-library.3.1.11/Seq.js","webpack:///./src/.fable/Feliz.1.40.0/React.fs.js","webpack:///./src/.fable/Feliz.1.40.0/ReactInterop.js","webpack:///./src/.fable/Feliz.UseListener.0.6.3/Listener.fs.js","webpack:///./src/.fable/fable-library.3.1.11/lib/big.js","webpack:///./src/.fable/fable-library.3.1.11/Decimal.js","webpack:///./src/.fable/Feliz.Router.3.7.0/Router.fs.js","webpack:///./src/.fable/Feliz.Bulma.2.15.0/ElementBuilders.fs.js","webpack:///./src/components/Responsavel.jsx","webpack:///./src/components/Processo.jsx","webpack:///./src/Components.fs.js","webpack:///./src/Main.fs.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","isArrayLike","x","Array","isArray","ArrayBuffer","isView","isHashable","GetHashCode","sameConstructor","y","getPrototypeOf","constructor","Enumerator","iter","this","current","cur","next","done","Error","getEnumerator","GetEnumerator","iterator","toIterator","en","hasNext","undefined","dateOffset","date","date1","offset","kind","getTimezoneOffset","ObjectRef","idMap","has","set","count","stringHash","h","len","charCodeAt","numberHash","combineHashCodes","hashes","reduce","h1","h2","structuralHash","arrayHash","Date","getTime","dateHash","values","map","v","id","equalArraysWith","eq","equalArrays","equals","Equals","isEquatable","compareDates","xKeys","keys","yKeys","sort","equalObjects","xtime","ytime","compareArrays","comp","compareArraysWith","compare","CompareTo","isComparable","compareObjects","createObj","fields","obj","kv","WeakMap","uncurry","arity","f","uncurriedFn","a1","a2","a3","a4","a5","a6","a7","a8","curry","seqToString","self","str","toString","callStack","cons","entries","join","String","recordToJSON","recordToString","recordGetHashCode","recordEquals","other","thisNames","recordCompareTo","Record","TypeInfo","fullname","generics","construct","parent","cases","enumCases","fullName","gen","getHashCode","getGenerics","fullnameHash","genHashes","t1","t2","getRecordElements","k1","v1","k2","v2","endsWith","NumberStyles","Some","some","toArray","opt","defaultArg","defaultValue","symbol","wasm","WebAssembly","Instance","Module","Uint8Array","e","Long","low","high","unsigned","isLong","radix","toJSON","multiply","toPrecision","sd","substr","toExponential","dp","toFixed","toHex","fromBytes","toBytes","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","isNaN","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","negate","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","Math","pow","fromString","RangeError","indexOf","substring","radixToPower","size","min","parseInt","add","fromValue","val","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","toInt","$this","toNumber","isZero","isNegative","radixLong","div","divide","rem1","subtract","rem","remDiv","digits","isOdd","lessThan","greaterThan","greaterThanOrEqual","thisNeg","otherNeg","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtrahend","multiplier","mul","get_high","b00","divisor","approx","res","div_u","div_s","toUnsigned","shiftRightUnsigned","shiftLeft","shiftRight","max","floor","log2","ceil","log","LN2","delta","approxRes","approxRem","numBits","le","hi","lo","toBytesLE","toBytesBE","bytes","fromBytesLE","fromBytesBE","escape","replace","isNullOrWhiteSpace","test","delimiter","xs","from","split","splitters","removeEmpty","arguments","splits","reg","RegExp","exec","index","lastIndex","startIndex","Helpers_allocateArrayFromCons","equalsWith","comparer","array1","array2","length1","length2","compareWith","e1","e2","Interop_reactApi","react","FSharpList","head","tail","xs_1_mut","ys_1_mut","loop","xs_1","ys_1","matchValue","xt","yt","i_mut","h_mut","ListEnumerator$1","ListEnumerator$1_$ctor_3002E699","it","FSharpList_get_Empty","FSharpList_Cons_305B8EAC","FSharpList__get_IsEmpty","FSharpList__get_Head","SR_inputListWasEmpty","FSharpList__get_Tail","empty","singleton","isEmpty","fold","folder","state","acc","reverse","ofArray","tail_1","ofArrayWithTail","mapping","root","node","t_2","x_1","Enumerator_Seq","Dispose","checkNonNull","argName","arg","Operators_NullArg","mkSeq","Enumerator_Seq_$ctor_673A07F2","ofSeq","delay","generator","ar","toList","ofArray_1","xs_3","enumerator","xs_5","ofSeq_1","iterate","action","unitVar0","ReactInterop_useEffect","getDisposable","useEffectReact","disposable","ReactInterop_useLayoutEffect","useLayoutEffectReact","Internal_memo_Z603636D8","renderElement","areEqual","withKey","memoElementType","memo","name_1","displayName","props","createElement","Internal_propsWithKey","React_createDisposable_3A5B6456","dispose","useReact_useEffect_Z5ECA432F","effect","useReact_useRef_1505","initialValue","useRef","useReact_useMemo_CF4EA67","createFunction","dependencies","useMemo","useReact_useCallbackRef_7C4B0DD6","callback","callbackFunction","lastRenderCallbackRef","callbackRef","useCallback","_arg1","useState","Impl_allowsPassiveEvents","addEventListener","passive","removeEventListener","value_1","Impl_adjustPassive","maybeOptions","options","capture","once","Impl_createRemoveOptions","binder","P","_this","Number","concat","cmp","NAME","INVALID","INVALID_DP","NUMERIC","parse","nl","charAt","search","round","Big","DP","RM","rm","more","xc","findIndex","xci","idx","unshift","pop","stringify","k","z","NE","PE","abs","isneg","yc","a","b","bl","bt","ri","bz","ai","al","rl","q","qc","qi","gt","gte","lt","lte","minus","sub","xlty","plus","xe","ye","mod","ygtx","times","one","sqrt","half","valueOf","_Big_","normalize","version","Decimal","RouterModule_String_$007CPrefix$007C","prefix","RouterModule_String_$007CSuffix$007C","suffix","lastIndexOf","RouterModule_encodeParts","routeMode","activePatternResult11406","activePatternResult11407","activePatternResult11408","path_2","_arg2","activePatternResult11411","RouterModule_normalizeRoute","part","encodeURIComponent","RouterModule_urlSegments","path","ys","zs","collect","segment","segment_1","chars","trimEnd","decodeURIComponent","value_2","query","RouterModule_router","input","onChange","ev","urlChanged","onUrlChanged","location","pathname","hash","RouterModule_onUrlChange","hashMode","navigator","userAgent","action_1","arg00","addOptions","removeOptions","fn","action_3","addOptions_1","removeOptions_1","fn_1","arg_1","eventType_2","action_4","addOptions_2","removeOptions_2","fn_2","arg_2","application","Helpers_combineClasses","cn","tupledArg","classes","Helpers_extractClasses","Responsavel","React","setState","form","setForm","setSearch","useEffect","console","fetch","process","URLSearchParams","then","ok","json","toggleModal","modalState","modalAction","modalMethod","errors","method","modal","error","item","class","className","onSubmit","event","preventDefault","headers","body","JSON","Id","target","Cpf","cpf","Nome","nome","Email","email","Foto","foto","text","reset","type","autoComplete","aria-label","onClick","elements","element","page","data-mask","role","disabled","previous","aria-current","Processo","responsaveis","setResponsaveis","setTimeout","NumeroUnificado","numeroprocesso","DataDistribuicao","datadistribuicao","SegredoJustica","segredojustica","PastaFisicaCliente","pastafisicacliente","Descricao","descricao","SituacaoId","situacaoid","Responsaveis","filter","selected","numeroUnificado","placeholder","dataDistribuicao","situacaoId","hidden","defaultChecked","segredoJustica","style","width","multiple","responsavelId","pastaFisicaCliente","rows","situacao","Intl","DateTimeFormat","format","responsavel","Components_Layout_2B31D457","content","props_20","elms_1","elms","elms_6","elms_2","props_3","props_5","props_7","elms_5","elms_4","elms_3","props_14","elms_8","children_9","Children","src","height","children","Components_Home","children_2","children_4","children_6","children_10","Components_Router","initial","patternInput","currentUrl","singleton_1","render","document","getElementById"],"mappings":"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","file":"app.7e52da442f77cc72857f.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([3,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// tslint:disable:ban-types\nexport function isIterable(x) {\n    return x != null && typeof x === \"object\" && Symbol.iterator in x;\n}\nexport function isArrayLike(x) {\n    return Array.isArray(x) || ArrayBuffer.isView(x);\n}\nfunction isComparer(x) {\n    return typeof x.Compare === \"function\";\n}\nfunction isComparable(x) {\n    return typeof x.CompareTo === \"function\";\n}\nfunction isEquatable(x) {\n    return typeof x.Equals === \"function\";\n}\nfunction isHashable(x) {\n    return typeof x.GetHashCode === \"function\";\n}\nexport function isDisposable(x) {\n    return x != null && typeof x.Dispose === \"function\";\n}\nexport function sameConstructor(x, y) {\n    return Object.getPrototypeOf(x).constructor === Object.getPrototypeOf(y).constructor;\n}\nexport class Enumerator {\n    constructor(iter) {\n        this.iter = iter;\n    }\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\n        const cur = this.iter.next();\n        this.current = cur.value;\n        return !cur.done;\n    }\n    [\"System.Collections.IEnumerator.Reset\"]() {\n        throw new Error(\"JS iterators cannot be reset\");\n    }\n    Dispose() {\n        return;\n    }\n}\nexport function getEnumerator(o) {\n    return typeof o.GetEnumerator === \"function\"\n        ? o.GetEnumerator()\n        : new Enumerator(o[Symbol.iterator]());\n}\nexport function toIterator(en) {\n    return {\n        [Symbol.iterator]() { return this; },\n        next() {\n            const hasNext = en[\"System.Collections.IEnumerator.MoveNext\"]();\n            const current = hasNext ? en[\"System.Collections.IEnumerator.get_Current\"]() : undefined;\n            return { done: !hasNext, value: current };\n        },\n    };\n}\nexport class Comparer {\n    constructor(f) {\n        this.Compare = f || compare;\n    }\n}\nexport function comparerFromEqualityComparer(comparer) {\n    // Sometimes IEqualityComparer also implements IComparer\n    if (isComparer(comparer)) {\n        return new Comparer(comparer.Compare);\n    }\n    else {\n        return new Comparer((x, y) => {\n            const xhash = comparer.GetHashCode(x);\n            const yhash = comparer.GetHashCode(y);\n            if (xhash === yhash) {\n                return comparer.Equals(x, y) ? 0 : -1;\n            }\n            else {\n                return xhash < yhash ? -1 : 1;\n            }\n        });\n    }\n}\nexport function assertEqual(actual, expected, msg) {\n    if (!equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport function assertNotEqual(actual, expected, msg) {\n    if (equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport class Lazy {\n    constructor(factory) {\n        this.factory = factory;\n        this.isValueCreated = false;\n    }\n    get Value() {\n        if (!this.isValueCreated) {\n            this.createdValue = this.factory();\n            this.isValueCreated = true;\n        }\n        return this.createdValue;\n    }\n    get IsValueCreated() {\n        return this.isValueCreated;\n    }\n}\nexport function lazyFromValue(v) {\n    return new Lazy(() => v);\n}\nexport function padWithZeros(i, length) {\n    let str = i.toString(10);\n    while (str.length < length) {\n        str = \"0\" + str;\n    }\n    return str;\n}\nexport function padLeftAndRightWithZeros(i, lengthLeft, lengthRight) {\n    let str = i.toString(10);\n    while (str.length < lengthLeft) {\n        str = \"0\" + str;\n    }\n    while (str.length < lengthRight) {\n        str = str + \"0\";\n    }\n    return str;\n}\nexport function dateOffset(date) {\n    const date1 = date;\n    return typeof date1.offset === \"number\"\n        ? date1.offset\n        : (date.kind === 1 /* UTC */\n            ? 0 : date.getTimezoneOffset() * -60000);\n}\nexport function int16ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport function int32ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFFFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport class ObjectRef {\n    static id(o) {\n        if (!ObjectRef.idMap.has(o)) {\n            ObjectRef.idMap.set(o, ++ObjectRef.count);\n        }\n        return ObjectRef.idMap.get(o);\n    }\n}\nObjectRef.idMap = new WeakMap();\nObjectRef.count = 0;\nexport function stringHash(s) {\n    let i = 0;\n    let h = 5381;\n    const len = s.length;\n    while (i < len) {\n        h = (h * 33) ^ s.charCodeAt(i++);\n    }\n    return h;\n}\nexport function numberHash(x) {\n    return x * 2654435761 | 0;\n}\n// From https://stackoverflow.com/a/37449594\nexport function combineHashCodes(hashes) {\n    if (hashes.length === 0) {\n        return 0;\n    }\n    return hashes.reduce((h1, h2) => {\n        return ((h1 << 5) + h1) ^ h2;\n    });\n}\nexport function physicalHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default:\n            return numberHash(ObjectRef.id(x));\n    }\n}\nexport function identityHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    else if (isHashable(x)) {\n        return x.GetHashCode();\n    }\n    else {\n        return physicalHash(x);\n    }\n}\nexport function dateHash(x) {\n    return x.getTime();\n}\nexport function arrayHash(x) {\n    const len = x.length;\n    const hashes = new Array(len);\n    for (let i = 0; i < len; i++) {\n        hashes[i] = structuralHash(x[i]);\n    }\n    return combineHashCodes(hashes);\n}\nexport function structuralHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default: {\n            if (isHashable(x)) {\n                return x.GetHashCode();\n            }\n            else if (isArrayLike(x)) {\n                return arrayHash(x);\n            }\n            else if (x instanceof Date) {\n                return dateHash(x);\n            }\n            else if (Object.getPrototypeOf(x).constructor === Object) {\n                // TODO: check call-stack to prevent cyclic objects?\n                const hashes = Object.values(x).map((v) => structuralHash(v));\n                return combineHashCodes(hashes);\n            }\n            else {\n                // Classes don't implement GetHashCode by default, but must use identity hashing\n                return numberHash(ObjectRef.id(x));\n                // return stringHash(String(x));\n            }\n        }\n    }\n}\n// Intended for custom numeric types, like long or decimal\nexport function fastStructuralHash(x) {\n    return stringHash(String(x));\n}\n// Intended for declared types that may or may not implement GetHashCode\nexport function safeHash(x) {\n    return x == null ? 0 : isHashable(x) ? x.GetHashCode() : numberHash(ObjectRef.id(x));\n}\nexport function equalArraysWith(x, y, eq) {\n    if (x == null) {\n        return y == null;\n    }\n    if (y == null) {\n        return false;\n    }\n    if (x.length !== y.length) {\n        return false;\n    }\n    for (let i = 0; i < x.length; i++) {\n        if (!eq(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalArrays(x, y) {\n    return equalArraysWith(x, y, equals);\n}\nfunction equalObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return false;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0; i < xKeys.length; i++) {\n        if (xKeys[i] !== yKeys[i] || !equals(x[xKeys[i]], y[yKeys[i]])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equals(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if (x == null) {\n        return y == null;\n    }\n    else if (y == null) {\n        return false;\n    }\n    else if (typeof x !== \"object\") {\n        return false;\n    }\n    else if (isEquatable(x)) {\n        return x.Equals(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) && equalArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return (y instanceof Date) && compareDates(x, y) === 0;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object && equalObjects(x, y);\n    }\n}\nexport function compareDates(x, y) {\n    let xtime;\n    let ytime;\n    // DateTimeOffset and DateTime deals with equality differently.\n    if (\"offset\" in x && \"offset\" in y) {\n        xtime = x.getTime();\n        ytime = y.getTime();\n    }\n    else {\n        xtime = x.getTime() + dateOffset(x);\n        ytime = y.getTime() + dateOffset(y);\n    }\n    return xtime === ytime ? 0 : (xtime < ytime ? -1 : 1);\n}\nexport function comparePrimitives(x, y) {\n    return x === y ? 0 : (x < y ? -1 : 1);\n}\nexport function compareArraysWith(x, y, comp) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    if (x.length !== y.length) {\n        return x.length < y.length ? -1 : 1;\n    }\n    for (let i = 0, j = 0; i < x.length; i++) {\n        j = comp(x[i], y[i]);\n        if (j !== 0) {\n            return j;\n        }\n    }\n    return 0;\n}\nexport function compareArrays(x, y) {\n    return compareArraysWith(x, y, compare);\n}\nfunction compareObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return xKeys.length < yKeys.length ? -1 : 1;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0, j = 0; i < xKeys.length; i++) {\n        const key = xKeys[i];\n        if (key !== yKeys[i]) {\n            return key < yKeys[i] ? -1 : 1;\n        }\n        else {\n            j = compare(x[key], y[key]);\n            if (j !== 0) {\n                return j;\n            }\n        }\n    }\n    return 0;\n}\nexport function compare(x, y) {\n    if (x === y) {\n        return 0;\n    }\n    else if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    else if (y == null) {\n        return 1;\n    }\n    else if (typeof x !== \"object\") {\n        return x < y ? -1 : 1;\n    }\n    else if (isComparable(x)) {\n        return x.CompareTo(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) ? compareArrays(x, y) : -1;\n    }\n    else if (x instanceof Date) {\n        return y instanceof Date ? compareDates(x, y) : -1;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object ? compareObjects(x, y) : -1;\n    }\n}\nexport function min(comparer, x, y) {\n    return comparer(x, y) < 0 ? x : y;\n}\nexport function max(comparer, x, y) {\n    return comparer(x, y) > 0 ? x : y;\n}\nexport function clamp(comparer, value, min, max) {\n    return (comparer(value, min) < 0) ? min : (comparer(value, max) > 0) ? max : value;\n}\nexport function createAtom(value) {\n    let atom = value;\n    return (value, isSetter) => {\n        if (!isSetter) {\n            return atom;\n        }\n        else {\n            atom = value;\n            return void 0;\n        }\n    };\n}\nexport function createObj(fields) {\n    const obj = {};\n    for (const kv of fields) {\n        obj[kv[0]] = kv[1];\n    }\n    return obj;\n}\nexport function jsOptions(mutator) {\n    const opts = {};\n    mutator(opts);\n    return opts;\n}\nexport function round(value, digits = 0) {\n    const m = Math.pow(10, digits);\n    const n = +(digits ? value * m : value).toFixed(8);\n    const i = Math.floor(n);\n    const f = n - i;\n    const e = 1e-8;\n    const r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 === 0) ? i : i + 1) : Math.round(n);\n    return digits ? r / m : r;\n}\nexport function sign(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n}\nexport function randomNext(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\nexport function randomBytes(buffer) {\n    if (buffer == null) {\n        throw new Error(\"Buffer cannot be null\");\n    }\n    for (let i = 0; i < buffer.length; i += 6) {\n        // Pick random 48-bit number. Fill buffer in 2 24-bit chunks to avoid bitwise truncation.\n        let r = Math.floor(Math.random() * 281474976710656); // Low 24 bits = chunk 1.\n        const rhi = Math.floor(r / 16777216); // High 24 bits shifted via division = chunk 2.\n        for (let j = 0; j < 6 && i + j < buffer.length; j++) {\n            if (j === 3) {\n                r = rhi;\n            }\n            buffer[i + j] = r & 255;\n            r >>>= 8;\n        }\n    }\n}\nexport function unescapeDataString(s) {\n    // https://stackoverflow.com/a/4458580/524236\n    return decodeURIComponent((s).replace(/\\+/g, \"%20\"));\n}\nexport function escapeDataString(s) {\n    return encodeURIComponent(s).replace(/!/g, \"%21\")\n        .replace(/'/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\nexport function escapeUriString(s) {\n    return encodeURI(s);\n}\n// ICollection.Clear and Count members can be called on Arrays\n// or Dictionaries so we need a runtime check (see #1120)\nexport function count(col) {\n    if (isArrayLike(col)) {\n        return col.length;\n    }\n    else {\n        let count = 0;\n        for (const _ of col) {\n            count++;\n        }\n        return count;\n    }\n}\nexport function clear(col) {\n    if (isArrayLike(col)) {\n        col.splice(0);\n    }\n    else {\n        col.clear();\n    }\n}\nconst CURRIED_KEY = \"__CURRIED__\";\nexport function uncurry(arity, f) {\n    // f may be a function option with None value\n    if (f == null || f.length > 1) {\n        return f;\n    }\n    let uncurriedFn;\n    switch (arity) {\n        case 2:\n            uncurriedFn = (a1, a2) => f(a1)(a2);\n            break;\n        case 3:\n            uncurriedFn = (a1, a2, a3) => f(a1)(a2)(a3);\n            break;\n        case 4:\n            uncurriedFn = (a1, a2, a3, a4) => f(a1)(a2)(a3)(a4);\n            break;\n        case 5:\n            uncurriedFn = (a1, a2, a3, a4, a5) => f(a1)(a2)(a3)(a4)(a5);\n            break;\n        case 6:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6) => f(a1)(a2)(a3)(a4)(a5)(a6);\n            break;\n        case 7:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7);\n            break;\n        case 8:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7, a8) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8);\n            break;\n        default:\n            throw new Error(\"Uncurrying to more than 8-arity is not supported: \" + arity);\n    }\n    uncurriedFn[CURRIED_KEY] = f;\n    return uncurriedFn;\n}\nexport function curry(arity, f) {\n    if (f == null || f.length === 1) {\n        return f;\n    }\n    if (CURRIED_KEY in f) {\n        return f[CURRIED_KEY];\n    }\n    switch (arity) {\n        case 2:\n            return (a1) => (a2) => f(a1, a2);\n        case 3:\n            return (a1) => (a2) => (a3) => f(a1, a2, a3);\n        case 4:\n            return (a1) => (a2) => (a3) => (a4) => f(a1, a2, a3, a4);\n        case 5:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => f(a1, a2, a3, a4, a5);\n        case 6:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f(a1, a2, a3, a4, a5, a6);\n        case 7:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f(a1, a2, a3, a4, a5, a6, a7);\n        case 8:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f(a1, a2, a3, a4, a5, a6, a7, a8);\n        default:\n            throw new Error(\"Currying to more than 8-arity is not supported: \" + arity);\n    }\n}\nexport function checkArity(arity, f) {\n    return f.length > arity\n        ? (...args1) => (...args2) => f.apply(undefined, args1.concat(args2))\n        : f;\n}\nexport function partialApply(arity, f, args) {\n    if (f == null) {\n        return undefined;\n    }\n    else if (CURRIED_KEY in f) {\n        f = f[CURRIED_KEY];\n        for (let i = 0; i < args.length; i++) {\n            f = f(args[i]);\n        }\n        return f;\n    }\n    else {\n        switch (arity) {\n            case 1:\n                // Wrap arguments to make sure .concat doesn't destruct arrays. Example\n                // [1,2].concat([3,4],5)   --> [1,2,3,4,5]    // fails\n                // [1,2].concat([[3,4],5]) --> [1,2,[3,4],5]  // ok\n                return (a1) => f.apply(undefined, args.concat([a1]));\n            case 2:\n                return (a1) => (a2) => f.apply(undefined, args.concat([a1, a2]));\n            case 3:\n                return (a1) => (a2) => (a3) => f.apply(undefined, args.concat([a1, a2, a3]));\n            case 4:\n                return (a1) => (a2) => (a3) => (a4) => f.apply(undefined, args.concat([a1, a2, a3, a4]));\n            case 5:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5]));\n            case 6:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6]));\n            case 7:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7]));\n            case 8:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7, a8]));\n            default:\n                throw new Error(\"Partially applying to more than 8-arity is not supported: \" + arity);\n        }\n    }\n}\nexport function mapCurriedArgs(fn, mappings) {\n    function mapArg(fn, arg, mappings, idx) {\n        const mapping = mappings[idx];\n        if (mapping !== 0) {\n            const expectedArity = mapping[0];\n            const actualArity = mapping[1];\n            if (expectedArity > 1) {\n                arg = curry(expectedArity, arg);\n            }\n            if (actualArity > 1) {\n                arg = uncurry(actualArity, arg);\n            }\n        }\n        const res = fn(arg);\n        if (idx + 1 === mappings.length) {\n            return res;\n        }\n        else {\n            return (arg) => mapArg(res, arg, mappings, idx + 1);\n        }\n    }\n    return (arg) => mapArg(fn, arg, mappings, 0);\n}\n","import { combineHashCodes, compare, compareArrays, equalArrays, equals, sameConstructor, numberHash, structuralHash } from \"./Util.js\";\nexport function seqToString(self) {\n    let count = 0;\n    let str = \"[\";\n    for (const x of self) {\n        if (count === 0) {\n            str += toString(x);\n        }\n        else if (count === 100) {\n            str += \"; ...\";\n            break;\n        }\n        else {\n            str += \"; \" + toString(x);\n        }\n        count++;\n    }\n    return str + \"]\";\n}\nexport function toString(x, callStack = 0) {\n    if (x != null && typeof x === \"object\") {\n        if (typeof x.toString === \"function\") {\n            return x.toString();\n        }\n        else if (Symbol.iterator in x) {\n            return seqToString(x);\n        }\n        else { // TODO: Date?\n            const cons = Object.getPrototypeOf(x).constructor;\n            return cons === Object && callStack < 10\n                // Same format as recordToString\n                ? \"{ \" + Object.entries(x).map(([k, v]) => k + \" = \" + toString(v, callStack + 1)).join(\"\\n  \") + \" }\"\n                : cons.name;\n        }\n    }\n    return String(x);\n}\nexport function unionToString(name, fields) {\n    if (fields.length === 0) {\n        return name;\n    }\n    else {\n        let fieldStr = \"\";\n        let withParens = true;\n        if (fields.length === 1) {\n            fieldStr = toString(fields[0]);\n            withParens = fieldStr.indexOf(\" \") >= 0;\n        }\n        else {\n            fieldStr = fields.map((x) => toString(x)).join(\", \");\n        }\n        return name + (withParens ? \" (\" : \" \") + fieldStr + (withParens ? \")\" : \"\");\n    }\n}\nexport class Union {\n    get name() {\n        return this.cases()[this.tag];\n    }\n    toJSON() {\n        return this.fields.length === 0 ? this.name : [this.name].concat(this.fields);\n    }\n    toString() {\n        return unionToString(this.name, this.fields);\n    }\n    GetHashCode() {\n        const hashes = this.fields.map((x) => structuralHash(x));\n        hashes.splice(0, 0, numberHash(this.tag));\n        return combineHashCodes(hashes);\n    }\n    Equals(other) {\n        if (this === other) {\n            return true;\n        }\n        else if (!sameConstructor(this, other)) {\n            return false;\n        }\n        else if (this.tag === other.tag) {\n            return equalArrays(this.fields, other.fields);\n        }\n        else {\n            return false;\n        }\n    }\n    CompareTo(other) {\n        if (this === other) {\n            return 0;\n        }\n        else if (!sameConstructor(this, other)) {\n            return -1;\n        }\n        else if (this.tag === other.tag) {\n            return compareArrays(this.fields, other.fields);\n        }\n        else {\n            return this.tag < other.tag ? -1 : 1;\n        }\n    }\n}\nfunction recordToJSON(self) {\n    const o = {};\n    const keys = Object.keys(self);\n    for (let i = 0; i < keys.length; i++) {\n        o[keys[i]] = self[keys[i]];\n    }\n    return o;\n}\nfunction recordToString(self) {\n    return \"{ \" + Object.entries(self).map(([k, v]) => k + \" = \" + toString(v)).join(\"\\n  \") + \" }\";\n}\nfunction recordGetHashCode(self) {\n    const hashes = Object.values(self).map((v) => structuralHash(v));\n    return combineHashCodes(hashes);\n}\nfunction recordEquals(self, other) {\n    if (self === other) {\n        return true;\n    }\n    else if (!sameConstructor(self, other)) {\n        return false;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            if (!equals(self[thisNames[i]], other[thisNames[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nfunction recordCompareTo(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else if (!sameConstructor(self, other)) {\n        return -1;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            const result = compare(self[thisNames[i]], other[thisNames[i]]);\n            if (result !== 0) {\n                return result;\n            }\n        }\n        return 0;\n    }\n}\nexport class Record {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class FSharpRef {\n    constructor(contentsOrGetter, setter) {\n        if (typeof setter === \"function\") {\n            this.getter = contentsOrGetter;\n            this.setter = setter;\n        }\n        else {\n            this.getter = () => contentsOrGetter;\n            this.setter = (v) => { contentsOrGetter = v; };\n        }\n    }\n    get contents() {\n        return this.getter();\n    }\n    set contents(v) {\n        this.setter(v);\n    }\n}\n// EXCEPTIONS\n// Exception is intentionally not derived from Error, for performance reasons (see #2160)\nexport class Exception {\n    constructor(message) {\n        this.message = message;\n    }\n}\nexport function isException(x) {\n    return x instanceof Exception || x instanceof Error;\n}\nexport class FSharpException extends Exception {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class MatchFailureException extends FSharpException {\n    constructor(arg1, arg2, arg3) {\n        super();\n        this.arg1 = arg1;\n        this.arg2 = arg2 | 0;\n        this.arg3 = arg3 | 0;\n        this.message = \"The match cases were incomplete\";\n    }\n}\nexport class Attribute {\n}\n","import { Record, Union } from \"./Types.js\";\nimport { combineHashCodes, equalArraysWith, stringHash } from \"./Util.js\";\nexport class CaseInfo {\n    constructor(declaringType, tag, name, fields) {\n        this.declaringType = declaringType;\n        this.tag = tag;\n        this.name = name;\n        this.fields = fields;\n    }\n}\nexport class TypeInfo {\n    constructor(fullname, generics, construct, parent, fields, cases, enumCases) {\n        this.fullname = fullname;\n        this.generics = generics;\n        this.construct = construct;\n        this.parent = parent;\n        this.fields = fields;\n        this.cases = cases;\n        this.enumCases = enumCases;\n    }\n    toString() {\n        return fullName(this);\n    }\n    GetHashCode() {\n        return getHashCode(this);\n    }\n    Equals(other) {\n        return equals(this, other);\n    }\n}\nexport function getGenerics(t) {\n    return t.generics != null ? t.generics : [];\n}\nexport function getHashCode(t) {\n    const fullnameHash = stringHash(t.fullname);\n    const genHashes = getGenerics(t).map(getHashCode);\n    return combineHashCodes([fullnameHash, ...genHashes]);\n}\nexport function equals(t1, t2) {\n    if (t1.fullname === \"\") { // Anonymous records\n        return t2.fullname === \"\"\n            && equalArraysWith(getRecordElements(t1), getRecordElements(t2), ([k1, v1], [k2, v2]) => k1 === k2 && equals(v1, v2));\n    }\n    else {\n        return t1.fullname === t2.fullname\n            && equalArraysWith(getGenerics(t1), getGenerics(t2), equals);\n    }\n}\nexport function class_type(fullname, generics, construct, parent) {\n    return new TypeInfo(fullname, generics, construct, parent);\n}\nexport function record_type(fullname, generics, construct, fields) {\n    return new TypeInfo(fullname, generics, construct, undefined, fields);\n}\nexport function anonRecord_type(...fields) {\n    return new TypeInfo(\"\", undefined, undefined, undefined, () => fields);\n}\nexport function union_type(fullname, generics, construct, cases) {\n    const t = new TypeInfo(fullname, generics, construct, undefined, undefined, () => {\n        const caseNames = construct.prototype.cases();\n        return cases().map((fields, i) => new CaseInfo(t, i, caseNames[i], fields));\n    });\n    return t;\n}\nexport function tuple_type(...generics) {\n    return new TypeInfo(\"System.Tuple`\" + generics.length, generics);\n}\nexport function delegate_type(...generics) {\n    return new TypeInfo(\"System.Func`\" + generics.length, generics);\n}\nexport function lambda_type(argType, returnType) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpFunc`2\", [argType, returnType]);\n}\nexport function option_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpOption`1\", [generic]);\n}\nexport function list_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Collections.FSharpList`1\", [generic]);\n}\nexport function array_type(generic) {\n    return new TypeInfo(generic.fullname + \"[]\", [generic]);\n}\nexport function enum_type(fullname, underlyingType, enumCases) {\n    return new TypeInfo(fullname, [underlyingType], undefined, undefined, undefined, undefined, enumCases);\n}\nexport const obj_type = new TypeInfo(\"System.Object\");\nexport const unit_type = new TypeInfo(\"Microsoft.FSharp.Core.Unit\");\nexport const char_type = new TypeInfo(\"System.Char\");\nexport const string_type = new TypeInfo(\"System.String\");\nexport const bool_type = new TypeInfo(\"System.Boolean\");\nexport const int8_type = new TypeInfo(\"System.SByte\");\nexport const uint8_type = new TypeInfo(\"System.Byte\");\nexport const int16_type = new TypeInfo(\"System.Int16\");\nexport const uint16_type = new TypeInfo(\"System.UInt16\");\nexport const int32_type = new TypeInfo(\"System.Int32\");\nexport const uint32_type = new TypeInfo(\"System.UInt32\");\nexport const float32_type = new TypeInfo(\"System.Single\");\nexport const float64_type = new TypeInfo(\"System.Double\");\nexport const decimal_type = new TypeInfo(\"System.Decimal\");\nexport function name(info) {\n    if (Array.isArray(info)) {\n        return info[0];\n    }\n    else if (info instanceof CaseInfo) {\n        return info.name;\n    }\n    else {\n        const i = info.fullname.lastIndexOf(\".\");\n        return i === -1 ? info.fullname : info.fullname.substr(i + 1);\n    }\n}\nexport function fullName(t) {\n    const gen = t.generics != null && !isArray(t) ? t.generics : [];\n    if (gen.length > 0) {\n        return t.fullname + \"[\" + gen.map((x) => fullName(x)).join(\",\") + \"]\";\n    }\n    else {\n        return t.fullname;\n    }\n}\nexport function namespace(t) {\n    const i = t.fullname.lastIndexOf(\".\");\n    return i === -1 ? \"\" : t.fullname.substr(0, i);\n}\nexport function isArray(t) {\n    return t.fullname.endsWith(\"[]\");\n}\nexport function getElementType(t) {\n    var _a;\n    return isArray(t) ? (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0] : undefined;\n}\nexport function isGenericType(t) {\n    return t.generics != null && t.generics.length > 0;\n}\nexport function isEnum(t) {\n    return t.enumCases != null && t.enumCases.length > 0;\n}\nexport function isSubclassOf(t1, t2) {\n    var _a, _b;\n    return (_b = (_a = t1.parent) === null || _a === void 0 ? void 0 : _a.Equals(t2)) !== null && _b !== void 0 ? _b : false;\n}\n/**\n * This doesn't replace types for fields (records) or cases (unions)\n * but it should be enough for type comparison purposes\n */\nexport function getGenericTypeDefinition(t) {\n    return t.generics == null ? t : new TypeInfo(t.fullname, t.generics.map(() => obj_type));\n}\nexport function getEnumUnderlyingType(t) {\n    var _a;\n    return (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0];\n}\nexport function getEnumValues(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[1]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function getEnumNames(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[0]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nfunction getEnumCase(t, v) {\n    if (t.enumCases != null) {\n        if (typeof v === \"string\") {\n            for (const kv of t.enumCases) {\n                if (kv[0] === v) {\n                    return kv;\n                }\n            }\n            throw new Error(`'${v}' was not found in ${t.fullname}`);\n        }\n        else {\n            for (const kv of t.enumCases) {\n                if (kv[1] === v) {\n                    return kv;\n                }\n            }\n            // .NET returns the number even if it doesn't match any of the cases\n            return [\"\", v];\n        }\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function parseEnum(t, str) {\n    // TODO: better int parsing here, parseInt ceils floats: \"4.8\" -> 4\n    const value = parseInt(str, 10);\n    return getEnumCase(t, isNaN(value) ? str : value)[1];\n}\nexport function tryParseEnum(t, str, defValue) {\n    try {\n        defValue.contents = parseEnum(t, str);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function getEnumName(t, v) {\n    return getEnumCase(t, v)[0];\n}\nexport function isEnumDefined(t, v) {\n    try {\n        const kv = getEnumCase(t, v);\n        return kv[0] != null && kv[0] !== \"\";\n    }\n    catch (_a) {\n        // supress error\n    }\n    return false;\n}\n// FSharpType\nexport function getUnionCases(t) {\n    if (t.cases != null) {\n        return t.cases();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# union type`);\n    }\n}\nexport function getRecordElements(t) {\n    if (t.fields != null) {\n        return t.fields();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# record type`);\n    }\n}\nexport function getTupleElements(t) {\n    if (isTuple(t) && t.generics != null) {\n        return t.generics;\n    }\n    else {\n        throw new Error(`${t.fullname} is not a tuple type`);\n    }\n}\nexport function getFunctionElements(t) {\n    if (isFunction(t) && t.generics != null) {\n        const gen = t.generics;\n        return [gen[0], gen[1]];\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# function type`);\n    }\n}\nexport function isUnion(t) {\n    return t instanceof TypeInfo ? t.cases != null : t instanceof Union;\n}\nexport function isRecord(t) {\n    return t instanceof TypeInfo ? t.fields != null : t instanceof Record;\n}\nexport function isTuple(t) {\n    return t.fullname.startsWith(\"System.Tuple\") && !isArray(t);\n}\n// In .NET this is false for delegates\nexport function isFunction(t) {\n    return t.fullname === \"Microsoft.FSharp.Core.FSharpFunc`2\";\n}\n// FSharpValue\nexport function getUnionFields(v, t) {\n    const cases = getUnionCases(t);\n    const case_ = cases[v.tag];\n    if (case_ == null) {\n        throw new Error(`Cannot find case ${v.name} in union type`);\n    }\n    return [case_, v.fields];\n}\nexport function getUnionCaseFields(uci) {\n    return uci.fields == null ? [] : uci.fields;\n}\n// This is used as replacement of `FSharpValue.GetRecordFields`\n// For `FSharpTypes.GetRecordFields` see `getRecordElements`\n// Object.keys returns keys in the order they were added to the object\nexport function getRecordFields(v) {\n    return Object.keys(v).map((k) => v[k]);\n}\nexport function getRecordField(v, field) {\n    return v[field[0]];\n}\nexport function getTupleFields(v) {\n    return v;\n}\nexport function getTupleField(v, i) {\n    return v[i];\n}\nexport function makeUnion(uci, values) {\n    const expectedLength = (uci.fields || []).length;\n    if (values.length !== expectedLength) {\n        throw new Error(`Expected an array of length ${expectedLength} but got ${values.length}`);\n    }\n    return uci.declaringType.construct != null\n        ? new uci.declaringType.construct(uci.tag, ...values)\n        : {};\n}\nexport function makeRecord(t, values) {\n    const fields = getRecordElements(t);\n    if (fields.length !== values.length) {\n        throw new Error(`Expected an array of length ${fields.length} but got ${values.length}`);\n    }\n    return t.construct != null\n        ? new t.construct(...values)\n        : fields.reduce((obj, [key, _t], i) => {\n            obj[key] = values[i];\n            return obj;\n        }, {});\n}\nexport function makeTuple(values, _t) {\n    return values;\n}\nexport function makeGenericType(t, generics) {\n    return new TypeInfo(t.fullname, generics, t.construct, t.parent, t.fields, t.cases);\n}\nexport function createInstance(t, consArgs) {\n    // TODO: Check if consArgs length is same as t.construct?\n    // (Arg types can still be different)\n    if (typeof t.construct === \"function\") {\n        return new t.construct(...(consArgs !== null && consArgs !== void 0 ? consArgs : []));\n    }\n    else {\n        throw new Error(`Cannot access constructor of ${t.fullname}`);\n    }\n}\nexport function getValue(propertyInfo, v) {\n    return v[propertyInfo[0]];\n}\n// Fable.Core.Reflection\nfunction assertUnion(x) {\n    if (!(x instanceof Union)) {\n        throw new Error(`Value is not an F# union type`);\n    }\n}\nexport function getCaseTag(x) {\n    assertUnion(x);\n    return x.tag;\n}\nexport function getCaseName(x) {\n    assertUnion(x);\n    return x.cases()[x.tag];\n}\nexport function getCaseFields(x) {\n    assertUnion(x);\n    return x.fields;\n}\n","import { compare, equals, structuralHash } from \"./Util.js\";\n// Using a class here for better compatibility with TS files importing Some\nexport class Some {\n    constructor(value) {\n        this.value = value;\n    }\n    toJSON() {\n        return this.value;\n    }\n    // Don't add \"Some\" for consistency with erased options\n    toString() {\n        return String(this.value);\n    }\n    GetHashCode() {\n        return structuralHash(this.value);\n    }\n    Equals(other) {\n        if (other == null) {\n            return false;\n        }\n        else {\n            return equals(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n    CompareTo(other) {\n        if (other == null) {\n            return 1;\n        }\n        else {\n            return compare(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n}\nexport function some(x) {\n    return x == null || x instanceof Some ? new Some(x) : x;\n}\nexport function value(x) {\n    if (x == null) {\n        throw new Error(\"Option has no value\");\n    }\n    else {\n        return x instanceof Some ? x.value : x;\n    }\n}\nexport function ofNullable(x) {\n    // This will fail with unit probably, an alternative would be:\n    // return x === null ? undefined : (x === undefined ? new Some(x) : x);\n    return x == null ? undefined : x;\n}\nexport function toNullable(x) {\n    return x == null ? null : value(x);\n}\nexport function flatten(x) {\n    return x == null ? undefined : value(x);\n}\nexport function toArray(opt) {\n    return (opt == null) ? [] : [value(opt)];\n}\nexport function defaultArg(opt, defaultValue) {\n    return (opt != null) ? value(opt) : defaultValue;\n}\nexport function defaultArgWith(opt, defThunk) {\n    return (opt != null) ? value(opt) : defThunk();\n}\nexport function filter(predicate, opt) {\n    return (opt != null) ? (predicate(value(opt)) ? opt : undefined) : opt;\n}\nexport function map(mapping, opt) {\n    return (opt != null) ? some(mapping(value(opt))) : undefined;\n}\nexport function map2(mapping, opt1, opt2) {\n    return (opt1 != null && opt2 != null) ? mapping(value(opt1), value(opt2)) : undefined;\n}\nexport function map3(mapping, opt1, opt2, opt3) {\n    return (opt1 != null && opt2 != null && opt3 != null) ? mapping(value(opt1), value(opt2), value(opt3)) : undefined;\n}\nexport function bind(binder, opt) {\n    return opt != null ? binder(value(opt)) : undefined;\n}\nexport function tryOp(op, arg) {\n    try {\n        return some(op(arg));\n    }\n    catch (_a) {\n        return undefined;\n    }\n}\n","// export type decimal = Decimal;\nexport var NumberStyles;\n(function (NumberStyles) {\n    // None = 0x00000000,\n    // AllowLeadingWhite = 0x00000001,\n    // AllowTrailingWhite = 0x00000002,\n    // AllowLeadingSign = 0x00000004,\n    // AllowTrailingSign = 0x00000008,\n    // AllowParentheses = 0x00000010,\n    // AllowDecimalPoint = 0x00000020,\n    // AllowThousands = 0x00000040,\n    // AllowExponent = 0x00000080,\n    // AllowCurrencySymbol = 0x00000100,\n    NumberStyles[NumberStyles[\"AllowHexSpecifier\"] = 512] = \"AllowHexSpecifier\";\n    // Integer = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign,\n    // HexNumber = AllowLeadingWhite | AllowTrailingWhite | AllowHexSpecifier,\n    // Number = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //          AllowTrailingSign | AllowDecimalPoint | AllowThousands,\n    // Float = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //         AllowDecimalPoint | AllowExponent,\n    // Currency = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //            AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol,\n    // Any = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //       AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol | AllowExponent,\n})(NumberStyles || (NumberStyles = {}));\nfunction validResponse(regexMatch, radix) {\n    const [/*all*/ , sign, prefix, digits] = regexMatch;\n    return {\n        sign: sign || \"\",\n        prefix: prefix || \"\",\n        digits,\n        radix,\n    };\n}\nfunction getRange(unsigned, bitsize) {\n    switch (bitsize) {\n        case 8: return unsigned ? [0, 255] : [-128, 127];\n        case 16: return unsigned ? [0, 65535] : [-32768, 32767];\n        case 32: return unsigned ? [0, 4294967295] : [-2147483648, 2147483647];\n        default: throw new Error(\"Invalid bit size.\");\n    }\n}\nfunction getInvalidDigits(radix) {\n    switch (radix) {\n        case 2: return /[^0-1]/;\n        case 8: return /[^0-7]/;\n        case 10: return /[^0-9]/;\n        case 16: return /[^0-9a-fA-F]/;\n        default:\n            throw new Error(\"Invalid Base.\");\n    }\n}\nfunction getRadix(prefix, style) {\n    if (style & NumberStyles.AllowHexSpecifier) {\n        return 16;\n    }\n    else {\n        switch (prefix) {\n            case \"0b\":\n            case \"0B\": return 2;\n            case \"0o\":\n            case \"0O\": return 8;\n            case \"0x\":\n            case \"0X\": return 16;\n            default: return 10;\n        }\n    }\n}\nexport function isValid(str, style, radix) {\n    const integerRegex = /^\\s*([\\+\\-])?(0[xXoObB])?([0-9a-fA-F]+)\\s*$/;\n    const res = integerRegex.exec(str.replace(/_/g, \"\"));\n    if (res != null) {\n        const [/*all*/ , /*sign*/ , prefix, digits] = res;\n        radix = radix || getRadix(prefix, style);\n        const invalidDigits = getInvalidDigits(radix);\n        if (!invalidDigits.test(digits)) {\n            return validResponse(res, radix);\n        }\n    }\n    return null;\n}\nexport function parse(str, style, unsigned, bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        let v = Number.parseInt(res.sign + res.digits, res.radix);\n        if (!Number.isNaN(v)) {\n            const [umin, umax] = getRange(true, bitsize);\n            if (!unsigned && res.radix !== 10 && v >= umin && v <= umax) {\n                v = v << (32 - bitsize) >> (32 - bitsize);\n            }\n            const [min, max] = getRange(unsigned, bitsize);\n            if (v >= min && v <= max) {\n                return v;\n            }\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize, defValue) {\n    try {\n        defValue.contents = parse(str, style, unsigned, bitsize);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function op_UnaryNegation_Int8(x) {\n    return x === -128 ? x : -x;\n}\nexport function op_UnaryNegation_Int16(x) {\n    return x === -32768 ? x : -x;\n}\nexport function op_UnaryNegation_Int32(x) {\n    return x === -2147483648 ? x : -x;\n}\n","export const symbol = Symbol(\"numeric\");\nexport function isNumeric(x) {\n    return typeof x === \"number\" || (x === null || x === void 0 ? void 0 : x[symbol]);\n}\nexport function compare(x, y) {\n    if (typeof x === \"number\") {\n        return x < y ? -1 : (x > y ? 1 : 0);\n    }\n    else {\n        return x.CompareTo(y);\n    }\n}\nexport function multiply(x, y) {\n    if (typeof x === \"number\") {\n        return x * y;\n    }\n    else {\n        return x[symbol]().multiply(y);\n    }\n}\nexport function toFixed(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toFixed(dp);\n    }\n    else {\n        return x[symbol]().toFixed(dp);\n    }\n}\nexport function toPrecision(x, sd) {\n    if (typeof x === \"number\") {\n        return x.toPrecision(sd);\n    }\n    else {\n        return x[symbol]().toPrecision(sd);\n    }\n}\nexport function toExponential(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toExponential(dp);\n    }\n    else {\n        return x[symbol]().toExponential(dp);\n    }\n}\nexport function toHex(x) {\n    if (typeof x === \"number\") {\n        return (Number(x) >>> 0).toString(16);\n    }\n    else {\n        return x[symbol]().toHex();\n    }\n}\n","// Adapted from: https://github.com/dcodeIO/long.js/blob/master/src/long.js\n// Apache License 2.0: https://github.com/dcodeIO/long.js/blob/master/LICENSE\n/* tslint:disable */\nimport { symbol } from \"../Numeric.js\";\n/**\n * wasm optimizations, to do native i64 multiplication and divide\n */\nvar wasm = null;\ntry {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\n        0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\n    ])), {}).exports;\n}\ncatch (e) {\n    // no wasm support :(\n}\n/**\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n *  See the from* functions below for more convenient ways of constructing Longs.\n * @exports Long\n * @class A Long class for representing a 64 bit two's-complement integer value.\n * @param {number} low The low (signed) 32 bits of the long\n * @param {number} high The high (signed) 32 bits of the long\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @constructor\n */\nexport function Long(low, high, unsigned) {\n    /**\n     * The low 32 bits as a signed value.\n     * @type {number}\n     */\n    this.low = low | 0;\n    /**\n     * The high 32 bits as a signed value.\n     * @type {number}\n     */\n    this.high = high | 0;\n    /**\n     * Whether unsigned or not.\n     * @type {boolean}\n     */\n    this.unsigned = !!unsigned;\n}\nLong.prototype.GetHashCode = function () {\n    let h1 = this.unsigned ? 1 : 0;\n    h1 = ((h1 << 5) + h1) ^ this.high;\n    h1 = ((h1 << 5) + h1) ^ this.low;\n    return h1;\n};\nLong.prototype.Equals = function (x) { return equals(this, x); };\nLong.prototype.CompareTo = function (x) { return compare(this, x); };\nLong.prototype.toString = function (radix) { return toString(this, radix); };\nLong.prototype.toJSON = function () { return toString(this); };\nLong.prototype[symbol] = function () {\n    const x = this;\n    return {\n        multiply: y => multiply(x, y),\n        toPrecision: sd => String(x) + (0).toPrecision(sd).substr(1),\n        toExponential: dp => String(x) + (0).toExponential(dp).substr(1),\n        toFixed: dp => String(x) + (0).toFixed(dp).substr(1),\n        toHex: () => toString(x.unsigned ? x : fromBytes(toBytes(x), true), 16),\n    };\n};\n// The internal representation of a long is the two given signed, 32-bit values.\n// We use 32-bit pieces because these are the size of integers on which\n// Javascript performs bit-operations.  For operations like addition and\n// multiplication, we split each number into 16 bit pieces, which can easily be\n// multiplied within Javascript's floating-point representation without overflow\n// or change in sign.\n//\n// In the algorithms below, we frequently reduce the negative case to the\n// positive case by negating the input(s) and then post-processing the result.\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n// a positive number, it overflows back into a negative).  Not handling this\n// case would often result in infinite recursion.\n//\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n// methods on which they depend.\n/**\n * An indicator used to reliably determine if an object is a Long or not.\n * @type {boolean}\n * @const\n * @private\n */\nLong.prototype.__isLong__;\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\n/**\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n * @inner\n */\nexport function isLong(obj) {\n    return (obj && obj[\"__isLong__\"]) === true;\n}\n/**\n * Tests if the specified object is a Long.\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n */\n// Long.isLong = isLong;\n/**\n * A cache of the Long representations of small integer values.\n * @type {!Object}\n * @inner\n */\nvar INT_CACHE = {};\n/**\n * A cache of the Long representations of small unsigned integer values.\n * @type {!Object}\n * @inner\n */\nvar UINT_CACHE = {};\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromInt(value, unsigned) {\n    var obj, cachedObj, cache;\n    if (unsigned) {\n        value >>>= 0;\n        if (cache = (0 <= value && value < 256)) {\n            cachedObj = UINT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n        if (cache)\n            UINT_CACHE[value] = obj;\n        return obj;\n    }\n    else {\n        value |= 0;\n        if (cache = (-128 <= value && value < 128)) {\n            cachedObj = INT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\n        if (cache)\n            INT_CACHE[value] = obj;\n        return obj;\n    }\n}\n/**\n * Returns a Long representing the given 32 bit integer value.\n * @function\n * @param {number} value The 32 bit integer in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromInt = fromInt;\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromNumber(value, unsigned) {\n    if (isNaN(value))\n        return unsigned ? UZERO : ZERO;\n    if (unsigned) {\n        if (value < 0)\n            return UZERO;\n        if (value >= TWO_PWR_64_DBL)\n            return MAX_UNSIGNED_VALUE;\n    }\n    else {\n        if (value <= -TWO_PWR_63_DBL)\n            return MIN_VALUE;\n        if (value + 1 >= TWO_PWR_63_DBL)\n            return MAX_VALUE;\n    }\n    if (value < 0)\n        return negate(fromNumber(-value, unsigned));\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n}\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n * @function\n * @param {number} value The number in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromNumber = fromNumber;\n/**\n * @param {number} lowBits\n * @param {number} highBits\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromBits(lowBits, highBits, unsigned) {\n    return new Long(lowBits, highBits, unsigned);\n}\n/**\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n *  assumed to use 32 bits.\n * @function\n * @param {number} lowBits The low 32 bits\n * @param {number} highBits The high 32 bits\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromBits = fromBits;\n/**\n * @function\n * @param {number} base\n * @param {number} exponent\n * @returns {number}\n * @inner\n */\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n/**\n * @param {string} str\n * @param {(boolean|number)=} unsigned\n * @param {number=} radix\n * @returns {!Long}\n * @inner\n */\nexport function fromString(str, unsigned, radix) {\n    if (str.length === 0)\n        throw Error('empty string');\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\n        return ZERO;\n    if (typeof unsigned === 'number') {\n        // For goog.math.long compatibility\n        radix = unsigned,\n            unsigned = false;\n    }\n    else {\n        unsigned = !!unsigned;\n    }\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    var p = str.indexOf('-');\n    if (p > 0)\n        throw Error('interior hyphen');\n    else if (p === 0) {\n        return negate(fromString(str.substring(1), unsigned, radix));\n    }\n    // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\n    var result = ZERO;\n    for (var i = 0; i < str.length; i += 8) {\n        var size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\n        if (size < 8) {\n            var power = fromNumber(pow_dbl(radix, size));\n            result = add(multiply(result, power), fromNumber(value));\n        }\n        else {\n            result = multiply(result, radixToPower);\n            result = add(result, fromNumber(value));\n        }\n    }\n    result.unsigned = unsigned;\n    return result;\n}\n/**\n * Returns a Long representation of the given string, written using the specified radix.\n * @function\n * @param {string} str The textual representation of the Long\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromString = fromString;\n/**\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromValue(val, unsigned) {\n    if (typeof val === 'number')\n        return fromNumber(val, unsigned);\n    if (typeof val === 'string')\n        return fromString(val, unsigned);\n    // Throws for non-objects, converts non-instanceof Long:\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n}\n/**\n * Converts the specified value to a Long using the appropriate from* function for its type.\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long}\n */\n// Long.fromValue = fromValue;\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n// no runtime penalty for these.\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_16_DBL = 1 << 16;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_24_DBL = 1 << 24;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n/**\n * @type {!Long}\n * @const\n * @inner\n */\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n/**\n * @type {!Long}\n * @inner\n */\nexport var ZERO = fromInt(0);\n/**\n * Signed zero.\n * @type {!Long}\n */\n// Long.ZERO = ZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UZERO = fromInt(0, true);\n/**\n * Unsigned zero.\n * @type {!Long}\n */\n// Long.UZERO = UZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var ONE = fromInt(1);\n/**\n * Signed one.\n * @type {!Long}\n */\n// Long.ONE = ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UONE = fromInt(1, true);\n/**\n * Unsigned one.\n * @type {!Long}\n */\n// Long.UONE = UONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var NEG_ONE = fromInt(-1);\n/**\n * Signed negative one.\n * @type {!Long}\n */\n// Long.NEG_ONE = NEG_ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n/**\n * Maximum signed value.\n * @type {!Long}\n */\n// Long.MAX_VALUE = MAX_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n/**\n * Maximum unsigned value.\n * @type {!Long}\n */\n// Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n/**\n * Minimum signed value.\n * @type {!Long}\n */\n// Long.MIN_VALUE = MIN_VALUE;\n/**\n * @alias Long.prototype\n * @inner\n */\n// var LongPrototype = Long.prototype;\n/**\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n * @this {!Long}\n * @returns {number}\n */\nexport function toInt($this) {\n    return $this.unsigned ? $this.low >>> 0 : $this.low;\n}\n;\n/**\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n * @this {!Long}\n * @returns {number}\n */\nexport function toNumber($this) {\n    if ($this.unsigned)\n        return (($this.high >>> 0) * TWO_PWR_32_DBL) + ($this.low >>> 0);\n    return $this.high * TWO_PWR_32_DBL + ($this.low >>> 0);\n}\n;\n/**\n * Converts the Long to a string written in the specified radix.\n * @this {!Long}\n * @param {number=} radix Radix (2-36), defaults to 10\n * @returns {string}\n * @override\n * @throws {RangeError} If `radix` is out of range\n */\nexport function toString($this, radix) {\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    if (isZero($this))\n        return '0';\n    if (isNegative($this)) { // Unsigned Longs are never negative\n        if (equals($this, MIN_VALUE)) {\n            // We need to change the Long value before it can be negated, so we remove\n            // the bottom-most digit in this base and then recurse to do the rest.\n            var radixLong = fromNumber(radix), div = divide($this, radixLong), rem1 = subtract(multiply(div, radixLong), $this);\n            return toString(div, radix) + toInt(rem1).toString(radix);\n        }\n        else\n            return '-' + toString(negate($this), radix);\n    }\n    // Do several (6) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 6), $this.unsigned), rem = $this;\n    var result = '';\n    while (true) {\n        var remDiv = divide(rem, radixToPower), intval = toInt(subtract(rem, multiply(remDiv, radixToPower))) >>> 0, digits = intval.toString(radix);\n        rem = remDiv;\n        if (isZero(rem))\n            return digits + result;\n        else {\n            while (digits.length < 6)\n                digits = '0' + digits;\n            result = '' + digits + result;\n        }\n    }\n}\n;\n/**\n * Gets the high 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed high bits\n */\nexport function getHighBits($this) {\n    return $this.high;\n}\n;\n/**\n * Gets the high 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned high bits\n */\nexport function getHighBitsUnsigned($this) {\n    return $this.high >>> 0;\n}\n;\n/**\n * Gets the low 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed low bits\n */\nexport function getLowBits($this) {\n    return $this.low;\n}\n;\n/**\n * Gets the low 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned low bits\n */\nexport function getLowBitsUnsigned($this) {\n    return $this.low >>> 0;\n}\n;\n/**\n * Gets the number of bits needed to represent the absolute value of this Long.\n * @this {!Long}\n * @returns {number}\n */\nexport function getNumBitsAbs($this) {\n    if (isNegative($this)) // Unsigned Longs are never negative\n        return equals($this, MIN_VALUE) ? 64 : getNumBitsAbs(negate($this));\n    var val = $this.high != 0 ? $this.high : $this.low;\n    for (var bit = 31; bit > 0; bit--)\n        if ((val & (1 << bit)) != 0)\n            break;\n    return $this.high != 0 ? bit + 33 : bit + 1;\n}\n;\n/**\n * Tests if this Long's value equals zero.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isZero($this) {\n    return $this.high === 0 && $this.low === 0;\n}\n;\n/**\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n * @returns {boolean}\n */\n// LongPrototype.eqz = LongPrototype.isZero;\n/**\n * Tests if this Long's value is negative.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isNegative($this) {\n    return !$this.unsigned && $this.high < 0;\n}\n;\n/**\n * Tests if this Long's value is positive.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isPositive($this) {\n    return $this.unsigned || $this.high >= 0;\n}\n;\n/**\n * Tests if this Long's value is odd.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isOdd($this) {\n    return ($this.low & 1) === 1;\n}\n;\n/**\n * Tests if this Long's value is even.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isEven($this) {\n    return ($this.low & 1) === 0;\n}\n;\n/**\n * Tests if this Long's value equals the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function equals($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if ($this.unsigned !== other.unsigned && ($this.high >>> 31) === 1 && (other.high >>> 31) === 1)\n        return false;\n    return $this.high === other.high && $this.low === other.low;\n}\n;\n/**\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.eq = LongPrototype.equals;\n/**\n * Tests if this Long's value differs from the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function notEquals($this, other) {\n    return !equals($this, /* validates */ other);\n}\n;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.neq = LongPrototype.notEquals;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ne = LongPrototype.notEquals;\n/**\n * Tests if this Long's value is less than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThan($this, other) {\n    return compare($this, /* validates */ other) < 0;\n}\n;\n/**\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lt = LongPrototype.lessThan;\n/**\n * Tests if this Long's value is less than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) <= 0;\n}\n;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lte = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.le = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is greater than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThan($this, other) {\n    return compare($this, /* validates */ other) > 0;\n}\n;\n/**\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gt = LongPrototype.greaterThan;\n/**\n * Tests if this Long's value is greater than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) >= 0;\n}\n;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gte = LongPrototype.greaterThanOrEqual;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ge = LongPrototype.greaterThanOrEqual;\n/**\n * Compares this Long's value with the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nexport function compare($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if (equals($this, other))\n        return 0;\n    var thisNeg = isNegative($this), otherNeg = isNegative(other);\n    if (thisNeg && !otherNeg)\n        return -1;\n    if (!thisNeg && otherNeg)\n        return 1;\n    // At this point the sign bits are the same\n    if (!$this.unsigned)\n        return isNegative(subtract($this, other)) ? -1 : 1;\n    // Both are positive if at least one is unsigned\n    return (other.high >>> 0) > ($this.high >>> 0) || (other.high === $this.high && (other.low >>> 0) > ($this.low >>> 0)) ? -1 : 1;\n}\n;\n/**\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\n// LongPrototype.comp = LongPrototype.compare;\n/**\n * Negates this Long's value.\n * @this {!Long}\n * @returns {!Long} Negated Long\n */\nexport function negate($this) {\n    if (!$this.unsigned && equals($this, MIN_VALUE))\n        return MIN_VALUE;\n    return add(not($this), ONE);\n}\n;\n/**\n * Negates this Long's value. This is an alias of {@link Long#negate}.\n * @function\n * @returns {!Long} Negated Long\n */\n// LongPrototype.neg = LongPrototype.negate;\n/**\n * Returns the sum of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} addend Addend\n * @returns {!Long} Sum\n */\nexport function add($this, addend) {\n    if (!isLong(addend))\n        addend = fromValue(addend);\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = addend.high >>> 16;\n    var b32 = addend.high & 0xFFFF;\n    var b16 = addend.low >>> 16;\n    var b00 = addend.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 + b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the difference of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nexport function subtract($this, subtrahend) {\n    if (!isLong(subtrahend))\n        subtrahend = fromValue(subtrahend);\n    return add($this, negate(subtrahend));\n}\n;\n/**\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n * @function\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\n// LongPrototype.sub = LongPrototype.subtract;\n/**\n * Returns the product of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nexport function multiply($this, multiplier) {\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    if (!isLong(multiplier))\n        multiplier = fromValue(multiplier);\n    // use wasm support if present\n    if (wasm) {\n        var low = wasm.mul($this.low, $this.high, multiplier.low, multiplier.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero(multiplier))\n        return $this.unsigned ? UZERO : ZERO;\n    if (equals($this, MIN_VALUE))\n        return isOdd(multiplier) ? MIN_VALUE : ZERO;\n    if (equals(multiplier, MIN_VALUE))\n        return isOdd($this) ? MIN_VALUE : ZERO;\n    if (isNegative($this)) {\n        if (isNegative(multiplier))\n            return multiply(negate($this), negate(multiplier));\n        else\n            return negate(multiply(negate($this), multiplier));\n    }\n    else if (isNegative(multiplier))\n        return negate(multiply($this, negate(multiplier)));\n    // If both longs are small, use float multiplication\n    if (lessThan($this, TWO_PWR_24) && lessThan(multiplier, TWO_PWR_24))\n        return fromNumber(toNumber($this) * toNumber(multiplier), $this.unsigned);\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n    // We can skip products that would overflow.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = multiplier.high >>> 16;\n    var b32 = multiplier.high & 0xFFFF;\n    var b16 = multiplier.low >>> 16;\n    var b00 = multiplier.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n * @function\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\n// LongPrototype.mul = LongPrototype.multiply;\n/**\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\n *  unsigned if this Long is unsigned.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nexport function divide($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    if (isZero(divisor))\n        throw Error('division by zero');\n    // use wasm support if present\n    if (wasm) {\n        // guard against signed division overflow: the largest\n        // negative number / -1 would be 1 larger than the largest\n        // positive number, due to two's complement.\n        if (!$this.unsigned &&\n            $this.high === -0x80000000 &&\n            divisor.low === -1 && divisor.high === -1) {\n            // be consistent with non-wasm code path\n            return $this;\n        }\n        var low = ($this.unsigned ? wasm.div_u : wasm.div_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    var approx, rem, res;\n    if (!$this.unsigned) {\n        // This section is only relevant for signed longs and is derived from the\n        // closure library as a whole.\n        if (equals($this, MIN_VALUE)) {\n            if (equals(divisor, ONE) || equals(divisor, NEG_ONE))\n                return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n            else if (equals(divisor, MIN_VALUE))\n                return ONE;\n            else {\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n                var halfThis = shiftRight($this, 1);\n                approx = shiftLeft(divide(halfThis, divisor), 1);\n                if (equals(approx, ZERO)) {\n                    return isNegative(divisor) ? ONE : NEG_ONE;\n                }\n                else {\n                    rem = subtract($this, multiply(divisor, approx));\n                    res = add(approx, divide(rem, divisor));\n                    return res;\n                }\n            }\n        }\n        else if (equals(divisor, MIN_VALUE))\n            return $this.unsigned ? UZERO : ZERO;\n        if (isNegative($this)) {\n            if (isNegative(divisor))\n                return divide(negate($this), negate(divisor));\n            return negate(divide(negate($this), divisor));\n        }\n        else if (isNegative(divisor))\n            return negate(divide($this, negate(divisor)));\n        res = ZERO;\n    }\n    else {\n        // The algorithm below has not been made for unsigned longs. It's therefore\n        // required to take special care of the MSB prior to running it.\n        if (!divisor.unsigned)\n            divisor = toUnsigned(divisor);\n        if (greaterThan(divisor, $this))\n            return UZERO;\n        if (greaterThan(divisor, shiftRightUnsigned($this, 1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n            return UONE;\n        res = UZERO;\n    }\n    // Repeat the following until the remainder is less than other:  find a\n    // floating-point that approximates remainder / other *from below*, add this\n    // into the result, and subtract it from the remainder.  It is critical that\n    // the approximate value is less than or equal to the real value so that the\n    // remainder never becomes negative.\n    rem = $this;\n    while (greaterThanOrEqual(rem, divisor)) {\n        // Approximate the result of division. This may be a little greater or\n        // smaller than the actual value.\n        approx = Math.max(1, Math.floor(toNumber(rem) / toNumber(divisor)));\n        // We will tweak the approximate result by changing it in the 48-th digit or\n        // the smallest non-fractional digit, whichever is larger.\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2), delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48), \n        // Decrease the approximation until it is smaller than the remainder.  Note\n        // that if it is too large, the product overflows and is negative.\n        approxRes = fromNumber(approx), approxRem = multiply(approxRes, divisor);\n        while (isNegative(approxRem) || greaterThan(approxRem, rem)) {\n            approx -= delta;\n            approxRes = fromNumber(approx, $this.unsigned);\n            approxRem = multiply(approxRes, divisor);\n        }\n        // We know the answer can't be zero... and actually, zero would cause\n        // infinite recursion since we would make no progress.\n        if (isZero(approxRes))\n            approxRes = ONE;\n        res = add(res, approxRes);\n        rem = subtract(rem, approxRem);\n    }\n    return res;\n}\n;\n/**\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\n// LongPrototype.div = LongPrototype.divide;\n/**\n * Returns this Long modulo the specified.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nexport function modulo($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    // use wasm support if present\n    if (wasm) {\n        var low = ($this.unsigned ? wasm.rem_u : wasm.rem_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    return subtract($this, multiply(divide($this, divisor), divisor));\n}\n;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.mod = LongPrototype.modulo;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.rem = LongPrototype.modulo;\n/**\n * Returns the bitwise NOT of this Long.\n * @this {!Long}\n * @returns {!Long}\n */\nexport function not($this) {\n    return fromBits(~$this.low, ~$this.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise AND of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function and($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low & other.low, $this.high & other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise OR of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function or($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low | other.low, $this.high | other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise XOR of this Long and the given one.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function xor($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low ^ other.low, $this.high ^ other.high, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftLeft($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits($this.low << numBits, ($this.high << numBits) | ($this.low >>> (32 - numBits)), $this.unsigned);\n    else\n        return fromBits(0, $this.low << (numBits - 32), $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shl = LongPrototype.shiftLeft;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRight($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits(($this.low >>> numBits) | ($this.high << (32 - numBits)), $this.high >> numBits, $this.unsigned);\n    else\n        return fromBits($this.high >> (numBits - 32), $this.high >= 0 ? 0 : -1, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr = LongPrototype.shiftRight;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRightUnsigned($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    numBits &= 63;\n    if (numBits === 0)\n        return $this;\n    else {\n        var high = $this.high;\n        if (numBits < 32) {\n            var low = $this.low;\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, $this.unsigned);\n        }\n        else if (numBits === 32)\n            return fromBits(high, 0, $this.unsigned);\n        else\n            return fromBits(high >>> (numBits - 32), 0, $this.unsigned);\n    }\n}\n;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shru = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits rotated to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateLeft = function rotateLeft(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.low << numBits) | (this.high >>> b)), ((this.high << numBits) | (this.low >>> b)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.high << numBits) | (this.low >>> b)), ((this.low << numBits) | (this.high >>> b)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotl = LongPrototype.rotateLeft;\n/**\n * Returns this Long with bits rotated to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateRight = function rotateRight(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.high << b) | (this.low >>> numBits)), ((this.low << b) | (this.high >>> numBits)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.low << b) | (this.high >>> numBits)), ((this.high << b) | (this.low >>> numBits)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotr = LongPrototype.rotateRight;\n/**\n * Converts this Long to signed.\n * @this {!Long}\n * @returns {!Long} Signed long\n */\nexport function toSigned($this) {\n    if (!$this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, false);\n}\n;\n/**\n * Converts this Long to unsigned.\n * @this {!Long}\n * @returns {!Long} Unsigned long\n */\nexport function toUnsigned($this) {\n    if ($this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, true);\n}\n;\n/**\n * Converts this Long to its byte representation.\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @this {!Long}\n * @returns {!Array.<number>} Byte representation\n */\nexport function toBytes($this, le) {\n    return le ? toBytesLE($this) : toBytesBE($this);\n}\n;\n/**\n * Converts this Long to its little endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Little endian byte representation\n */\nexport function toBytesLE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        lo & 0xff,\n        lo >>> 8 & 0xff,\n        lo >>> 16 & 0xff,\n        lo >>> 24,\n        hi & 0xff,\n        hi >>> 8 & 0xff,\n        hi >>> 16 & 0xff,\n        hi >>> 24\n    ];\n}\n;\n/**\n * Converts this Long to its big endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Big endian byte representation\n */\nexport function toBytesBE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        hi >>> 24,\n        hi >>> 16 & 0xff,\n        hi >>> 8 & 0xff,\n        hi & 0xff,\n        lo >>> 24,\n        lo >>> 16 & 0xff,\n        lo >>> 8 & 0xff,\n        lo & 0xff\n    ];\n}\n;\n/**\n * Creates a Long from its byte representation.\n * @param {!Array.<number>} bytes Byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytes(bytes, unsigned, le) {\n    return le ? fromBytesLE(bytes, unsigned) : fromBytesBE(bytes, unsigned);\n}\n;\n/**\n * Creates a Long from its little endian byte representation.\n * @param {!Array.<number>} bytes Little endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesLE(bytes, unsigned) {\n    return new Long(bytes[0] |\n        bytes[1] << 8 |\n        bytes[2] << 16 |\n        bytes[3] << 24, bytes[4] |\n        bytes[5] << 8 |\n        bytes[6] << 16 |\n        bytes[7] << 24, unsigned);\n}\n;\n/**\n * Creates a Long from its big endian byte representation.\n * @param {!Array.<number>} bytes Big endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesBE(bytes, unsigned) {\n    return new Long(bytes[4] << 24 |\n        bytes[5] << 16 |\n        bytes[6] << 8 |\n        bytes[7], bytes[0] << 24 |\n        bytes[1] << 16 |\n        bytes[2] << 8 |\n        bytes[3], unsigned);\n}\n;\n","export function create(pattern, options = 0) {\n    // Supported RegexOptions\n    // * IgnoreCase:  0x0001\n    // * Multiline:   0x0002\n    // * Singleline:  0x0010\n    // * ECMAScript:  0x0100 (ignored)\n    if ((options & ~(1 ^ 2 ^ 16 ^ 256)) !== 0) {\n        throw new Error(\"RegexOptions only supports: IgnoreCase, Multiline, Singleline and ECMAScript\");\n    }\n    let flags = \"g\";\n    flags += options & 1 ? \"i\" : \"\"; // 0x0001 RegexOptions.IgnoreCase\n    flags += options & 2 ? \"m\" : \"\";\n    flags += options & 16 ? \"s\" : \"\";\n    return new RegExp(pattern, flags);\n}\n// From http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nexport function escape(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\nexport function unescape(str) {\n    return str.replace(/\\\\([\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|])/g, \"$1\");\n}\nexport function isMatch(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.test(str);\n}\nexport function match(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.exec(str);\n}\nexport function matches(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    if (!reg.global) {\n        throw new Error(\"Non-global RegExp\"); // Prevent infinite loop\n    }\n    let m = reg.exec(str);\n    const matches = [];\n    while (m !== null) {\n        matches.push(m);\n        m = reg.exec(str);\n    }\n    return matches;\n}\nexport function options(reg) {\n    let options = 256; // ECMAScript\n    options |= reg.ignoreCase ? 1 : 0;\n    options |= reg.multiline ? 2 : 0;\n    return options;\n}\nexport function replace(reg, input, replacement, limit, offset = 0) {\n    function replacer() {\n        let res = arguments[0];\n        if (limit) {\n            limit--;\n            const match = [];\n            const len = arguments.length;\n            // arguments: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_function_as_a_parameter\n            // * match: matched substring\n            // * p1, p2, ...: nth capture group string\n            // * offset: offset of matched substring\n            // * string: whole string examined\n            // * groups: named capturing groups\n            //           ONLY if regex contains a named capture group AND browser supports named groups\n            // -> last element can be groups OR input string\n            // -> check if last element is string\n            const withGroups = typeof arguments[len - 1] !== \"string\";\n            let pLast = withGroups ? len - 3 : len - 2;\n            for (let i = 0; i < pLast; i++) {\n                match.push(arguments[i]);\n            }\n            match.index = arguments[pLast++];\n            match.input = arguments[pLast++];\n            if (withGroups) {\n                match.groups = arguments[pLast];\n            }\n            res = replacement(match);\n        }\n        return res;\n    }\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit !== null && limit !== void 0 ? limit : 0);\n        input = tmp;\n        limit = undefined;\n    }\n    if (typeof replacement === \"function\") {\n        limit = limit == null ? -1 : limit;\n        return input.substring(0, offset) + input.substring(offset).replace(reg, replacer);\n    }\n    else {\n        replacement =\n            replacement\n                // $0 doesn't work with JS regex, see #1155\n                .replace(/\\$0/g, (_s) => \"$&\")\n                // named groups in replacement are `${name}` in .Net, but `$<name>` in JS (in regex: groups are `(?<name>...)` in both)\n                .replace(/\\${([^}]+)}/g, \"\\$<$1>\");\n        if (limit != null) {\n            let m;\n            const sub1 = input.substring(offset);\n            const _matches = matches(reg, sub1);\n            const sub2 = matches.length > limit ? (m = _matches[limit - 1], sub1.substring(0, m.index + m[0].length)) : sub1;\n            return input.substring(0, offset) + sub2.replace(reg, replacement)\n                + input.substring(offset + sub2.length);\n        }\n        else {\n            return input.replace(reg, replacement);\n        }\n    }\n}\nexport function split(reg, input, limit, offset = 0) {\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit !== null && limit !== void 0 ? limit : 0);\n        input = tmp;\n        limit = undefined;\n    }\n    input = input.substring(offset);\n    return input.split(reg, limit);\n}\n","import { toString as dateToString } from \"./Date.js\";\nimport { compare as numericCompare, isNumeric, multiply, toExponential, toFixed, toHex, toPrecision } from \"./Numeric.js\";\nimport { escape } from \"./RegExp.js\";\nimport { toString } from \"./Types.js\";\nconst fsFormatRegExp = /(^|[^%])%([0+\\- ]*)(\\*|\\d+)?(?:\\.(\\d+))?(\\w)/g;\nconst interpolateRegExp = /(?:(^|[^%])%([0+\\- ]*)(\\d+)?(?:\\.(\\d+))?(\\w))?%P\\(\\)/g;\nconst formatRegExp = /\\{(\\d+)(,-?\\d+)?(?:\\:([a-zA-Z])(\\d{0,2})|\\:(.+?))?\\}/g;\nfunction isLessThan(x, y) {\n    return numericCompare(x, y) < 0;\n}\nfunction cmp(x, y, ic) {\n    function isIgnoreCase(i) {\n        return i === true ||\n            i === 1 /* CurrentCultureIgnoreCase */ ||\n            i === 3 /* InvariantCultureIgnoreCase */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    function isOrdinal(i) {\n        return i === 4 /* Ordinal */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    if (y == null) {\n        return 1;\n    } // everything is bigger than null\n    if (isOrdinal(ic)) {\n        if (isIgnoreCase(ic)) {\n            x = x.toLowerCase();\n            y = y.toLowerCase();\n        }\n        return (x === y) ? 0 : (x < y ? -1 : 1);\n    }\n    else {\n        if (isIgnoreCase(ic)) {\n            x = x.toLocaleLowerCase();\n            y = y.toLocaleLowerCase();\n        }\n        return x.localeCompare(y);\n    }\n}\nexport function compare(...args) {\n    switch (args.length) {\n        case 2: return cmp(args[0], args[1], false);\n        case 3: return cmp(args[0], args[1], args[2]);\n        case 4: return cmp(args[0], args[1], args[2] === true);\n        case 5: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), false);\n        case 6: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5]);\n        case 7: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5] === true);\n        default: throw new Error(\"String.compare: Unsupported number of parameters\");\n    }\n}\nexport function compareOrdinal(x, y) {\n    return cmp(x, y, 4 /* Ordinal */);\n}\nexport function compareTo(x, y) {\n    return cmp(x, y, 0 /* CurrentCulture */);\n}\nexport function startsWith(str, pattern, ic) {\n    if (str.length >= pattern.length) {\n        return cmp(str.substr(0, pattern.length), pattern, ic) === 0;\n    }\n    return false;\n}\nexport function indexOfAny(str, anyOf, ...args) {\n    if (str == null || str === \"\") {\n        return -1;\n    }\n    const startIndex = (args.length > 0) ? args[0] : 0;\n    if (startIndex < 0) {\n        throw new Error(\"Start index cannot be negative\");\n    }\n    const length = (args.length > 1) ? args[1] : str.length - startIndex;\n    if (length < 0) {\n        throw new Error(\"Length cannot be negative\");\n    }\n    if (length > str.length - startIndex) {\n        throw new Error(\"Invalid startIndex and length\");\n    }\n    str = str.substr(startIndex, length);\n    for (const c of anyOf) {\n        const index = str.indexOf(c);\n        if (index > -1) {\n            return index + startIndex;\n        }\n    }\n    return -1;\n}\nexport function printf(input) {\n    return {\n        input,\n        cont: fsFormat(input),\n    };\n}\nexport function interpolate(str, values) {\n    let valIdx = 0;\n    let strIdx = 0;\n    let result = \"\";\n    interpolateRegExp.lastIndex = 0;\n    let match = interpolateRegExp.exec(str);\n    while (match) {\n        // The first group corresponds to the no-escape char (^|[^%]), the actual pattern starts in the next char\n        // Note: we don't use negative lookbehind because some browsers don't support it yet\n        const matchIndex = match.index + (match[1] || \"\").length;\n        result += str.substring(strIdx, matchIndex).replace(/%%/g, \"%\");\n        const [, , flags, padLength, precision, format] = match;\n        result += formatReplacement(values[valIdx++], flags, padLength, precision, format);\n        strIdx = interpolateRegExp.lastIndex;\n        // Likewise we need to move interpolateRegExp.lastIndex one char behind to make sure we match the no-escape char next time\n        interpolateRegExp.lastIndex -= 1;\n        match = interpolateRegExp.exec(str);\n    }\n    result += str.substring(strIdx).replace(/%%/g, \"%\");\n    return result;\n}\nfunction continuePrint(cont, arg) {\n    return typeof arg === \"string\" ? cont(arg) : arg.cont(cont);\n}\nexport function toConsole(arg) {\n    // Don't remove the lambda here, see #1357\n    return continuePrint((x) => console.log(x), arg);\n}\nexport function toConsoleError(arg) {\n    return continuePrint((x) => console.error(x), arg);\n}\nexport function toText(arg) {\n    return continuePrint((x) => x, arg);\n}\nexport function toFail(arg) {\n    return continuePrint((x) => {\n        throw new Error(x);\n    }, arg);\n}\nfunction formatReplacement(rep, flags, padLength, precision, format) {\n    let sign = \"\";\n    flags = flags || \"\";\n    format = format || \"\";\n    if (isNumeric(rep)) {\n        if (format.toLowerCase() !== \"x\") {\n            if (isLessThan(rep, 0)) {\n                rep = multiply(rep, -1);\n                sign = \"-\";\n            }\n            else {\n                if (flags.indexOf(\" \") >= 0) {\n                    sign = \" \";\n                }\n                else if (flags.indexOf(\"+\") >= 0) {\n                    sign = \"+\";\n                }\n            }\n        }\n        precision = precision == null ? null : parseInt(precision, 10);\n        switch (format) {\n            case \"f\":\n            case \"F\":\n                precision = precision != null ? precision : 6;\n                rep = toFixed(rep, precision);\n                break;\n            case \"g\":\n            case \"G\":\n                rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                break;\n            case \"e\":\n            case \"E\":\n                rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                break;\n            case \"x\":\n                rep = toHex(rep);\n                break;\n            case \"X\":\n                rep = toHex(rep).toUpperCase();\n                break;\n            default: // AOid\n                rep = String(rep);\n                break;\n        }\n    }\n    else if (rep instanceof Date) {\n        rep = dateToString(rep);\n    }\n    else {\n        rep = toString(rep);\n    }\n    padLength = typeof padLength === \"number\" ? padLength : parseInt(padLength, 10);\n    if (!isNaN(padLength)) {\n        const zeroFlag = flags.indexOf(\"0\") >= 0; // Use '0' for left padding\n        const minusFlag = flags.indexOf(\"-\") >= 0; // Right padding\n        const ch = minusFlag || !zeroFlag ? \" \" : \"0\";\n        if (ch === \"0\") {\n            rep = padLeft(rep, padLength - sign.length, ch, minusFlag);\n            rep = sign + rep;\n        }\n        else {\n            rep = padLeft(sign + rep, padLength, ch, minusFlag);\n        }\n    }\n    else {\n        rep = sign + rep;\n    }\n    return rep;\n}\nfunction createPrinter(cont, _strParts, _matches, _result = \"\", padArg = -1) {\n    return (...args) => {\n        // Make copies of the values passed by reference because the function can be used multiple times\n        let result = _result;\n        const strParts = _strParts.slice();\n        const matches = _matches.slice();\n        for (const arg of args) {\n            const [, , flags, _padLength, precision, format] = matches[0];\n            let padLength = _padLength;\n            if (padArg >= 0) {\n                padLength = padArg;\n                padArg = -1;\n            }\n            else if (padLength === \"*\") {\n                if (arg < 0) {\n                    throw new Error(\"Non-negative number required\");\n                }\n                padArg = arg;\n                continue;\n            }\n            result += strParts[0];\n            result += formatReplacement(arg, flags, padLength, precision, format);\n            strParts.splice(0, 1);\n            matches.splice(0, 1);\n        }\n        if (matches.length === 0) {\n            result += strParts[0];\n            return cont(result);\n        }\n        else {\n            return createPrinter(cont, strParts, matches, result, padArg);\n        }\n    };\n}\nexport function fsFormat(str) {\n    return (cont) => {\n        fsFormatRegExp.lastIndex = 0;\n        const strParts = [];\n        const matches = [];\n        let strIdx = 0;\n        let match = fsFormatRegExp.exec(str);\n        while (match) {\n            // The first group corresponds to the no-escape char (^|[^%]), the actual pattern starts in the next char\n            // Note: we don't use negative lookbehind because some browsers don't support it yet\n            const matchIndex = match.index + (match[1] || \"\").length;\n            strParts.push(str.substring(strIdx, matchIndex).replace(/%%/g, \"%\"));\n            matches.push(match);\n            strIdx = fsFormatRegExp.lastIndex;\n            // Likewise we need to move fsFormatRegExp.lastIndex one char behind to make sure we match the no-escape char next time\n            fsFormatRegExp.lastIndex -= 1;\n            match = fsFormatRegExp.exec(str);\n        }\n        if (strParts.length === 0) {\n            return cont(str.replace(/%%/g, \"%\"));\n        }\n        else {\n            strParts.push(str.substring(strIdx).replace(/%%/g, \"%\"));\n            return createPrinter(cont, strParts, matches);\n        }\n    };\n}\nexport function format(str, ...args) {\n    if (typeof str === \"object\" && args.length > 0) {\n        // Called with culture info\n        str = args[0];\n        args.shift();\n    }\n    return str.replace(formatRegExp, (_, idx, padLength, format, precision, pattern) => {\n        let rep = args[idx];\n        if (isNumeric(rep)) {\n            precision = precision == null ? null : parseInt(precision, 10);\n            switch (format) {\n                case \"f\":\n                case \"F\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(rep, precision);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                    break;\n                case \"p\":\n                case \"P\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(multiply(rep, 100), precision) + \" %\";\n                    break;\n                case \"d\":\n                case \"D\":\n                    rep = precision != null ? padLeft(String(rep), precision, \"0\") : String(rep);\n                    break;\n                case \"x\":\n                case \"X\":\n                    rep = precision != null ? padLeft(toHex(rep), precision, \"0\") : toHex(rep);\n                    if (format === \"X\") {\n                        rep = rep.toUpperCase();\n                    }\n                    break;\n                default:\n                    if (pattern) {\n                        let sign = \"\";\n                        rep = pattern.replace(/(0+)(\\.0+)?/, (_, intPart, decimalPart) => {\n                            if (isLessThan(rep, 0)) {\n                                rep = multiply(rep, -1);\n                                sign = \"-\";\n                            }\n                            rep = toFixed(rep, decimalPart != null ? decimalPart.length - 1 : 0);\n                            return padLeft(rep, (intPart || \"\").length - sign.length + (decimalPart != null ? decimalPart.length : 0), \"0\");\n                        });\n                        rep = sign + rep;\n                    }\n            }\n        }\n        else if (rep instanceof Date) {\n            rep = dateToString(rep, pattern || format);\n        }\n        else {\n            rep = toString(rep);\n        }\n        padLength = parseInt((padLength || \" \").substring(1), 10);\n        if (!isNaN(padLength)) {\n            rep = padLeft(String(rep), Math.abs(padLength), \" \", padLength < 0);\n        }\n        return rep;\n    });\n}\nexport function endsWith(str, search) {\n    const idx = str.lastIndexOf(search);\n    return idx >= 0 && idx === str.length - search.length;\n}\nexport function initialize(n, f) {\n    if (n < 0) {\n        throw new Error(\"String length must be non-negative\");\n    }\n    const xs = new Array(n);\n    for (let i = 0; i < n; i++) {\n        xs[i] = f(i);\n    }\n    return xs.join(\"\");\n}\nexport function insert(str, startIndex, value) {\n    if (startIndex < 0 || startIndex > str.length) {\n        throw new Error(\"startIndex is negative or greater than the length of this instance.\");\n    }\n    return str.substring(0, startIndex) + value + str.substring(startIndex);\n}\nexport function isNullOrEmpty(str) {\n    return typeof str !== \"string\" || str.length === 0;\n}\nexport function isNullOrWhiteSpace(str) {\n    return typeof str !== \"string\" || /^\\s*$/.test(str);\n}\nexport function concat(...xs) {\n    return xs.map((x) => String(x)).join(\"\");\n}\nexport function join(delimiter, xs) {\n    if (Array.isArray(xs)) {\n        return xs.join(delimiter);\n    }\n    else {\n        return Array.from(xs).join(delimiter);\n    }\n}\nexport function joinWithIndices(delimiter, xs, startIndex, count) {\n    const endIndexPlusOne = startIndex + count;\n    if (endIndexPlusOne > xs.length) {\n        throw new Error(\"Index and count must refer to a location within the buffer.\");\n    }\n    return xs.slice(startIndex, endIndexPlusOne).join(delimiter);\n}\nfunction notSupported(name) {\n    throw new Error(\"The environment doesn't support '\" + name + \"', please use a polyfill.\");\n}\nexport function toBase64String(inArray) {\n    let str = \"\";\n    for (let i = 0; i < inArray.length; i++) {\n        str += String.fromCharCode(inArray[i]);\n    }\n    return typeof btoa === \"function\" ? btoa(str) : notSupported(\"btoa\");\n}\nexport function fromBase64String(b64Encoded) {\n    const binary = typeof atob === \"function\" ? atob(b64Encoded) : notSupported(\"atob\");\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\nexport function padLeft(str, len, ch, isRight) {\n    ch = ch || \" \";\n    len = len - str.length;\n    for (let i = 0; i < len; i++) {\n        str = isRight ? str + ch : ch + str;\n    }\n    return str;\n}\nexport function padRight(str, len, ch) {\n    return padLeft(str, len, ch, true);\n}\nexport function remove(str, startIndex, count) {\n    if (startIndex >= str.length) {\n        throw new Error(\"startIndex must be less than length of string\");\n    }\n    if (typeof count === \"number\" && (startIndex + count) > str.length) {\n        throw new Error(\"Index and count must refer to a location within the string.\");\n    }\n    return str.slice(0, startIndex) + (typeof count === \"number\" ? str.substr(startIndex + count) : \"\");\n}\nexport function replace(str, search, replace) {\n    return str.replace(new RegExp(escape(search), \"g\"), replace);\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function getCharAtIndex(input, index) {\n    if (index < 0 || index >= input.length) {\n        throw new Error(\"Index was outside the bounds of the array.\");\n    }\n    return input[index];\n}\nexport function split(str, splitters, count, removeEmpty) {\n    count = typeof count === \"number\" ? count : undefined;\n    removeEmpty = typeof removeEmpty === \"number\" ? removeEmpty : undefined;\n    if (count && count < 0) {\n        throw new Error(\"Count cannot be less than zero\");\n    }\n    if (count === 0) {\n        return [];\n    }\n    if (!Array.isArray(splitters)) {\n        if (removeEmpty === 0) {\n            return str.split(splitters, count);\n        }\n        const len = arguments.length;\n        splitters = Array(len - 1);\n        for (let key = 1; key < len; key++) {\n            splitters[key - 1] = arguments[key];\n        }\n    }\n    splitters = splitters.map((x) => escape(x));\n    splitters = splitters.length > 0 ? splitters : [\" \"];\n    let i = 0;\n    const splits = [];\n    const reg = new RegExp(splitters.join(\"|\"), \"g\");\n    while (count == null || count > 1) {\n        const m = reg.exec(str);\n        if (m === null) {\n            break;\n        }\n        if (!removeEmpty || (m.index - i) > 0) {\n            count = count != null ? count - 1 : count;\n            splits.push(str.substring(i, m.index));\n        }\n        i = reg.lastIndex;\n    }\n    if (!removeEmpty || (str.length - i) > 0) {\n        splits.push(str.substring(i));\n    }\n    return splits;\n}\nexport function trim(str, ...chars) {\n    if (chars.length === 0) {\n        return str.trim();\n    }\n    const pattern = \"[\" + escape(chars.join(\"\")) + \"]+\";\n    return str.replace(new RegExp(\"^\" + pattern), \"\").replace(new RegExp(pattern + \"$\"), \"\");\n}\nexport function trimStart(str, ...chars) {\n    return chars.length === 0\n        ? str.trimStart()\n        : str.replace(new RegExp(\"^[\" + escape(chars.join(\"\")) + \"]+\"), \"\");\n}\nexport function trimEnd(str, ...chars) {\n    return chars.length === 0\n        ? str.trimEnd()\n        : str.replace(new RegExp(\"[\" + escape(chars.join(\"\")) + \"]+$\"), \"\");\n}\nexport function filter(pred, x) {\n    return x.split(\"\").filter((c) => pred(c)).join(\"\");\n}\nexport function substring(str, startIndex, length) {\n    if ((startIndex + (length || 0) > str.length)) {\n        throw new Error(\"Invalid startIndex and/or length\");\n    }\n    return length != null ? str.substr(startIndex, length) : str.substr(startIndex);\n}\n","import { value as value_2, defaultArg, some } from \"./Option.js\";\nimport { min as min_1, compare, getEnumerator, comparePrimitives, max as max_1 } from \"./Util.js\";\n\nexport function Helpers_allocateArrayFromCons(cons, len) {\n    if ((typeof cons) === \"function\") {\n        return new cons(len);\n    }\n    else {\n        return new Array(len);\n    }\n}\n\nfunction indexNotFound() {\n    throw (new Error(\"An index satisfying the predicate was not found in the collection.\"));\n}\n\nfunction differentLengths() {\n    throw (new Error(\"Arrays had different lengths\"));\n}\n\nexport function append(array1, array2, cons) {\n    const len1 = array1.length | 0;\n    const len2 = array2.length | 0;\n    const newArray = Helpers_allocateArrayFromCons(cons, len1 + len2);\n    for (let i = 0; i <= (len1 - 1); i++) {\n        newArray[i] = array1[i];\n    }\n    for (let i_1 = 0; i_1 <= (len2 - 1); i_1++) {\n        newArray[i_1 + len1] = array2[i_1];\n    }\n    return newArray;\n}\n\nexport function filter(predicate, array) {\n    return array.filter(predicate);\n}\n\nexport function fill(target, targetIndex, count, value) {\n    const start = targetIndex | 0;\n    return target.fill(value, start, (start + count));\n}\n\nexport function getSubArray(array, start, count) {\n    const start_1 = start | 0;\n    return array.slice(start_1, (start_1 + count));\n}\n\nexport function last(array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    return array[array.length - 1];\n}\n\nexport function tryLast(array) {\n    if (array.length === 0) {\n        return void 0;\n    }\n    else {\n        return some(array[array.length - 1]);\n    }\n}\n\nexport function mapIndexed(f, source, cons) {\n    const len = source.length | 0;\n    const target = Helpers_allocateArrayFromCons(cons, len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = f(i, source[i]);\n    }\n    return target;\n}\n\nexport function map(f, source, cons) {\n    const len = source.length | 0;\n    const target = Helpers_allocateArrayFromCons(cons, len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = f(source[i]);\n    }\n    return target;\n}\n\nexport function mapIndexed2(f, source1, source2, cons) {\n    if (source1.length !== source2.length) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(i, source1[i], source2[i]);\n    }\n    return result;\n}\n\nexport function map2(f, source1, source2, cons) {\n    if (source1.length !== source2.length) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(source1[i], source2[i]);\n    }\n    return result;\n}\n\nexport function mapIndexed3(f, source1, source2, source3, cons) {\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(i, source1[i], source2[i], source3[i]);\n    }\n    return result;\n}\n\nexport function map3(f, source1, source2, source3, cons) {\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(source1[i], source2[i], source3[i]);\n    }\n    return result;\n}\n\nexport function mapFold(mapping, state, array, cons) {\n    const matchValue = array.length | 0;\n    if (matchValue === 0) {\n        return [[], state];\n    }\n    else {\n        let acc = state;\n        const res = Helpers_allocateArrayFromCons(cons, matchValue);\n        for (let i = 0; i <= (array.length - 1); i++) {\n            const patternInput = mapping(acc, array[i]);\n            res[i] = patternInput[0];\n            acc = patternInput[1];\n        }\n        return [res, acc];\n    }\n}\n\nexport function mapFoldBack(mapping, array, state, cons) {\n    const matchValue = array.length | 0;\n    if (matchValue === 0) {\n        return [[], state];\n    }\n    else {\n        let acc = state;\n        const res = Helpers_allocateArrayFromCons(cons, matchValue);\n        for (let i = array.length - 1; i >= 0; i--) {\n            const patternInput = mapping(array[i], acc);\n            res[i] = patternInput[0];\n            acc = patternInput[1];\n        }\n        return [res, acc];\n    }\n}\n\nexport function indexed(source) {\n    const len = source.length | 0;\n    const target = new Array(len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = [i, source[i]];\n    }\n    return target;\n}\n\nexport function truncate(count, array) {\n    const count_1 = max_1((x, y) => comparePrimitives(x, y), 0, count) | 0;\n    const start = 0;\n    return array.slice(start, (start + count_1));\n}\n\nexport function concat(arrays, cons) {\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\n    const matchValue = arrays_1.length | 0;\n    switch (matchValue) {\n        case 0: {\n            return Helpers_allocateArrayFromCons(cons, 0);\n        }\n        case 1: {\n            return arrays_1[0];\n        }\n        default: {\n            let totalIdx = 0;\n            let totalLength = 0;\n            for (let idx = 0; idx <= (arrays_1.length - 1); idx++) {\n                const arr_1 = arrays_1[idx];\n                totalLength = ((totalLength + arr_1.length) | 0);\n            }\n            const result = Helpers_allocateArrayFromCons(cons, totalLength);\n            for (let idx_1 = 0; idx_1 <= (arrays_1.length - 1); idx_1++) {\n                const arr_2 = arrays_1[idx_1];\n                for (let j = 0; j <= (arr_2.length - 1); j++) {\n                    result[totalIdx] = arr_2[j];\n                    totalIdx = ((totalIdx + 1) | 0);\n                }\n            }\n            return result;\n        }\n    }\n}\n\nexport function collect(mapping, array, cons) {\n    return concat(map(mapping, array, null), cons);\n}\n\nexport function where(predicate, array) {\n    return array.filter(predicate);\n}\n\nexport function contains(value, array, eq) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return false;\n            }\n            else if (eq.Equals(value, array[i])) {\n                return true;\n            }\n            else {\n                i_mut = (i + 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function empty(cons) {\n    return Helpers_allocateArrayFromCons(cons, 0);\n}\n\nexport function singleton(value, cons) {\n    const ar = Helpers_allocateArrayFromCons(cons, 1);\n    ar[0] = value;\n    return ar;\n}\n\nexport function initialize(count, initializer, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, count);\n    for (let i = 0; i <= (count - 1); i++) {\n        result[i] = initializer(i);\n    }\n    return result;\n}\n\nexport function pairwise(array) {\n    if (array.length < 2) {\n        return [];\n    }\n    else {\n        const count = (array.length - 1) | 0;\n        const result = new Array(count);\n        for (let i = 0; i <= (count - 1); i++) {\n            result[i] = [array[i], array[i + 1]];\n        }\n        return result;\n    }\n}\n\nexport function replicate(count, initial, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    const result = Helpers_allocateArrayFromCons(cons, count);\n    for (let i = 0; i <= (result.length - 1); i++) {\n        result[i] = initial;\n    }\n    return result;\n}\n\nexport function copy(array) {\n    return array.slice();\n}\n\nexport function reverse(array) {\n    const array_2 = array.slice();\n    return array_2.reverse();\n}\n\nexport function scan(folder, state, array, cons) {\n    const res = Helpers_allocateArrayFromCons(cons, array.length + 1);\n    res[0] = state;\n    for (let i = 0; i <= (array.length - 1); i++) {\n        res[i + 1] = folder(res[i], array[i]);\n    }\n    return res;\n}\n\nexport function scanBack(folder, array, state, cons) {\n    const res = Helpers_allocateArrayFromCons(cons, array.length + 1);\n    res[array.length] = state;\n    for (let i = array.length - 1; i >= 0; i--) {\n        res[i] = folder(array[i], res[i + 1]);\n    }\n    return res;\n}\n\nexport function skip(count, array, cons) {\n    if (count > array.length) {\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\n    }\n    if (count === array.length) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const count_1 = ((count < 0) ? 0 : count) | 0;\n        return array.slice(count_1);\n    }\n}\n\nexport function skipWhile(predicate, array, cons) {\n    let count = 0;\n    while ((count < array.length) ? predicate(array[count]) : false) {\n        count = ((count + 1) | 0);\n    }\n    if (count === array.length) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const count_1 = count | 0;\n        return array.slice(count_1);\n    }\n}\n\nexport function take(count, array, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    if (count > array.length) {\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\n    }\n    if (count === 0) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const start = 0;\n        return array.slice(start, (start + count));\n    }\n}\n\nexport function takeWhile(predicate, array, cons) {\n    let count = 0;\n    while ((count < array.length) ? predicate(array[count]) : false) {\n        count = ((count + 1) | 0);\n    }\n    if (count === 0) {\n        return Helpers_allocateArrayFromCons(cons, 0);\n    }\n    else {\n        const start = 0;\n        const count_1 = count | 0;\n        return array.slice(start, (start + count_1));\n    }\n}\n\nexport function addInPlace(x, array) {\n    void (array.push(x));\n}\n\nexport function addRangeInPlace(range, array) {\n    const enumerator = getEnumerator(range);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            addInPlace(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), array);\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n}\n\nexport function removeInPlace(item_1, array) {\n    const i = array.indexOf(item_1, 0);\n    if (i > -1) {\n        void (array.splice(i, 1));\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function removeAllInPlace(predicate, array) {\n    const countRemoveAll = (count) => {\n        const i = array.findIndex(predicate);\n        if (i > -1) {\n            void (array.splice(i, 1));\n            return (countRemoveAll(count) + 1) | 0;\n        }\n        else {\n            return count | 0;\n        }\n    };\n    return countRemoveAll(0) | 0;\n}\n\nexport function copyTo(source, sourceIndex, target, targetIndex, count) {\n    const diff = (targetIndex - sourceIndex) | 0;\n    for (let i = sourceIndex; i <= ((sourceIndex + count) - 1); i++) {\n        target[i + diff] = source[i];\n    }\n}\n\nexport function copyToTypedArray(source, sourceIndex, target, targetIndex, count) {\n    try {\n        target.set(source.subarray(sourceIndex, sourceIndex + count), targetIndex);\n    }\n    catch (matchValue) {\n        copyTo(source, sourceIndex, target, targetIndex, count);\n    }\n}\n\nexport function indexOf(array, item_1, start, count) {\n    const start_1 = defaultArg(start, 0) | 0;\n    const i = array.indexOf(item_1, start_1);\n    if ((count != null) ? (i >= (start_1 + value_2(count))) : false) {\n        return -1;\n    }\n    else {\n        return i | 0;\n    }\n}\n\nexport function partition(f, source, cons) {\n    const len = source.length | 0;\n    const res1 = Helpers_allocateArrayFromCons(cons, len);\n    const res2 = Helpers_allocateArrayFromCons(cons, len);\n    let iTrue = 0;\n    let iFalse = 0;\n    for (let i = 0; i <= (len - 1); i++) {\n        if (f(source[i])) {\n            res1[iTrue] = source[i];\n            iTrue = ((iTrue + 1) | 0);\n        }\n        else {\n            res2[iFalse] = source[i];\n            iFalse = ((iFalse + 1) | 0);\n        }\n    }\n    return [truncate(iTrue, res1), truncate(iFalse, res2)];\n}\n\nexport function find(predicate, array) {\n    const matchValue = array.find(predicate);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return value_2(matchValue);\n    }\n}\n\nexport function tryFind(predicate, array) {\n    return array.find(predicate);\n}\n\nexport function findIndex(predicate, array) {\n    const matchValue = array.findIndex(predicate);\n    if (matchValue > -1) {\n        return matchValue | 0;\n    }\n    else {\n        return indexNotFound();\n    }\n}\n\nexport function tryFindIndex(predicate, array) {\n    const matchValue = array.findIndex(predicate);\n    if (matchValue > -1) {\n        return matchValue;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function pick(chooser, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return indexNotFound();\n            }\n            else {\n                const matchValue = chooser(array[i]);\n                if (matchValue != null) {\n                    return value_2(matchValue);\n                }\n                else {\n                    i_mut = (i + 1);\n                    continue loop;\n                }\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function tryPick(chooser, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return void 0;\n            }\n            else {\n                const matchValue = chooser(array[i]);\n                if (matchValue == null) {\n                    i_mut = (i + 1);\n                    continue loop;\n                }\n                else {\n                    return matchValue;\n                }\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function findBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return indexNotFound();\n            }\n            else if (predicate(array[i])) {\n                return array[i];\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function tryFindBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return void 0;\n            }\n            else if (predicate(array[i])) {\n                return some(array[i]);\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function findLastIndex(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return -1;\n            }\n            else if (predicate(array[i])) {\n                return i | 0;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1) | 0;\n}\n\nexport function findIndexBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return indexNotFound();\n            }\n            else if (predicate(array[i])) {\n                return i | 0;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1) | 0;\n}\n\nexport function tryFindIndexBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return void 0;\n            }\n            else if (predicate(array[i])) {\n                return i;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function choose(chooser, array, cons) {\n    const res = [];\n    for (let i = 0; i <= (array.length - 1); i++) {\n        const matchValue = chooser(array[i]);\n        if (matchValue != null) {\n            const y = value_2(matchValue);\n            void (res.push(y));\n        }\n    }\n    if ((typeof cons) === \"function\") {\n        return map((x) => x, res, cons);\n    }\n    else {\n        return res;\n    }\n}\n\nexport function foldIndexed(folder, state, array) {\n    return array.reduce(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg0, delegateArg1)), state);\n}\n\nexport function fold(folder, state, array) {\n    return array.reduce(((delegateArg0, delegateArg1) => folder(delegateArg0, delegateArg1)), state);\n}\n\nexport function iterate(action, array) {\n    for (let i = 0; i <= (array.length - 1); i++) {\n        action(array[i]);\n    }\n}\n\nexport function iterateIndexed(action, array) {\n    for (let i = 0; i <= (array.length - 1); i++) {\n        action(i, array[i]);\n    }\n}\n\nexport function iterate2(action, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        action(array1[i], array2[i]);\n    }\n}\n\nexport function iterateIndexed2(action, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        action(i, array1[i], array2[i]);\n    }\n}\n\nexport function isEmpty(array) {\n    return array.length === 0;\n}\n\nexport function forAll(predicate, array) {\n    return array.every(predicate);\n}\n\nexport function permute(f, array) {\n    const size = array.length | 0;\n    const res = array.slice();\n    const checkFlags = new Array(size);\n    iterateIndexed((i, x) => {\n        const j = f(i) | 0;\n        if ((j < 0) ? true : (j >= size)) {\n            throw (new Error(\"Not a valid permutation\"));\n        }\n        res[j] = x;\n        checkFlags[j] = 1;\n    }, array);\n    if (!(checkFlags.every(((y) => (1 === y))))) {\n        throw (new Error(\"Not a valid permutation\"));\n    }\n    return res;\n}\n\nexport function setSlice(target, lower, upper, source) {\n    const lower_1 = defaultArg(lower, 0) | 0;\n    const upper_1 = defaultArg(upper, 0) | 0;\n    const length = (((upper_1 > 0) ? upper_1 : (target.length - 1)) - lower_1) | 0;\n    for (let i = 0; i <= length; i++) {\n        target[i + lower_1] = source[i];\n    }\n}\n\nexport function sortInPlaceBy(projection, xs, comparer) {\n    xs.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\n}\n\nexport function sortInPlace(xs, comparer) {\n    xs.sort(((x, y) => comparer.Compare(x, y)));\n}\n\nexport function sort(xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => comparer.Compare(x, y)));\n    return xs_1;\n}\n\nexport function sortBy(projection, xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\n    return xs_1;\n}\n\nexport function sortDescending(xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => (comparer.Compare(x, y) * -1)));\n    return xs_1;\n}\n\nexport function sortByDescending(projection, xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => (comparer.Compare(projection(x), projection(y)) * -1)));\n    return xs_1;\n}\n\nexport function sortWith(comparer, xs) {\n    const comparer_1 = comparer;\n    const xs_1 = xs.slice();\n    xs_1.sort(comparer_1);\n    return xs_1;\n}\n\nexport function allPairs(xs, ys) {\n    const len1 = xs.length | 0;\n    const len2 = ys.length | 0;\n    const res = new Array((len1 * len2));\n    for (let i = 0; i <= (xs.length - 1); i++) {\n        for (let j = 0; j <= (ys.length - 1); j++) {\n            res[(i * len2) + j] = [xs[i], ys[j]];\n        }\n    }\n    return res;\n}\n\nexport function unfold(generator, state) {\n    const res = [];\n    const loop = (state_1_mut) => {\n        loop:\n        while (true) {\n            const state_1 = state_1_mut;\n            const matchValue = generator(state_1);\n            if (matchValue != null) {\n                const x = matchValue[0];\n                const s = matchValue[1];\n                void (res.push(x));\n                state_1_mut = s;\n                continue loop;\n            }\n            break;\n        }\n    };\n    loop(state);\n    return res;\n}\n\nexport function unzip(array) {\n    const len = array.length | 0;\n    const res1 = new Array(len);\n    const res2 = new Array(len);\n    iterateIndexed((i, tupledArg) => {\n        res1[i] = tupledArg[0];\n        res2[i] = tupledArg[1];\n    }, array);\n    return [res1, res2];\n}\n\nexport function unzip3(array) {\n    const len = array.length | 0;\n    const res1 = new Array(len);\n    const res2 = new Array(len);\n    const res3 = new Array(len);\n    iterateIndexed((i, tupledArg) => {\n        res1[i] = tupledArg[0];\n        res2[i] = tupledArg[1];\n        res3[i] = tupledArg[2];\n    }, array);\n    return [res1, res2, res3];\n}\n\nexport function zip(array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    const result = new Array(array1.length);\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        result[i] = [array1[i], array2[i]];\n    }\n    return result;\n}\n\nexport function zip3(array1, array2, array3) {\n    if ((array1.length !== array2.length) ? true : (array2.length !== array3.length)) {\n        differentLengths();\n    }\n    const result = new Array(array1.length);\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        result[i] = [array1[i], array2[i], array3[i]];\n    }\n    return result;\n}\n\nexport function chunkBySize(chunkSize, array) {\n    if (chunkSize < 1) {\n        throw (new Error(\"The input must be positive.\\\\nParameter name: size\"));\n    }\n    if (array.length === 0) {\n        return [[]];\n    }\n    else {\n        const result = [];\n        for (let x = 0; x <= ((~(~Math.ceil(array.length / chunkSize))) - 1); x++) {\n            let slice;\n            const start_1 = (x * chunkSize) | 0;\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\n            void (result.push(slice));\n        }\n        return result;\n    }\n}\n\nexport function splitAt(index, array) {\n    let start;\n    if (index < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: index\"));\n    }\n    if (index > array.length) {\n        throw (new Error(\"The input sequence has an insufficient number of elements.\\\\nParameter name: index\"));\n    }\n    return [(start = 0, array.slice(start, (start + index))), array.slice(index)];\n}\n\nexport function compareWith(comparer, array1, array2) {\n    if (array1 == null) {\n        if (array2 == null) {\n            return 0;\n        }\n        else {\n            return -1;\n        }\n    }\n    else if (array2 == null) {\n        return 1;\n    }\n    else {\n        let i = 0;\n        let result = 0;\n        const length1 = array1.length | 0;\n        const length2 = array2.length | 0;\n        if (length1 > length2) {\n            return 1;\n        }\n        else if (length1 < length2) {\n            return -1;\n        }\n        else {\n            while ((i < length1) ? (result === 0) : false) {\n                result = (comparer(array1[i], array2[i]) | 0);\n                i = ((i + 1) | 0);\n            }\n            return result | 0;\n        }\n    }\n}\n\nexport function equalsWith(comparer, array1, array2) {\n    return compareWith((e1, e2) => compare(e1, e2), array1, array2) === 0;\n}\n\nexport function exactlyOne(array) {\n    if (array.length === 1) {\n        return array[0];\n    }\n    else if (array.length === 0) {\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: array\"));\n    }\n    else {\n        throw (new Error(\"Input array too long\\\\nParameter name: array\"));\n    }\n}\n\nexport function tryExactlyOne(array) {\n    if (array.length === 1) {\n        return some(array[0]);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function head(array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    else {\n        return array[0];\n    }\n}\n\nexport function tryHead(array) {\n    if (array.length === 0) {\n        return void 0;\n    }\n    else {\n        return some(array[0]);\n    }\n}\n\nexport function tail(array) {\n    if (array.length === 0) {\n        throw (new Error(\"Not enough elements\\\\nParameter name: array\"));\n    }\n    return array.slice(1);\n}\n\nexport function item(index, array) {\n    return array[index];\n}\n\nexport function tryItem(index, array) {\n    if ((index < 0) ? true : (index >= array.length)) {\n        return void 0;\n    }\n    else {\n        return some(array[index]);\n    }\n}\n\nexport function foldBackIndexed(folder, array, state) {\n    return array.reduceRight(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg1, delegateArg0)), state);\n}\n\nexport function foldBack(folder, array, state) {\n    return array.reduceRight(((delegateArg0, delegateArg1) => folder(delegateArg1, delegateArg0)), state);\n}\n\nexport function foldIndexed2(folder, state, array1, array2) {\n    let acc = state;\n    if (array1.length !== array2.length) {\n        throw (new Error(\"Arrays have different lengths\"));\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        acc = folder(i, acc, array1[i], array2[i]);\n    }\n    return acc;\n}\n\nexport function fold2(folder, state, array1, array2) {\n    return foldIndexed2((_arg1, acc, x, y) => folder(acc, x, y), state, array1, array2);\n}\n\nexport function foldBackIndexed2(folder, array1, array2, state) {\n    let acc = state;\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    const size = array1.length | 0;\n    for (let i = 1; i <= size; i++) {\n        acc = folder(i - 1, array1[size - i], array2[size - i], acc);\n    }\n    return acc;\n}\n\nexport function foldBack2(f, array1, array2, state) {\n    return foldBackIndexed2((_arg1, x, y, acc) => f(x, y, acc), array1, array2, state);\n}\n\nexport function reduce(reduction, array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\"));\n    }\n    const reduction_1 = reduction;\n    return array.reduce(reduction_1);\n}\n\nexport function reduceBack(reduction, array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\"));\n    }\n    const reduction_1 = reduction;\n    return array.reduceRight(reduction_1);\n}\n\nexport function forAll2(predicate, array1, array2) {\n    return fold2((acc, x, y) => (acc ? predicate(x, y) : false), true, array1, array2);\n}\n\nexport function existsOffset(predicate_mut, array_mut, index_mut) {\n    existsOffset:\n    while (true) {\n        const predicate = predicate_mut, array = array_mut, index = index_mut;\n        if (index === array.length) {\n            return false;\n        }\n        else if (predicate(array[index])) {\n            return true;\n        }\n        else {\n            predicate_mut = predicate;\n            array_mut = array;\n            index_mut = (index + 1);\n            continue existsOffset;\n        }\n        break;\n    }\n}\n\nexport function exists(predicate, array) {\n    return existsOffset(predicate, array, 0);\n}\n\nexport function existsOffset2(predicate_mut, array1_mut, array2_mut, index_mut) {\n    existsOffset2:\n    while (true) {\n        const predicate = predicate_mut, array1 = array1_mut, array2 = array2_mut, index = index_mut;\n        if (index === array1.length) {\n            return false;\n        }\n        else if (predicate(array1[index], array2[index])) {\n            return true;\n        }\n        else {\n            predicate_mut = predicate;\n            array1_mut = array1;\n            array2_mut = array2;\n            index_mut = (index + 1);\n            continue existsOffset2;\n        }\n        break;\n    }\n}\n\nexport function exists2(predicate, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    return existsOffset2(predicate, array1, array2, 0);\n}\n\nexport function sum(array, adder) {\n    let acc = adder.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        acc = adder.Add(acc, array[i]);\n    }\n    return acc;\n}\n\nexport function sumBy(projection, array, adder) {\n    let acc = adder.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        acc = adder.Add(acc, projection(array[i]));\n    }\n    return acc;\n}\n\nexport function maxBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\n}\n\nexport function max(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\n}\n\nexport function minBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\n}\n\nexport function min(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\n}\n\nexport function average(array, averager) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    let total = averager.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        total = averager.Add(total, array[i]);\n    }\n    return averager.DivideByInt(total, array.length);\n}\n\nexport function averageBy(projection, array, averager) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    let total = averager.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        total = averager.Add(total, projection(array[i]));\n    }\n    return averager.DivideByInt(total, array.length);\n}\n\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw (new Error(\"windowSize must be positive\"));\n    }\n    let res;\n    const len = max_1((x, y) => comparePrimitives(x, y), 0, source.length - windowSize) | 0;\n    res = (new Array(len));\n    for (let i = windowSize; i <= source.length; i++) {\n        res[i - windowSize] = source.slice(i - windowSize, (i - 1) + 1);\n    }\n    return res;\n}\n\nexport function splitInto(chunks, array) {\n    if (chunks < 1) {\n        throw (new Error(\"The input must be positive.\\\\nParameter name: chunks\"));\n    }\n    if (array.length === 0) {\n        return [[]];\n    }\n    else {\n        const result = [];\n        const chunks_1 = min_1((x, y) => comparePrimitives(x, y), chunks, array.length) | 0;\n        const minChunkSize = (~(~(array.length / chunks_1))) | 0;\n        const chunksWithExtraItem = (array.length % chunks_1) | 0;\n        for (let i = 0; i <= (chunks_1 - 1); i++) {\n            const chunkSize = ((i < chunksWithExtraItem) ? (minChunkSize + 1) : minChunkSize) | 0;\n            let slice;\n            const start_1 = ((i * minChunkSize) + min_1((x_1, y_1) => comparePrimitives(x_1, y_1), chunksWithExtraItem, i)) | 0;\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\n            void (result.push(slice));\n        }\n        return result;\n    }\n}\n\nexport function transpose(arrays, cons) {\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\n    const len = arrays_1.length | 0;\n    if (len === 0) {\n        return new Array(0);\n    }\n    else {\n        const lenInner = arrays_1[0].length | 0;\n        if (!forAll((a) => (a.length === lenInner), arrays_1)) {\n            differentLengths();\n        }\n        const result = new Array(lenInner);\n        for (let i = 0; i <= (lenInner - 1); i++) {\n            result[i] = Helpers_allocateArrayFromCons(cons, len);\n            for (let j = 0; j <= (len - 1); j++) {\n                result[i][j] = arrays_1[j][i];\n            }\n        }\n        return result;\n    }\n}\n\n","import { some } from \"../fable-library.3.1.11/Option.js\";\r\nimport { create, isLeapYear } from \"../fable-library.3.1.11/Date.js\";\r\nimport { parse } from \"../fable-library.3.1.11/Int32.js\";\r\nimport { split, isNullOrWhiteSpace } from \"../fable-library.3.1.11/String.js\";\r\nimport { equalsWith } from \"../fable-library.3.1.11/Array.js\";\r\nimport { comparePrimitives } from \"../fable-library.3.1.11/Util.js\";\r\nimport react from \"react\";\r\n\r\nexport function DateParsing_$007CBetween$007C_$007C(x, y, input) {\r\n    if ((input >= x) ? (input <= y) : false) {\r\n        return some(void 0);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function DateParsing_isLeapYear(year) {\r\n    return isLeapYear(year);\r\n}\r\n\r\nexport function DateParsing_$007CInt$007C_$007C(input) {\r\n    try {\r\n        return parse(input, 511, false, 32);\r\n    }\r\n    catch (matchValue) {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function DateParsing_parse(input) {\r\n    try {\r\n        if (isNullOrWhiteSpace(input)) {\r\n            return void 0;\r\n        }\r\n        else {\r\n            const parts = split(input, [\"-\"], null, 0);\r\n            let patternInput;\r\n            let pattern_matching_result, month, year;\r\n            if ((!equalsWith((x, y) => comparePrimitives(x, y), parts, null)) ? (parts.length === 2) : false) {\r\n                const activePatternResult2933 = DateParsing_$007CInt$007C_$007C(parts[0]);\r\n                if (activePatternResult2933 != null) {\r\n                    const activePatternResult2934 = DateParsing_$007CInt$007C_$007C(parts[1]);\r\n                    if (activePatternResult2934 != null) {\r\n                        pattern_matching_result = 0;\r\n                        month = activePatternResult2934;\r\n                        year = activePatternResult2933;\r\n                    }\r\n                    else {\r\n                        pattern_matching_result = 1;\r\n                    }\r\n                }\r\n                else {\r\n                    pattern_matching_result = 1;\r\n                }\r\n            }\r\n            else {\r\n                pattern_matching_result = 1;\r\n            }\r\n            switch (pattern_matching_result) {\r\n                case 0: {\r\n                    patternInput = [year, month, 1, 0, 0];\r\n                    break;\r\n                }\r\n                case 1: {\r\n                    let pattern_matching_result_1, day, month_1, year_1;\r\n                    if ((!equalsWith((x_1, y_1) => comparePrimitives(x_1, y_1), parts, null)) ? (parts.length === 3) : false) {\r\n                        const activePatternResult2930 = DateParsing_$007CInt$007C_$007C(parts[0]);\r\n                        if (activePatternResult2930 != null) {\r\n                            const activePatternResult2931 = DateParsing_$007CInt$007C_$007C(parts[1]);\r\n                            if (activePatternResult2931 != null) {\r\n                                const activePatternResult2932 = DateParsing_$007CInt$007C_$007C(parts[2]);\r\n                                if (activePatternResult2932 != null) {\r\n                                    pattern_matching_result_1 = 0;\r\n                                    day = activePatternResult2932;\r\n                                    month_1 = activePatternResult2931;\r\n                                    year_1 = activePatternResult2930;\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result_1 = 1;\r\n                                }\r\n                            }\r\n                            else {\r\n                                pattern_matching_result_1 = 1;\r\n                            }\r\n                        }\r\n                        else {\r\n                            pattern_matching_result_1 = 1;\r\n                        }\r\n                    }\r\n                    else {\r\n                        pattern_matching_result_1 = 1;\r\n                    }\r\n                    switch (pattern_matching_result_1) {\r\n                        case 0: {\r\n                            patternInput = [year_1, month_1, day, 0, 0];\r\n                            break;\r\n                        }\r\n                        case 1: {\r\n                            let pattern_matching_result_2, day_1, month_2, year_2;\r\n                            if ((!equalsWith((x_2, y_2) => comparePrimitives(x_2, y_2), parts, null)) ? (parts.length === 3) : false) {\r\n                                const activePatternResult2928 = DateParsing_$007CInt$007C_$007C(parts[0]);\r\n                                if (activePatternResult2928 != null) {\r\n                                    const activePatternResult2929 = DateParsing_$007CInt$007C_$007C(parts[1]);\r\n                                    if (activePatternResult2929 != null) {\r\n                                        pattern_matching_result_2 = 0;\r\n                                        day_1 = parts[2];\r\n                                        month_2 = activePatternResult2929;\r\n                                        year_2 = activePatternResult2928;\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_2 = 1;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result_2 = 1;\r\n                                }\r\n                            }\r\n                            else {\r\n                                pattern_matching_result_2 = 1;\r\n                            }\r\n                            switch (pattern_matching_result_2) {\r\n                                case 0: {\r\n                                    if (day_1.indexOf(\"T\") >= 0) {\r\n                                        const matchValue = split(day_1, [\"T\"], null, 0);\r\n                                        let pattern_matching_result_3, parsedDay, time;\r\n                                        if ((!equalsWith((x_3, y_3) => comparePrimitives(x_3, y_3), matchValue, null)) ? (matchValue.length === 2) : false) {\r\n                                            const activePatternResult2927 = DateParsing_$007CInt$007C_$007C(matchValue[0]);\r\n                                            if (activePatternResult2927 != null) {\r\n                                                pattern_matching_result_3 = 0;\r\n                                                parsedDay = activePatternResult2927;\r\n                                                time = matchValue[1];\r\n                                            }\r\n                                            else {\r\n                                                pattern_matching_result_3 = 1;\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            pattern_matching_result_3 = 1;\r\n                                        }\r\n                                        switch (pattern_matching_result_3) {\r\n                                            case 0: {\r\n                                                const matchValue_1 = split(time, [\":\"], null, 0);\r\n                                                let pattern_matching_result_4, hour, minute;\r\n                                                if ((!equalsWith((x_4, y_4) => comparePrimitives(x_4, y_4), matchValue_1, null)) ? (matchValue_1.length === 2) : false) {\r\n                                                    const activePatternResult2925 = DateParsing_$007CInt$007C_$007C(matchValue_1[0]);\r\n                                                    if (activePatternResult2925 != null) {\r\n                                                        const activePatternResult2926 = DateParsing_$007CInt$007C_$007C(matchValue_1[1]);\r\n                                                        if (activePatternResult2926 != null) {\r\n                                                            pattern_matching_result_4 = 0;\r\n                                                            hour = activePatternResult2925;\r\n                                                            minute = activePatternResult2926;\r\n                                                        }\r\n                                                        else {\r\n                                                            pattern_matching_result_4 = 1;\r\n                                                        }\r\n                                                    }\r\n                                                    else {\r\n                                                        pattern_matching_result_4 = 1;\r\n                                                    }\r\n                                                }\r\n                                                else {\r\n                                                    pattern_matching_result_4 = 1;\r\n                                                }\r\n                                                switch (pattern_matching_result_4) {\r\n                                                    case 0: {\r\n                                                        const matchValue_2 = [hour, minute];\r\n                                                        let pattern_matching_result_5;\r\n                                                        if (DateParsing_$007CBetween$007C_$007C(0, 59, matchValue_2[0]) != null) {\r\n                                                            if (DateParsing_$007CBetween$007C_$007C(0, 59, matchValue_2[1]) != null) {\r\n                                                                pattern_matching_result_5 = 0;\r\n                                                            }\r\n                                                            else {\r\n                                                                pattern_matching_result_5 = 1;\r\n                                                            }\r\n                                                        }\r\n                                                        else {\r\n                                                            pattern_matching_result_5 = 1;\r\n                                                        }\r\n                                                        switch (pattern_matching_result_5) {\r\n                                                            case 0: {\r\n                                                                patternInput = [year_2, month_2, parsedDay, hour, minute];\r\n                                                                break;\r\n                                                            }\r\n                                                            case 1: {\r\n                                                                patternInput = [-1, 1, 1, 0, 0];\r\n                                                                break;\r\n                                                            }\r\n                                                        }\r\n                                                        break;\r\n                                                    }\r\n                                                    case 1: {\r\n                                                        patternInput = [-1, 1, 1, 0, 0];\r\n                                                        break;\r\n                                                    }\r\n                                                }\r\n                                                break;\r\n                                            }\r\n                                            case 1: {\r\n                                                patternInput = [-1, 1, 1, 0, 0];\r\n                                                break;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        patternInput = [-1, 1, 1, 0, 0];\r\n                                    }\r\n                                    break;\r\n                                }\r\n                                case 1: {\r\n                                    patternInput = [-1, 1, 1, 0, 0];\r\n                                    break;\r\n                                }\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            const year_3 = patternInput[0] | 0;\r\n            const month_3 = patternInput[1] | 0;\r\n            const minute_1 = patternInput[4] | 0;\r\n            const hour_1 = patternInput[3] | 0;\r\n            const day_2 = patternInput[2] | 0;\r\n            if (year_3 <= 0) {\r\n                return void 0;\r\n            }\r\n            else {\r\n                const matchValue_3 = [month_3, day_2];\r\n                let pattern_matching_result_6;\r\n                if (matchValue_3[0] === 2) {\r\n                    if (DateParsing_$007CBetween$007C_$007C(1, 29, matchValue_3[1]) != null) {\r\n                        if (DateParsing_isLeapYear(year_3)) {\r\n                            pattern_matching_result_6 = 0;\r\n                        }\r\n                        else {\r\n                            pattern_matching_result_6 = 1;\r\n                        }\r\n                    }\r\n                    else {\r\n                        pattern_matching_result_6 = 1;\r\n                    }\r\n                }\r\n                else {\r\n                    pattern_matching_result_6 = 1;\r\n                }\r\n                switch (pattern_matching_result_6) {\r\n                    case 0: {\r\n                        return create(year_3, month_3, day_2, hour_1, minute_1, 0);\r\n                    }\r\n                    case 1: {\r\n                        let pattern_matching_result_7;\r\n                        if (matchValue_3[0] === 2) {\r\n                            if (DateParsing_$007CBetween$007C_$007C(1, 28, matchValue_3[1]) != null) {\r\n                                if (!DateParsing_isLeapYear(year_3)) {\r\n                                    pattern_matching_result_7 = 0;\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result_7 = 1;\r\n                                }\r\n                            }\r\n                            else {\r\n                                pattern_matching_result_7 = 1;\r\n                            }\r\n                        }\r\n                        else {\r\n                            pattern_matching_result_7 = 1;\r\n                        }\r\n                        switch (pattern_matching_result_7) {\r\n                            case 0: {\r\n                                return create(year_3, month_3, day_2, hour_1, minute_1, 0);\r\n                            }\r\n                            case 1: {\r\n                                let pattern_matching_result_8;\r\n                                if (matchValue_3[0] === 1) {\r\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\r\n                                        pattern_matching_result_8 = 0;\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_8 = 1;\r\n                                    }\r\n                                }\r\n                                else if (matchValue_3[0] === 3) {\r\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\r\n                                        pattern_matching_result_8 = 0;\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_8 = 1;\r\n                                    }\r\n                                }\r\n                                else if (matchValue_3[0] === 5) {\r\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\r\n                                        pattern_matching_result_8 = 0;\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_8 = 1;\r\n                                    }\r\n                                }\r\n                                else if (matchValue_3[0] === 7) {\r\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\r\n                                        pattern_matching_result_8 = 0;\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_8 = 1;\r\n                                    }\r\n                                }\r\n                                else if (matchValue_3[0] === 8) {\r\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\r\n                                        pattern_matching_result_8 = 0;\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_8 = 1;\r\n                                    }\r\n                                }\r\n                                else if (matchValue_3[0] === 10) {\r\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\r\n                                        pattern_matching_result_8 = 0;\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_8 = 1;\r\n                                    }\r\n                                }\r\n                                else if (matchValue_3[0] === 12) {\r\n                                    if (DateParsing_$007CBetween$007C_$007C(1, 31, matchValue_3[1]) != null) {\r\n                                        pattern_matching_result_8 = 0;\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_8 = 1;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result_8 = 1;\r\n                                }\r\n                                switch (pattern_matching_result_8) {\r\n                                    case 0: {\r\n                                        return create(year_3, month_3, day_2, hour_1, minute_1, 0);\r\n                                    }\r\n                                    case 1: {\r\n                                        let pattern_matching_result_9;\r\n                                        if (matchValue_3[0] === 4) {\r\n                                            if (DateParsing_$007CBetween$007C_$007C(1, 30, matchValue_3[1]) != null) {\r\n                                                pattern_matching_result_9 = 0;\r\n                                            }\r\n                                            else {\r\n                                                pattern_matching_result_9 = 1;\r\n                                            }\r\n                                        }\r\n                                        else if (matchValue_3[0] === 6) {\r\n                                            if (DateParsing_$007CBetween$007C_$007C(1, 30, matchValue_3[1]) != null) {\r\n                                                pattern_matching_result_9 = 0;\r\n                                            }\r\n                                            else {\r\n                                                pattern_matching_result_9 = 1;\r\n                                            }\r\n                                        }\r\n                                        else if (matchValue_3[0] === 9) {\r\n                                            if (DateParsing_$007CBetween$007C_$007C(1, 30, matchValue_3[1]) != null) {\r\n                                                pattern_matching_result_9 = 0;\r\n                                            }\r\n                                            else {\r\n                                                pattern_matching_result_9 = 1;\r\n                                            }\r\n                                        }\r\n                                        else if (matchValue_3[0] === 11) {\r\n                                            if (DateParsing_$007CBetween$007C_$007C(1, 30, matchValue_3[1]) != null) {\r\n                                                pattern_matching_result_9 = 0;\r\n                                            }\r\n                                            else {\r\n                                                pattern_matching_result_9 = 1;\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            pattern_matching_result_9 = 1;\r\n                                        }\r\n                                        switch (pattern_matching_result_9) {\r\n                                            case 0: {\r\n                                                return create(year_3, month_3, day_2, hour_1, minute_1, 0);\r\n                                            }\r\n                                            case 1: {\r\n                                                return void 0;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    catch (matchValue_4) {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport const Interop_reactApi = react;\r\n\r\n","import { join } from \"./String.js\";\nimport { uncurry, isArrayLike, getEnumerator, toIterator, compare, structuralHash, equals } from \"./Util.js\";\nimport { Record } from \"./Types.js\";\nimport { class_type, record_type, option_type } from \"./Reflection.js\";\nimport { defaultArg, value as value_1, some } from \"./Option.js\";\nimport { transpose as transpose_1, splitInto as splitInto_1, windowed as windowed_1, pairwise as pairwise_1, chunkBySize as chunkBySize_1, map as map_1, permute as permute_1, tryFindIndexBack as tryFindIndexBack_1, tryFindBack as tryFindBack_1, scanBack as scanBack_1, foldBack2 as foldBack2_1, foldBack as foldBack_1, fill } from \"./Array.js\";\n\nexport const SR_indexOutOfBounds = \"The index was outside the range of elements in the list.\";\n\nexport const SR_inputListWasEmpty = \"List was empty\";\n\nexport const SR_inputMustBeNonNegative = \"The input must be non-negative.\";\n\nexport const SR_inputSequenceEmpty = \"The input sequence was empty.\";\n\nexport const SR_inputSequenceTooLong = \"The input sequence contains more than one element.\";\n\nexport const SR_keyNotFoundAlt = \"An index satisfying the predicate was not found in the collection.\";\n\nexport const SR_listsHadDifferentLengths = \"The lists had different lengths.\";\n\nexport const SR_notEnoughElements = \"The input sequence has an insufficient number of elements.\";\n\nexport class FSharpList extends Record {\n    constructor(head, tail) {\n        super();\n        this.head = head;\n        this.tail = tail;\n    }\n    toString() {\n        const xs = this;\n        return (\"[\" + join(\"; \", xs)) + \"]\";\n    }\n    Equals(other) {\n        const xs = this;\n        if (xs === other) {\n            return true;\n        }\n        else {\n            const loop = (xs_1_mut, ys_1_mut) => {\n                loop:\n                while (true) {\n                    const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\n                    const matchValue = [xs_1.tail, ys_1.tail];\n                    if (matchValue[0] != null) {\n                        if (matchValue[1] != null) {\n                            const xt = matchValue[0];\n                            const yt = matchValue[1];\n                            if (equals(xs_1.head, ys_1.head)) {\n                                xs_1_mut = xt;\n                                ys_1_mut = yt;\n                                continue loop;\n                            }\n                            else {\n                                return false;\n                            }\n                        }\n                        else {\n                            return false;\n                        }\n                    }\n                    else if (matchValue[1] != null) {\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                    break;\n                }\n            };\n            return loop(xs, other);\n        }\n    }\n    GetHashCode() {\n        const xs = this;\n        const loop = (i_mut, h_mut, xs_1_mut) => {\n            loop:\n            while (true) {\n                const i = i_mut, h = h_mut, xs_1 = xs_1_mut;\n                const matchValue = xs_1.tail;\n                if (matchValue != null) {\n                    const t = matchValue;\n                    if (i > 18) {\n                        return h | 0;\n                    }\n                    else {\n                        i_mut = (i + 1);\n                        h_mut = (((h << 1) + structuralHash(xs_1.head)) + (631 * i));\n                        xs_1_mut = t;\n                        continue loop;\n                    }\n                }\n                else {\n                    return h | 0;\n                }\n                break;\n            }\n        };\n        return loop(0, 0, xs) | 0;\n    }\n    CompareTo(other) {\n        const xs = this;\n        const loop = (xs_1_mut, ys_1_mut) => {\n            loop:\n            while (true) {\n                const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\n                const matchValue = [xs_1.tail, ys_1.tail];\n                if (matchValue[0] != null) {\n                    if (matchValue[1] != null) {\n                        const xt = matchValue[0];\n                        const yt = matchValue[1];\n                        const c = compare(xs_1.head, ys_1.head) | 0;\n                        if (c === 0) {\n                            xs_1_mut = xt;\n                            ys_1_mut = yt;\n                            continue loop;\n                        }\n                        else {\n                            return c | 0;\n                        }\n                    }\n                    else {\n                        return 1;\n                    }\n                }\n                else if (matchValue[1] != null) {\n                    return -1;\n                }\n                else {\n                    return 0;\n                }\n                break;\n            }\n        };\n        return loop(xs, other) | 0;\n    }\n    GetEnumerator() {\n        const xs = this;\n        return ListEnumerator$1_$ctor_3002E699(xs);\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const xs = this;\n        return getEnumerator(xs);\n    }\n}\n\nexport function FSharpList$reflection(gen0) {\n    return record_type(\"ListModule.FSharpList\", [gen0], FSharpList, () => [[\"head\", gen0], [\"tail\", option_type(FSharpList$reflection(gen0))]]);\n}\n\nexport class ListEnumerator$1 {\n    constructor(xs) {\n        this.xs = xs;\n        this.it = this.xs;\n        this.current = null;\n    }\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n        const __ = this;\n        return __.current;\n    }\n    [\"System.Collections.IEnumerator.get_Current\"]() {\n        const __ = this;\n        return __.current;\n    }\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\n        const __ = this;\n        const matchValue = __.it.tail;\n        if (matchValue != null) {\n            const t = matchValue;\n            __.current = __.it.head;\n            __.it = t;\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    [\"System.Collections.IEnumerator.Reset\"]() {\n        const __ = this;\n        __.it = __.xs;\n        __.current = null;\n    }\n    Dispose() {\n    }\n}\n\nexport function ListEnumerator$1$reflection(gen0) {\n    return class_type(\"ListModule.ListEnumerator`1\", [gen0], ListEnumerator$1);\n}\n\nexport function ListEnumerator$1_$ctor_3002E699(xs) {\n    return new ListEnumerator$1(xs);\n}\n\nexport function FSharpList_get_Empty() {\n    return new FSharpList(null, void 0);\n}\n\nexport function FSharpList_Cons_305B8EAC(x, xs) {\n    return new FSharpList(x, xs);\n}\n\nexport function FSharpList__get_IsEmpty(xs) {\n    return xs.tail == null;\n}\n\nexport function FSharpList__get_Length(xs) {\n    const loop = (i_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, xs_1 = xs_1_mut;\n            const matchValue = xs_1.tail;\n            if (matchValue != null) {\n                i_mut = (i + 1);\n                xs_1_mut = matchValue;\n                continue loop;\n            }\n            else {\n                return i | 0;\n            }\n            break;\n        }\n    };\n    return loop(0, xs) | 0;\n}\n\nexport function FSharpList__get_Head(xs) {\n    const matchValue = xs.tail;\n    if (matchValue != null) {\n        return xs.head;\n    }\n    else {\n        throw (new Error((SR_inputListWasEmpty + \"\\\\nParameter name: \") + \"list\"));\n    }\n}\n\nexport function FSharpList__get_Tail(xs) {\n    const matchValue = xs.tail;\n    if (matchValue != null) {\n        return matchValue;\n    }\n    else {\n        throw (new Error((SR_inputListWasEmpty + \"\\\\nParameter name: \") + \"list\"));\n    }\n}\n\nexport function FSharpList__get_Item_Z524259A4(xs, index) {\n    const loop = (i_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, xs_1 = xs_1_mut;\n            const matchValue = xs_1.tail;\n            if (matchValue != null) {\n                if (i === index) {\n                    return xs_1.head;\n                }\n                else {\n                    i_mut = (i + 1);\n                    xs_1_mut = matchValue;\n                    continue loop;\n                }\n            }\n            else {\n                throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"index\"));\n            }\n            break;\n        }\n    };\n    return loop(0, xs);\n}\n\nexport function empty() {\n    return FSharpList_get_Empty();\n}\n\nexport function cons(x, xs) {\n    return FSharpList_Cons_305B8EAC(x, xs);\n}\n\nexport function singleton(x) {\n    return FSharpList_Cons_305B8EAC(x, FSharpList_get_Empty());\n}\n\nexport function isEmpty(xs) {\n    return FSharpList__get_IsEmpty(xs);\n}\n\nexport function length(xs) {\n    return FSharpList__get_Length(xs);\n}\n\nexport function head(xs) {\n    return FSharpList__get_Head(xs);\n}\n\nexport function tryHead(xs) {\n    if (FSharpList__get_IsEmpty(xs)) {\n        return void 0;\n    }\n    else {\n        return some(FSharpList__get_Head(xs));\n    }\n}\n\nexport function tail(xs) {\n    return FSharpList__get_Tail(xs);\n}\n\nexport function tryLast(xs_mut) {\n    tryLast:\n    while (true) {\n        const xs = xs_mut;\n        if (FSharpList__get_IsEmpty(xs)) {\n            return void 0;\n        }\n        else {\n            const t = FSharpList__get_Tail(xs);\n            if (FSharpList__get_IsEmpty(t)) {\n                return some(FSharpList__get_Head(xs));\n            }\n            else {\n                xs_mut = t;\n                continue tryLast;\n            }\n        }\n        break;\n    }\n}\n\nexport function last(xs) {\n    const matchValue = tryLast(xs);\n    if (matchValue == null) {\n        throw (new Error(SR_inputListWasEmpty));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function compareWith(comparer, xs, ys) {\n    const loop = (xs_1_mut, ys_1_mut) => {\n        loop:\n        while (true) {\n            const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\n            const matchValue = [FSharpList__get_IsEmpty(xs_1), FSharpList__get_IsEmpty(ys_1)];\n            if (matchValue[0]) {\n                if (matchValue[1]) {\n                    return 0;\n                }\n                else {\n                    return -1;\n                }\n            }\n            else if (matchValue[1]) {\n                return 1;\n            }\n            else {\n                const c = comparer(FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1)) | 0;\n                if (c === 0) {\n                    xs_1_mut = FSharpList__get_Tail(xs_1);\n                    ys_1_mut = FSharpList__get_Tail(ys_1);\n                    continue loop;\n                }\n                else {\n                    return c | 0;\n                }\n            }\n            break;\n        }\n    };\n    return loop(xs, ys) | 0;\n}\n\nexport function toArray(xs) {\n    const len = FSharpList__get_Length(xs) | 0;\n    const res = fill(new Array(len), 0, len, null);\n    const loop = (i_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, xs_1 = xs_1_mut;\n            if (!FSharpList__get_IsEmpty(xs_1)) {\n                res[i] = FSharpList__get_Head(xs_1);\n                i_mut = (i + 1);\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    loop(0, xs);\n    return res;\n}\n\nexport function fold(folder, state, xs) {\n    let acc = state;\n    let xs_1 = xs;\n    while (!FSharpList__get_IsEmpty(xs_1)) {\n        acc = folder(acc, FSharpList__get_Head(xs_1));\n        xs_1 = FSharpList__get_Tail(xs_1);\n    }\n    return acc;\n}\n\nexport function reverse(xs) {\n    return fold((acc, x) => FSharpList_Cons_305B8EAC(x, acc), FSharpList_get_Empty(), xs);\n}\n\nexport function foldBack(folder, xs, state) {\n    return foldBack_1(folder, toArray(xs), state);\n}\n\nexport function foldIndexed(folder, state, xs) {\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1)) {\n                return acc;\n            }\n            else {\n                i_mut = (i + 1);\n                acc_mut = folder(i, acc, FSharpList__get_Head(xs_1));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(0, state, xs);\n}\n\nexport function fold2(folder, state, xs, ys) {\n    let acc = state;\n    let xs_1 = xs;\n    let ys_1 = ys;\n    while ((!FSharpList__get_IsEmpty(xs_1)) ? (!FSharpList__get_IsEmpty(ys_1)) : false) {\n        acc = folder(acc, FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1));\n        xs_1 = FSharpList__get_Tail(xs_1);\n        ys_1 = FSharpList__get_Tail(ys_1);\n    }\n    return acc;\n}\n\nexport function foldBack2(folder, xs, ys, state) {\n    return foldBack2_1(folder, toArray(xs), toArray(ys), state);\n}\n\nexport function unfold(gen, state) {\n    const loop = (acc_mut, node_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const acc = acc_mut, node = node_mut;\n            const matchValue = gen(acc);\n            if (matchValue != null) {\n                acc_mut = matchValue[1];\n                node_mut = (t = (new FSharpList(matchValue[0], void 0)), (node.tail = t, t));\n                continue loop;\n            }\n            else {\n                return node;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node_1 = loop(state, root);\n    const t_2 = FSharpList_get_Empty();\n    node_1.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function iterate(action, xs) {\n    return fold((unitVar0, x) => {\n        action(x);\n    }, void 0, xs);\n}\n\nexport function iterate2(action, xs, ys) {\n    return fold2((unitVar0, x, y) => {\n        action(x, y);\n    }, void 0, xs, ys);\n}\n\nexport function iterateIndexed(action, xs) {\n    void fold((i, x) => {\n        action(i, x);\n        return (i + 1) | 0;\n    }, 0, xs);\n}\n\nexport function iterateIndexed2(action, xs, ys) {\n    void fold2((i, x, y) => {\n        action(i, x, y);\n        return (i + 1) | 0;\n    }, 0, xs, ys);\n}\n\nexport function toSeq(xs) {\n    return xs;\n}\n\nexport function ofArrayWithTail(xs, tail_1) {\n    let res = tail_1;\n    for (let i = xs.length - 1; i >= 0; i--) {\n        res = FSharpList_Cons_305B8EAC(xs[i], res);\n    }\n    return res;\n}\n\nexport function ofArray(xs) {\n    return ofArrayWithTail(xs, FSharpList_get_Empty());\n}\n\nexport function ofSeq(xs) {\n    let xs_3, t;\n    if (isArrayLike(xs)) {\n        return ofArray(xs);\n    }\n    else if (xs instanceof FSharpList) {\n        return xs;\n    }\n    else {\n        const root = FSharpList_get_Empty();\n        let node = root;\n        const enumerator = getEnumerator(xs);\n        try {\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                node = (xs_3 = node, (t = (new FSharpList(x, void 0)), (xs_3.tail = t, t)));\n            }\n        }\n        finally {\n            enumerator.Dispose();\n        }\n        const xs_5 = node;\n        const t_2 = FSharpList_get_Empty();\n        xs_5.tail = t_2;\n        return FSharpList__get_Tail(root);\n    }\n}\n\nexport function concat(lists) {\n    const root = FSharpList_get_Empty();\n    let node = root;\n    const action = (xs) => {\n        node = fold((acc, x) => {\n            const t = new FSharpList(x, void 0);\n            acc.tail = t;\n            return t;\n        }, node, xs);\n    };\n    if (isArrayLike(lists)) {\n        lists.forEach(action);\n    }\n    else if (lists instanceof FSharpList) {\n        iterate(action, lists);\n    }\n    else {\n        const enumerator = getEnumerator(lists);\n        try {\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                action(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n            }\n        }\n        finally {\n            enumerator.Dispose();\n        }\n    }\n    const xs_6 = node;\n    const t_2 = FSharpList_get_Empty();\n    xs_6.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function scan(folder, state, xs) {\n    let xs_4, t_2;\n    const root = FSharpList_get_Empty();\n    let node;\n    const t = new FSharpList(state, void 0);\n    root.tail = t;\n    node = t;\n    let acc = state;\n    let xs_3 = xs;\n    while (!FSharpList__get_IsEmpty(xs_3)) {\n        acc = folder(acc, FSharpList__get_Head(xs_3));\n        node = (xs_4 = node, (t_2 = (new FSharpList(acc, void 0)), (xs_4.tail = t_2, t_2)));\n        xs_3 = FSharpList__get_Tail(xs_3);\n    }\n    const xs_6 = node;\n    const t_4 = FSharpList_get_Empty();\n    xs_6.tail = t_4;\n    return FSharpList__get_Tail(root);\n}\n\nexport function scanBack(folder, xs, state) {\n    return ofArray(scanBack_1(folder, toArray(xs), state));\n}\n\nexport function append(xs, ys) {\n    return fold((acc, x) => FSharpList_Cons_305B8EAC(x, acc), ys, reverse(xs));\n}\n\nexport function collect(mapping, xs) {\n    let xs_1, t;\n    const root = FSharpList_get_Empty();\n    let node = root;\n    let ys = xs;\n    while (!FSharpList__get_IsEmpty(ys)) {\n        let zs = mapping(FSharpList__get_Head(ys));\n        while (!FSharpList__get_IsEmpty(zs)) {\n            node = (xs_1 = node, (t = (new FSharpList(FSharpList__get_Head(zs), void 0)), (xs_1.tail = t, t)));\n            zs = FSharpList__get_Tail(zs);\n        }\n        ys = FSharpList__get_Tail(ys);\n    }\n    const xs_3 = node;\n    const t_2 = FSharpList_get_Empty();\n    xs_3.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function mapIndexed(mapping, xs) {\n    const root = FSharpList_get_Empty();\n    const node = foldIndexed((i, acc, x) => {\n        const t = new FSharpList(mapping(i, x), void 0);\n        acc.tail = t;\n        return t;\n    }, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function map(mapping, xs) {\n    const root = FSharpList_get_Empty();\n    const node = fold((acc, x) => {\n        const t = new FSharpList(mapping(x), void 0);\n        acc.tail = t;\n        return t;\n    }, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\n\nexport function map2(mapping, xs, ys) {\n    const root = FSharpList_get_Empty();\n    const node = fold2((acc, x, y) => {\n        const t = new FSharpList(mapping(x, y), void 0);\n        acc.tail = t;\n        return t;\n    }, root, xs, ys);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function mapIndexed2(mapping, xs, ys) {\n    const loop = (i_mut, acc_mut, xs_1_mut, ys_1_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut, ys_1 = ys_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1) ? true : FSharpList__get_IsEmpty(ys_1)) {\n                return acc;\n            }\n            else {\n                i_mut = (i + 1);\n                acc_mut = (t = (new FSharpList(mapping(i, FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1)), void 0)), (acc.tail = t, t));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                ys_1_mut = FSharpList__get_Tail(ys_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node_1 = loop(0, root, xs, ys);\n    const t_2 = FSharpList_get_Empty();\n    node_1.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function map3(mapping, xs, ys, zs) {\n    const loop = (acc_mut, xs_1_mut, ys_1_mut, zs_1_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const acc = acc_mut, xs_1 = xs_1_mut, ys_1 = ys_1_mut, zs_1 = zs_1_mut;\n            if ((FSharpList__get_IsEmpty(xs_1) ? true : FSharpList__get_IsEmpty(ys_1)) ? true : FSharpList__get_IsEmpty(zs_1)) {\n                return acc;\n            }\n            else {\n                acc_mut = (t = (new FSharpList(mapping(FSharpList__get_Head(xs_1), FSharpList__get_Head(ys_1), FSharpList__get_Head(zs_1)), void 0)), (acc.tail = t, t));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                ys_1_mut = FSharpList__get_Tail(ys_1);\n                zs_1_mut = FSharpList__get_Tail(zs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node_1 = loop(root, xs, ys, zs);\n    const t_2 = FSharpList_get_Empty();\n    node_1.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function mapFold(mapping, state, xs) {\n    const root = FSharpList_get_Empty();\n    const patternInput_1 = fold((tupledArg, x) => {\n        let t;\n        const patternInput = mapping(tupledArg[1], x);\n        return [(t = (new FSharpList(patternInput[0], void 0)), (tupledArg[0].tail = t, t)), patternInput[1]];\n    }, [root, state], xs);\n    const t_2 = FSharpList_get_Empty();\n    patternInput_1[0].tail = t_2;\n    return [FSharpList__get_Tail(root), patternInput_1[1]];\n}\n\nexport function mapFoldBack(mapping, xs, state) {\n    return mapFold((acc, x) => mapping(x, acc), state, reverse(xs));\n}\n\nexport function tryPick(f, xs) {\n    const loop = (xs_1_mut) => {\n        loop:\n        while (true) {\n            const xs_1 = xs_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1)) {\n                return void 0;\n            }\n            else {\n                const matchValue = f(FSharpList__get_Head(xs_1));\n                if (matchValue == null) {\n                    xs_1_mut = FSharpList__get_Tail(xs_1);\n                    continue loop;\n                }\n                else {\n                    return matchValue;\n                }\n            }\n            break;\n        }\n    };\n    return loop(xs);\n}\n\nexport function pick(f, xs) {\n    const matchValue = tryPick(f, xs);\n    if (matchValue == null) {\n        throw (new Error(SR_keyNotFoundAlt));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function tryFind(f, xs) {\n    return tryPick((x) => (f(x) ? some(x) : (void 0)), xs);\n}\n\nexport function find(f, xs) {\n    const matchValue = tryFind(f, xs);\n    if (matchValue == null) {\n        throw (new Error(SR_keyNotFoundAlt));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function tryFindBack(f, xs) {\n    return tryFindBack_1(f, toArray(xs));\n}\n\nexport function findBack(f, xs) {\n    const matchValue = tryFindBack(f, xs);\n    if (matchValue == null) {\n        throw (new Error(SR_keyNotFoundAlt));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function tryFindIndex(f, xs) {\n    const loop = (i_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, xs_1 = xs_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1)) {\n                return void 0;\n            }\n            else if (f(FSharpList__get_Head(xs_1))) {\n                return i;\n            }\n            else {\n                i_mut = (i + 1);\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(0, xs);\n}\n\nexport function findIndex(f, xs) {\n    const matchValue = tryFindIndex(f, xs);\n    if (matchValue == null) {\n        throw (new Error(SR_keyNotFoundAlt));\n    }\n    else {\n        return matchValue | 0;\n    }\n}\n\nexport function tryFindIndexBack(f, xs) {\n    return tryFindIndexBack_1(f, toArray(xs));\n}\n\nexport function findIndexBack(f, xs) {\n    const matchValue = tryFindIndexBack(f, xs);\n    if (matchValue == null) {\n        throw (new Error(SR_keyNotFoundAlt));\n    }\n    else {\n        return matchValue | 0;\n    }\n}\n\nexport function tryItem(n, xs) {\n    const loop = (i_mut, xs_1_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut, xs_1 = xs_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1)) {\n                return void 0;\n            }\n            else if (i === n) {\n                return some(FSharpList__get_Head(xs_1));\n            }\n            else {\n                i_mut = (i + 1);\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(0, xs);\n}\n\nexport function item(n, xs) {\n    return FSharpList__get_Item_Z524259A4(xs, n);\n}\n\nexport function filter(f, xs) {\n    const root = FSharpList_get_Empty();\n    const node = fold((acc, x) => {\n        if (f(x)) {\n            const t = new FSharpList(x, void 0);\n            acc.tail = t;\n            return t;\n        }\n        else {\n            return acc;\n        }\n    }, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function partition(f, xs) {\n    const patternInput = [FSharpList_get_Empty(), FSharpList_get_Empty()];\n    const root2 = patternInput[1];\n    const root1 = patternInput[0];\n    const patternInput_1 = fold(uncurry(2, (tupledArg) => {\n        const lacc = tupledArg[0];\n        const racc = tupledArg[1];\n        return (x) => {\n            let t, t_2;\n            return f(x) ? [(t = (new FSharpList(x, void 0)), (lacc.tail = t, t)), racc] : [lacc, (t_2 = (new FSharpList(x, void 0)), (racc.tail = t_2, t_2))];\n        };\n    }), [root1, root2], xs);\n    const t_4 = FSharpList_get_Empty();\n    patternInput_1[0].tail = t_4;\n    const t_5 = FSharpList_get_Empty();\n    patternInput_1[1].tail = t_5;\n    return [FSharpList__get_Tail(root1), FSharpList__get_Tail(root2)];\n}\n\nexport function choose(f, xs) {\n    const root = FSharpList_get_Empty();\n    const node = fold((acc, x) => {\n        const matchValue = f(x);\n        if (matchValue == null) {\n            return acc;\n        }\n        else {\n            const t = new FSharpList(value_1(matchValue), void 0);\n            acc.tail = t;\n            return t;\n        }\n    }, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function contains(value, xs, eq) {\n    return tryFindIndex((v) => eq.Equals(value, v), xs) != null;\n}\n\nexport function initialize(n, f) {\n    let xs, t;\n    const root = FSharpList_get_Empty();\n    let node = root;\n    for (let i = 0; i <= (n - 1); i++) {\n        node = (xs = node, (t = (new FSharpList(f(i), void 0)), (xs.tail = t, t)));\n    }\n    const xs_2 = node;\n    const t_2 = FSharpList_get_Empty();\n    xs_2.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function replicate(n, x) {\n    return initialize(n, (_arg1) => x);\n}\n\nexport function reduce(f, xs) {\n    if (FSharpList__get_IsEmpty(xs)) {\n        throw (new Error(SR_inputListWasEmpty));\n    }\n    else {\n        return fold(f, head(xs), tail(xs));\n    }\n}\n\nexport function reduceBack(f, xs) {\n    if (FSharpList__get_IsEmpty(xs)) {\n        throw (new Error(SR_inputListWasEmpty));\n    }\n    else {\n        return foldBack(f, tail(xs), head(xs));\n    }\n}\n\nexport function forAll(f, xs) {\n    return fold((acc, x) => (acc ? f(x) : false), true, xs);\n}\n\nexport function forAll2(f, xs, ys) {\n    return fold2((acc, x, y) => (acc ? f(x, y) : false), true, xs, ys);\n}\n\nexport function exists(f, xs) {\n    return tryFindIndex(f, xs) != null;\n}\n\nexport function exists2(f_mut, xs_mut, ys_mut) {\n    exists2:\n    while (true) {\n        const f = f_mut, xs = xs_mut, ys = ys_mut;\n        const matchValue = [FSharpList__get_IsEmpty(xs), FSharpList__get_IsEmpty(ys)];\n        let pattern_matching_result;\n        if (matchValue[0]) {\n            if (matchValue[1]) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else if (matchValue[1]) {\n            pattern_matching_result = 2;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return false;\n            }\n            case 1: {\n                if (f(FSharpList__get_Head(xs), FSharpList__get_Head(ys))) {\n                    return true;\n                }\n                else {\n                    f_mut = f;\n                    xs_mut = FSharpList__get_Tail(xs);\n                    ys_mut = FSharpList__get_Tail(ys);\n                    continue exists2;\n                }\n            }\n            case 2: {\n                throw (new Error((SR_listsHadDifferentLengths + \"\\\\nParameter name: \") + \"list2\"));\n            }\n        }\n        break;\n    }\n}\n\nexport function unzip(xs) {\n    return foldBack((tupledArg, tupledArg_1) => [FSharpList_Cons_305B8EAC(tupledArg[0], tupledArg_1[0]), FSharpList_Cons_305B8EAC(tupledArg[1], tupledArg_1[1])], xs, [FSharpList_get_Empty(), FSharpList_get_Empty()]);\n}\n\nexport function unzip3(xs) {\n    return foldBack((tupledArg, tupledArg_1) => [FSharpList_Cons_305B8EAC(tupledArg[0], tupledArg_1[0]), FSharpList_Cons_305B8EAC(tupledArg[1], tupledArg_1[1]), FSharpList_Cons_305B8EAC(tupledArg[2], tupledArg_1[2])], xs, [FSharpList_get_Empty(), FSharpList_get_Empty(), FSharpList_get_Empty()]);\n}\n\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\n\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\n\nexport function sortWith(comparer, xs) {\n    const arr = toArray(xs);\n    arr.sort(comparer);\n    return ofArray(arr);\n}\n\nexport function sort(xs, comparer) {\n    return sortWith((x, y) => comparer.Compare(x, y), xs);\n}\n\nexport function sortBy(projection, xs, comparer) {\n    return sortWith((x, y) => comparer.Compare(projection(x), projection(y)), xs);\n}\n\nexport function sortDescending(xs, comparer) {\n    return sortWith((x, y) => (comparer.Compare(x, y) * -1), xs);\n}\n\nexport function sortByDescending(projection, xs, comparer) {\n    return sortWith((x, y) => (comparer.Compare(projection(x), projection(y)) * -1), xs);\n}\n\nexport function sum(xs, adder) {\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\n}\n\nexport function sumBy(f, xs, adder) {\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\n}\n\nexport function maxBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\n}\n\nexport function max(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\n}\n\nexport function minBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\n}\n\nexport function min(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\n}\n\nexport function average(xs, averager) {\n    let count = 0;\n    return averager.DivideByInt(fold((acc, x) => {\n        count = ((count + 1) | 0);\n        return averager.Add(acc, x);\n    }, averager.GetZero(), xs), count);\n}\n\nexport function averageBy(f, xs, averager) {\n    let count = 0;\n    return averager.DivideByInt(fold((acc, x) => {\n        count = ((count + 1) | 0);\n        return averager.Add(acc, f(x));\n    }, averager.GetZero(), xs), count);\n}\n\nexport function permute(f, xs) {\n    return ofArray(permute_1(f, toArray(xs)));\n}\n\nexport function chunkBySize(chunkSize, xs) {\n    return ofArray(map_1((xs_1) => ofArray(xs_1), chunkBySize_1(chunkSize, toArray(xs))));\n}\n\nexport function allPairs(xs, ys) {\n    const root = FSharpList_get_Empty();\n    let node = root;\n    iterate((x) => {\n        iterate((y) => {\n            let xs_1, t;\n            node = (xs_1 = node, (t = (new FSharpList([x, y], void 0)), (xs_1.tail = t, t)));\n        }, ys);\n    }, xs);\n    const xs_3 = node;\n    const t_2 = FSharpList_get_Empty();\n    xs_3.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function skip(count_mut, xs_mut) {\n    skip:\n    while (true) {\n        const count = count_mut, xs = xs_mut;\n        if (count <= 0) {\n            return xs;\n        }\n        else if (FSharpList__get_IsEmpty(xs)) {\n            throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"list\"));\n        }\n        else {\n            count_mut = (count - 1);\n            xs_mut = FSharpList__get_Tail(xs);\n            continue skip;\n        }\n        break;\n    }\n}\n\nexport function skipWhile(predicate_mut, xs_mut) {\n    skipWhile:\n    while (true) {\n        const predicate = predicate_mut, xs = xs_mut;\n        if (FSharpList__get_IsEmpty(xs)) {\n            return xs;\n        }\n        else if (!predicate(FSharpList__get_Head(xs))) {\n            return xs;\n        }\n        else {\n            predicate_mut = predicate;\n            xs_mut = FSharpList__get_Tail(xs);\n            continue skipWhile;\n        }\n        break;\n    }\n}\n\nexport function take(count, xs) {\n    if (count < 0) {\n        throw (new Error((SR_inputMustBeNonNegative + \"\\\\nParameter name: \") + \"count\"));\n    }\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\n            if (i <= 0) {\n                return acc;\n            }\n            else if (FSharpList__get_IsEmpty(xs_1)) {\n                throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"list\"));\n            }\n            else {\n                i_mut = (i - 1);\n                acc_mut = (t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node = loop(count, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function takeWhile(predicate, xs) {\n    const loop = (acc_mut, xs_1_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const acc = acc_mut, xs_1 = xs_1_mut;\n            if (FSharpList__get_IsEmpty(xs_1)) {\n                return acc;\n            }\n            else if (!predicate(FSharpList__get_Head(xs_1))) {\n                return acc;\n            }\n            else {\n                acc_mut = (t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node = loop(root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function truncate(count, xs) {\n    const loop = (i_mut, acc_mut, xs_1_mut) => {\n        let t;\n        loop:\n        while (true) {\n            const i = i_mut, acc = acc_mut, xs_1 = xs_1_mut;\n            if (i <= 0) {\n                return acc;\n            }\n            else if (FSharpList__get_IsEmpty(xs_1)) {\n                return acc;\n            }\n            else {\n                i_mut = (i - 1);\n                acc_mut = (t = (new FSharpList(FSharpList__get_Head(xs_1), void 0)), (acc.tail = t, t));\n                xs_1_mut = FSharpList__get_Tail(xs_1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    const root = FSharpList_get_Empty();\n    const node = loop(count, root, xs);\n    const t_2 = FSharpList_get_Empty();\n    node.tail = t_2;\n    return FSharpList__get_Tail(root);\n}\n\nexport function getSlice(startIndex, endIndex, xs) {\n    const len = length(xs) | 0;\n    const startIndex_1 = defaultArg(startIndex, 0) | 0;\n    const endIndex_1 = defaultArg(endIndex, len - 1) | 0;\n    if (startIndex_1 < 0) {\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"startIndex\"));\n    }\n    else if (endIndex_1 >= len) {\n        throw (new Error((SR_indexOutOfBounds + \"\\\\nParameter name: \") + \"endIndex\"));\n    }\n    else if (endIndex_1 < startIndex_1) {\n        return FSharpList_get_Empty();\n    }\n    else {\n        return take((endIndex_1 - startIndex_1) + 1, skip(startIndex_1, xs));\n    }\n}\n\nexport function splitAt(index, xs) {\n    if (index < 0) {\n        throw (new Error((SR_inputMustBeNonNegative + \"\\\\nParameter name: \") + \"index\"));\n    }\n    if (index > FSharpList__get_Length(xs)) {\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"index\"));\n    }\n    return [take(index, xs), skip(index, xs)];\n}\n\nexport function exactlyOne(xs) {\n    if (FSharpList__get_IsEmpty(xs)) {\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"list\"));\n    }\n    else if (FSharpList__get_IsEmpty(FSharpList__get_Tail(xs))) {\n        return FSharpList__get_Head(xs);\n    }\n    else {\n        throw (new Error((SR_inputSequenceTooLong + \"\\\\nParameter name: \") + \"list\"));\n    }\n}\n\nexport function tryExactlyOne(xs) {\n    if ((!FSharpList__get_IsEmpty(xs)) ? FSharpList__get_IsEmpty(FSharpList__get_Tail(xs)) : false) {\n        return some(FSharpList__get_Head(xs));\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function where(predicate, xs) {\n    return filter(predicate, xs);\n}\n\nexport function pairwise(xs) {\n    return ofArray(pairwise_1(toArray(xs)));\n}\n\nexport function windowed(windowSize, xs) {\n    return ofArray(map_1((xs_1) => ofArray(xs_1), windowed_1(windowSize, toArray(xs))));\n}\n\nexport function splitInto(chunks, xs) {\n    return ofArray(map_1((xs_1) => ofArray(xs_1), splitInto_1(chunks, toArray(xs))));\n}\n\nexport function transpose(lists) {\n    return ofArray(map_1((xs_1) => ofArray(xs_1), transpose_1(map_1((xs) => toArray(xs), Array.from(lists)))));\n}\n\n","import { substring, format, isNullOrEmpty, join } from \"./String.js\";\nimport { class_type } from \"./Reflection.js\";\nimport { clear, int32ToString } from \"./Util.js\";\nimport { toString } from \"./Types.js\";\n\nexport class StringBuilder {\n    constructor(value, capacity) {\n        this.buf = [];\n        if (!isNullOrEmpty(value)) {\n            void (this.buf.push(value));\n        }\n    }\n    toString() {\n        const __ = this;\n        return join(\"\", __.buf);\n    }\n}\n\nexport function StringBuilder$reflection() {\n    return class_type(\"System.Text.StringBuilder\", void 0, StringBuilder);\n}\n\nexport function StringBuilder_$ctor_Z18115A39(value, capacity) {\n    return new StringBuilder(value, capacity);\n}\n\nexport function StringBuilder_$ctor_Z524259A4(capacity) {\n    return StringBuilder_$ctor_Z18115A39(\"\", capacity);\n}\n\nexport function StringBuilder_$ctor_Z721C83C5(value) {\n    return StringBuilder_$ctor_Z18115A39(value, 16);\n}\n\nexport function StringBuilder_$ctor() {\n    return StringBuilder_$ctor_Z18115A39(\"\", 16);\n}\n\nexport function StringBuilder__Append_Z721C83C5(x, s) {\n    void (x.buf.push(s));\n    return x;\n}\n\nexport function StringBuilder__Append_244C7CD6(x, c) {\n    void (x.buf.push(c));\n    return x;\n}\n\nexport function StringBuilder__Append_Z524259A4(x, o) {\n    void (x.buf.push(int32ToString(o)));\n    return x;\n}\n\nexport function StringBuilder__Append_5E38073B(x, o) {\n    void (x.buf.push(o.toString()));\n    return x;\n}\n\nexport function StringBuilder__Append_Z1FBCCD16(x, o) {\n    void (x.buf.push(toString(o)));\n    return x;\n}\n\nexport function StringBuilder__Append_4E60E31B(x, o) {\n    void (x.buf.push(toString(o)));\n    return x;\n}\n\nexport function StringBuilder__Append_695F1130(x, cs) {\n    void (x.buf.push(cs.join('')));\n    return x;\n}\n\nexport function StringBuilder__Append_43A65C09(x, s) {\n    void (x.buf.push(toString(s)));\n    return x;\n}\n\nexport function StringBuilder__AppendFormat_433E080(x, fmt, o) {\n    void (x.buf.push(format(fmt, o)));\n    return x;\n}\n\nexport function StringBuilder__AppendLine(x) {\n    void (x.buf.push(\"\\n\"));\n    return x;\n}\n\nexport function StringBuilder__AppendLine_Z721C83C5(x, s) {\n    void (x.buf.push(s));\n    void (x.buf.push(\"\\n\"));\n    return x;\n}\n\nexport function StringBuilder__get_Length(x) {\n    let len = 0;\n    for (let i = x.buf.length - 1; i >= 0; i--) {\n        len = ((len + x.buf[i].length) | 0);\n    }\n    return len | 0;\n}\n\nexport function StringBuilder__ToString_Z37302880(x, firstIndex, length) {\n    return substring(toString(x), firstIndex, length);\n}\n\nexport function StringBuilder__Clear(x) {\n    clear(x.buf);\n    return x;\n}\n\n","import { structuralHash, equals } from \"./Util.js\";\nimport { HashIdentity_Structural, ComparisonIdentity_Structural } from \"./FSharp.Collections.js\";\nimport { StringBuilder__Append_Z721C83C5 } from \"./System.Text.js\";\n\nexport const LanguagePrimitives_GenericEqualityComparer = {\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\n        return equals(x, y);\n    },\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\n        return structuralHash(x_1);\n    },\n};\n\nexport const LanguagePrimitives_GenericEqualityERComparer = {\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\n        return equals(x, y);\n    },\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\n        return structuralHash(x_1);\n    },\n};\n\nexport function LanguagePrimitives_FastGenericComparer() {\n    return ComparisonIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericComparerFromTable() {\n    return ComparisonIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericEqualityComparer() {\n    return HashIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericEqualityComparerFromTable() {\n    return HashIdentity_Structural();\n}\n\nexport function Operators_Failure(message) {\n    return new Error(message);\n}\n\nexport function Operators_FailurePattern(exn) {\n    return exn.message;\n}\n\nexport function Operators_NullArg(x) {\n    throw (new Error(x));\n}\n\nexport function Operators_Using(resource, action) {\n    try {\n        return action(resource);\n    }\n    finally {\n        if (equals(resource, null)) {\n        }\n        else {\n            resource.Dispose();\n        }\n    }\n}\n\nexport function Operators_Lock(_lockObj, action) {\n    return action();\n}\n\nexport function ExtraTopLevelOperators_LazyPattern(input) {\n    return input.Value;\n}\n\nexport function PrintfModule_PrintFormatToStringBuilderThen(continuation, builder, format) {\n    return format.cont((s) => {\n        void StringBuilder__Append_Z721C83C5(builder, s);\n        return continuation();\n    });\n}\n\nexport function PrintfModule_PrintFormatToStringBuilder(builder, format) {\n    return PrintfModule_PrintFormatToStringBuilderThen(() => {\n    }, builder, format);\n}\n\n","import { equals, isArrayLike, isDisposable, toIterator, getEnumerator } from \"./Util.js\";\nimport { toString } from \"./Types.js\";\nimport { class_type } from \"./Reflection.js\";\nimport { some, value as value_1 } from \"./Option.js\";\nimport { Operators_NullArg } from \"./FSharp.Core.js\";\nimport { chunkBySize as chunkBySize_1, permute as permute_1, transpose as transpose_1, windowed as windowed_1, splitInto as splitInto_1, map as map_1, pairwise as pairwise_1, scanBack as scanBack_1, reverse as reverse_1, mapFoldBack as mapFoldBack_1, mapFold as mapFold_1, tryItem as tryItem_1, tryHead as tryHead_1, foldBack2 as foldBack2_1, foldBack as foldBack_1, tryFindIndexBack as tryFindIndexBack_1, tryFindBack as tryFindBack_1, singleton as singleton_1 } from \"./Array.js\";\nimport { length as length_1, tryItem as tryItem_2, isEmpty as isEmpty_1, tryHead as tryHead_2, ofSeq as ofSeq_1, ofArray as ofArray_1, toArray as toArray_1, FSharpList } from \"./List.js\";\n\nexport const SR_enumerationAlreadyFinished = \"Enumeration already finished.\";\n\nexport const SR_enumerationNotStarted = \"Enumeration has not started. Call MoveNext.\";\n\nexport const SR_inputSequenceEmpty = \"The input sequence was empty.\";\n\nexport const SR_inputSequenceTooLong = \"The input sequence contains more than one element.\";\n\nexport const SR_keyNotFoundAlt = \"An index satisfying the predicate was not found in the collection.\";\n\nexport const SR_notEnoughElements = \"The input sequence has an insufficient number of elements.\";\n\nexport const SR_resetNotSupported = \"Reset is not supported on this enumerator.\";\n\nexport function Enumerator_noReset() {\n    throw (new Error(SR_resetNotSupported));\n}\n\nexport function Enumerator_notStarted() {\n    throw (new Error(SR_enumerationNotStarted));\n}\n\nexport function Enumerator_alreadyFinished() {\n    throw (new Error(SR_enumerationAlreadyFinished));\n}\n\nexport class Enumerator_Seq {\n    constructor(f) {\n        this.f = f;\n    }\n    toString() {\n        const xs = this;\n        const maxCount = 4;\n        let i = 0;\n        let str = \"seq [\";\n        const e = getEnumerator(xs);\n        try {\n            while ((i < maxCount) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n                if (i > 0) {\n                    str = (str + \"; \");\n                }\n                str = (str + toString(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()));\n                i = ((i + 1) | 0);\n            }\n            if (i === maxCount) {\n                str = (str + \"; ...\");\n            }\n            return str + \"]\";\n        }\n        finally {\n            e.Dispose();\n        }\n    }\n    GetEnumerator() {\n        const x = this;\n        return x.f();\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const x = this;\n        return x.f();\n    }\n}\n\nexport function Enumerator_Seq$reflection(gen0) {\n    return class_type(\"SeqModule.Enumerator.Seq\", [gen0], Enumerator_Seq);\n}\n\nexport function Enumerator_Seq_$ctor_673A07F2(f) {\n    return new Enumerator_Seq(f);\n}\n\nexport class Enumerator_FromFunctions$1 {\n    constructor(current, next, dispose) {\n        this.current = current;\n        this.next = next;\n        this.dispose = dispose;\n    }\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n        const __ = this;\n        return __.current();\n    }\n    [\"System.Collections.IEnumerator.get_Current\"]() {\n        const __ = this;\n        return __.current();\n    }\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\n        const __ = this;\n        return __.next();\n    }\n    [\"System.Collections.IEnumerator.Reset\"]() {\n        return Enumerator_noReset();\n    }\n    Dispose() {\n        const __ = this;\n        __.dispose();\n    }\n}\n\nexport function Enumerator_FromFunctions$1$reflection(gen0) {\n    return class_type(\"SeqModule.Enumerator.FromFunctions`1\", [gen0], Enumerator_FromFunctions$1);\n}\n\nexport function Enumerator_FromFunctions$1_$ctor_58C54629(current, next, dispose) {\n    return new Enumerator_FromFunctions$1(current, next, dispose);\n}\n\nexport function Enumerator_cast(e) {\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => e[\"System.Collections.IEnumerator.get_Current\"](), () => e[\"System.Collections.IEnumerator.MoveNext\"](), () => {\n        if (isDisposable(e)) {\n            e.Dispose();\n        }\n    });\n}\n\nexport function Enumerator_concat(sources) {\n    let outerOpt = void 0;\n    let innerOpt = void 0;\n    let started = false;\n    let finished = false;\n    let curr = void 0;\n    const finish = () => {\n        finished = true;\n        if (innerOpt != null) {\n            const inner = innerOpt;\n            try {\n                inner.Dispose();\n            }\n            finally {\n                innerOpt = (void 0);\n            }\n        }\n        if (outerOpt != null) {\n            const outer = outerOpt;\n            try {\n                outer.Dispose();\n            }\n            finally {\n                outerOpt = (void 0);\n            }\n        }\n    };\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\n        if (!started) {\n            Enumerator_notStarted();\n        }\n        else if (finished) {\n            Enumerator_alreadyFinished();\n        }\n        if (curr != null) {\n            return value_1(curr);\n        }\n        else {\n            return Enumerator_alreadyFinished();\n        }\n    }, () => {\n        let copyOfStruct;\n        if (!started) {\n            started = true;\n        }\n        if (finished) {\n            return false;\n        }\n        else {\n            let res = void 0;\n            while (res == null) {\n                const matchValue = [outerOpt, innerOpt];\n                if (matchValue[0] != null) {\n                    if (matchValue[1] != null) {\n                        const inner_1 = matchValue[1];\n                        if (inner_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                            curr = some(inner_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n                            res = true;\n                        }\n                        else {\n                            try {\n                                inner_1.Dispose();\n                            }\n                            finally {\n                                innerOpt = (void 0);\n                            }\n                        }\n                    }\n                    else {\n                        const outer_1 = matchValue[0];\n                        if (outer_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                            const ie = outer_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                            innerOpt = (copyOfStruct = ie, getEnumerator(copyOfStruct));\n                        }\n                        else {\n                            finish();\n                            res = false;\n                        }\n                    }\n                }\n                else {\n                    outerOpt = getEnumerator(sources);\n                }\n            }\n            return value_1(res);\n        }\n    }, () => {\n        if (!finished) {\n            finish();\n        }\n    });\n}\n\nexport function Enumerator_enumerateThenFinally(f, e) {\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => e[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), () => e[\"System.Collections.IEnumerator.MoveNext\"](), () => {\n        try {\n            e.Dispose();\n        }\n        finally {\n            f();\n        }\n    });\n}\n\nexport function Enumerator_generateWhileSome(openf, compute, closef) {\n    let started = false;\n    let curr = void 0;\n    let state = some(openf());\n    const dispose = () => {\n        if (state != null) {\n            const x_1 = value_1(state);\n            try {\n                closef(x_1);\n            }\n            finally {\n                state = (void 0);\n            }\n        }\n    };\n    const finish = () => {\n        try {\n            dispose();\n        }\n        finally {\n            curr = (void 0);\n        }\n    };\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\n        if (!started) {\n            Enumerator_notStarted();\n        }\n        if (curr != null) {\n            return value_1(curr);\n        }\n        else {\n            return Enumerator_alreadyFinished();\n        }\n    }, () => {\n        if (!started) {\n            started = true;\n        }\n        if (state != null) {\n            const s = value_1(state);\n            let matchValue_1;\n            try {\n                matchValue_1 = compute(s);\n            }\n            catch (matchValue) {\n                finish();\n                throw matchValue;\n            }\n            if (matchValue_1 != null) {\n                curr = matchValue_1;\n                return true;\n            }\n            else {\n                finish();\n                return false;\n            }\n        }\n        else {\n            return false;\n        }\n    }, dispose);\n}\n\nexport function Enumerator_unfold(f, state) {\n    let curr = void 0;\n    let acc = state;\n    return Enumerator_FromFunctions$1_$ctor_58C54629(() => {\n        if (curr != null) {\n            const st = curr[1];\n            return curr[0];\n        }\n        else {\n            return Enumerator_notStarted();\n        }\n    }, () => {\n        curr = f(acc);\n        if (curr != null) {\n            const x_1 = curr[0];\n            const st_1 = curr[1];\n            acc = st_1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    }, () => {\n    });\n}\n\nexport function indexNotFound() {\n    throw (new Error(SR_keyNotFoundAlt));\n}\n\nexport function checkNonNull(argName, arg) {\n    if (arg == null) {\n        Operators_NullArg(argName);\n    }\n}\n\nexport function mkSeq(f) {\n    return Enumerator_Seq_$ctor_673A07F2(f);\n}\n\nexport function ofSeq(xs) {\n    checkNonNull(\"source\", xs);\n    return getEnumerator(xs);\n}\n\nexport function delay(generator) {\n    return mkSeq(() => getEnumerator(generator()));\n}\n\nexport function concat(sources) {\n    return mkSeq(() => Enumerator_concat(sources));\n}\n\nexport function unfold(generator, state) {\n    return mkSeq(() => Enumerator_unfold(generator, state));\n}\n\nexport function empty() {\n    return delay(() => (new Array(0)));\n}\n\nexport function singleton(x) {\n    return delay(() => singleton_1(x));\n}\n\nexport function ofArray(arr) {\n    return arr;\n}\n\nexport function toArray(xs) {\n    if (isArrayLike(xs)) {\n        return xs;\n    }\n    else if (xs instanceof FSharpList) {\n        return toArray_1(xs);\n    }\n    else {\n        return Array.from(xs);\n    }\n}\n\nexport function ofList(xs) {\n    return xs;\n}\n\nexport function toList(xs) {\n    if (isArrayLike(xs)) {\n        return ofArray_1(xs);\n    }\n    else if (xs instanceof FSharpList) {\n        return xs;\n    }\n    else {\n        return ofSeq_1(xs);\n    }\n}\n\nexport function generate(create, compute, dispose) {\n    return mkSeq(() => Enumerator_generateWhileSome(create, compute, dispose));\n}\n\nexport function generateIndexed(create, compute, dispose) {\n    return mkSeq(() => {\n        let i = -1;\n        return Enumerator_generateWhileSome(create, (x) => {\n            i = ((i + 1) | 0);\n            return compute(i, x);\n        }, dispose);\n    });\n}\n\nexport function append(xs, ys) {\n    return concat([xs, ys]);\n}\n\nexport function cast(xs) {\n    return mkSeq(() => {\n        checkNonNull(\"source\", xs);\n        return Enumerator_cast(getEnumerator(xs));\n    });\n}\n\nexport function choose(chooser, xs) {\n    return generate(() => ofSeq(xs), (e) => {\n        let curr = void 0;\n        while ((curr == null) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n            curr = chooser(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        return curr;\n    }, (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function compareWith(comparer, xs, ys) {\n    const e1 = ofSeq(xs);\n    try {\n        const e2 = ofSeq(ys);\n        try {\n            let c = 0;\n            let b1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\n            let b2 = e2[\"System.Collections.IEnumerator.MoveNext\"]();\n            while (((c === 0) ? b1 : false) ? b2 : false) {\n                c = (comparer(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) | 0);\n                if (c === 0) {\n                    b1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\n                    b2 = e2[\"System.Collections.IEnumerator.MoveNext\"]();\n                }\n            }\n            return ((c !== 0) ? c : (b1 ? 1 : (b2 ? -1 : 0))) | 0;\n        }\n        finally {\n            e2.Dispose();\n        }\n    }\n    finally {\n        e1.Dispose();\n    }\n}\n\nexport function contains(value, xs, comparer) {\n    const e = ofSeq(xs);\n    try {\n        let found = false;\n        while ((!found) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n            found = comparer.Equals(value, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        return found;\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function enumerateFromFunctions(create, moveNext, current) {\n    return generate(create, (x) => (moveNext(x) ? some(current(x)) : (void 0)), (x_1) => {\n        const matchValue = x_1;\n        if (isDisposable(matchValue)) {\n            matchValue.Dispose();\n        }\n    });\n}\n\nexport function enumerateThenFinally(source, compensation) {\n    const compensation_1 = compensation;\n    return mkSeq(() => {\n        try {\n            return Enumerator_enumerateThenFinally(compensation_1, ofSeq(source));\n        }\n        catch (matchValue) {\n            compensation_1();\n            throw matchValue;\n        }\n    });\n}\n\nexport function enumerateUsing(resource, source) {\n    const compensation = () => {\n        if (equals(resource, null)) {\n        }\n        else {\n            let copyOfStruct = resource;\n            copyOfStruct.Dispose();\n        }\n    };\n    return mkSeq(() => {\n        try {\n            return Enumerator_enumerateThenFinally(compensation, ofSeq(source(resource)));\n        }\n        catch (matchValue_1) {\n            compensation();\n            throw matchValue_1;\n        }\n    });\n}\n\nexport function enumerateWhile(guard, xs) {\n    return concat(unfold((i) => (guard() ? [xs, i + 1] : (void 0)), 0));\n}\n\nexport function filter(f, xs) {\n    return choose((x) => {\n        if (f(x)) {\n            return some(x);\n        }\n        else {\n            return void 0;\n        }\n    }, xs);\n}\n\nexport function exists(predicate, xs) {\n    const e = ofSeq(xs);\n    try {\n        let found = false;\n        while ((!found) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n            found = predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        return found;\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function exists2(predicate, xs, ys) {\n    const e1 = ofSeq(xs);\n    try {\n        const e2 = ofSeq(ys);\n        try {\n            let found = false;\n            while (((!found) ? e1[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n                found = predicate(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n            }\n            return found;\n        }\n        finally {\n            e2.Dispose();\n        }\n    }\n    finally {\n        e1.Dispose();\n    }\n}\n\nexport function exactlyOne(xs) {\n    const e = ofSeq(xs);\n    try {\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const v = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                throw (new Error((SR_inputSequenceTooLong + \"\\\\nParameter name: \") + \"source\"));\n            }\n            else {\n                return v;\n            }\n        }\n        else {\n            throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\n        }\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function tryExactlyOne(xs) {\n    const e = ofSeq(xs);\n    try {\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const v = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? (void 0) : some(v);\n        }\n        else {\n            return void 0;\n        }\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function tryFind(predicate, xs) {\n    const e = ofSeq(xs);\n    try {\n        let res = void 0;\n        while ((res == null) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n            const c = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            if (predicate(c)) {\n                res = some(c);\n            }\n        }\n        return res;\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function find(predicate, xs) {\n    const matchValue = tryFind(predicate, xs);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function tryFindBack(predicate, xs) {\n    return tryFindBack_1(predicate, toArray(xs));\n}\n\nexport function findBack(predicate, xs) {\n    const matchValue = tryFindBack(predicate, xs);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function tryFindIndex(predicate, xs) {\n    const e = ofSeq(xs);\n    try {\n        const loop = (i_mut) => {\n            loop:\n            while (true) {\n                const i = i_mut;\n                if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                    if (predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) {\n                        return i;\n                    }\n                    else {\n                        i_mut = (i + 1);\n                        continue loop;\n                    }\n                }\n                else {\n                    return void 0;\n                }\n                break;\n            }\n        };\n        return loop(0);\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function findIndex(predicate, xs) {\n    const matchValue = tryFindIndex(predicate, xs);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return matchValue | 0;\n    }\n}\n\nexport function tryFindIndexBack(predicate, xs) {\n    return tryFindIndexBack_1(predicate, toArray(xs));\n}\n\nexport function findIndexBack(predicate, xs) {\n    const matchValue = tryFindIndexBack(predicate, xs);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return matchValue | 0;\n    }\n}\n\nexport function fold(folder, state, xs) {\n    const e = ofSeq(xs);\n    try {\n        let acc = state;\n        while (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            acc = folder(acc, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        return acc;\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function foldBack(folder, xs, state) {\n    return foldBack_1(folder, toArray(xs), state);\n}\n\nexport function fold2(folder, state, xs, ys) {\n    const e1 = ofSeq(xs);\n    try {\n        const e2 = ofSeq(ys);\n        try {\n            let acc = state;\n            while (e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n                acc = folder(acc, e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n            }\n            return acc;\n        }\n        finally {\n            e2.Dispose();\n        }\n    }\n    finally {\n        e1.Dispose();\n    }\n}\n\nexport function foldBack2(folder, xs, ys, state) {\n    return foldBack2_1(folder, toArray(xs), toArray(ys), state);\n}\n\nexport function forAll(predicate, xs) {\n    return !exists((x) => (!predicate(x)), xs);\n}\n\nexport function forAll2(predicate, xs, ys) {\n    return !exists2((x, y) => (!predicate(x, y)), xs, ys);\n}\n\nexport function tryHead(xs) {\n    if (isArrayLike(xs)) {\n        return tryHead_1(xs);\n    }\n    else if (xs instanceof FSharpList) {\n        return tryHead_2(xs);\n    }\n    else {\n        const e = ofSeq(xs);\n        try {\n            return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0);\n        }\n        finally {\n            e.Dispose();\n        }\n    }\n}\n\nexport function head(xs) {\n    const matchValue = tryHead(xs);\n    if (matchValue == null) {\n        throw (new Error((SR_inputSequenceEmpty + \"\\\\nParameter name: \") + \"source\"));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function initialize(count, f) {\n    return unfold((i) => ((i < count) ? [f(i), i + 1] : (void 0)), 0);\n}\n\nexport function initializeInfinite(f) {\n    return initialize(2147483647, f);\n}\n\nexport function isEmpty(xs) {\n    if (isArrayLike(xs)) {\n        return xs.length === 0;\n    }\n    else if (xs instanceof FSharpList) {\n        return isEmpty_1(xs);\n    }\n    else {\n        const e = ofSeq(xs);\n        try {\n            return !e[\"System.Collections.IEnumerator.MoveNext\"]();\n        }\n        finally {\n            e.Dispose();\n        }\n    }\n}\n\nexport function tryItem(index, xs) {\n    if (isArrayLike(xs)) {\n        return tryItem_1(index, xs);\n    }\n    else if (xs instanceof FSharpList) {\n        return tryItem_2(index, xs);\n    }\n    else {\n        const e = ofSeq(xs);\n        try {\n            const loop = (index_1_mut) => {\n                loop:\n                while (true) {\n                    const index_1 = index_1_mut;\n                    if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                        return void 0;\n                    }\n                    else if (index_1 === 0) {\n                        return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n                    }\n                    else {\n                        index_1_mut = (index_1 - 1);\n                        continue loop;\n                    }\n                    break;\n                }\n            };\n            return loop(index);\n        }\n        finally {\n            e.Dispose();\n        }\n    }\n}\n\nexport function item(index, xs) {\n    const matchValue = tryItem(index, xs);\n    if (matchValue == null) {\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"index\"));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function iterate(action, xs) {\n    return fold((unitVar0, x) => {\n        action(x);\n    }, void 0, xs);\n}\n\nexport function iterate2(action, xs, ys) {\n    return fold2((unitVar0, x, y) => {\n        action(x, y);\n    }, void 0, xs, ys);\n}\n\nexport function iterateIndexed(action, xs) {\n    void fold((i, x) => {\n        action(i, x);\n        return (i + 1) | 0;\n    }, 0, xs);\n}\n\nexport function iterateIndexed2(action, xs, ys) {\n    void fold2((i, x, y) => {\n        action(i, x, y);\n        return (i + 1) | 0;\n    }, 0, xs, ys);\n}\n\nexport function tryLast(xs) {\n    const e = ofSeq(xs);\n    try {\n        const loop = (acc_mut) => {\n            loop:\n            while (true) {\n                const acc = acc_mut;\n                if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                    return acc;\n                }\n                else {\n                    acc_mut = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                    continue loop;\n                }\n                break;\n            }\n        };\n        return e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(loop(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function last(xs) {\n    const matchValue = tryLast(xs);\n    if (matchValue == null) {\n        throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function length(xs) {\n    if (isArrayLike(xs)) {\n        return xs.length | 0;\n    }\n    else if (xs instanceof FSharpList) {\n        return length_1(xs) | 0;\n    }\n    else {\n        const e = ofSeq(xs);\n        try {\n            let count = 0;\n            while (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                count = ((count + 1) | 0);\n            }\n            return count | 0;\n        }\n        finally {\n            e.Dispose();\n        }\n    }\n}\n\nexport function map(mapping, xs) {\n    return generate(() => ofSeq(xs), (e) => (e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(mapping(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0)), (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function mapIndexed(mapping, xs) {\n    return generateIndexed(() => ofSeq(xs), (i, e) => (e[\"System.Collections.IEnumerator.MoveNext\"]() ? some(mapping(i, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0)), (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\n\nexport function map2(mapping, xs, ys) {\n    return generate(() => [ofSeq(xs), ofSeq(ys)], (tupledArg) => {\n        const e1 = tupledArg[0];\n        const e2 = tupledArg[1];\n        return (e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(mapping(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\n    }, (tupledArg_1) => {\n        try {\n            tupledArg_1[0].Dispose();\n        }\n        finally {\n            tupledArg_1[1].Dispose();\n        }\n    });\n}\n\nexport function mapIndexed2(mapping, xs, ys) {\n    return generateIndexed(() => [ofSeq(xs), ofSeq(ys)], (i, tupledArg) => {\n        const e1 = tupledArg[0];\n        const e2 = tupledArg[1];\n        return (e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(mapping(i, e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\n    }, (tupledArg_1) => {\n        try {\n            tupledArg_1[0].Dispose();\n        }\n        finally {\n            tupledArg_1[1].Dispose();\n        }\n    });\n}\n\nexport function map3(mapping, xs, ys, zs) {\n    return generate(() => [ofSeq(xs), ofSeq(ys), ofSeq(zs)], (tupledArg) => {\n        const e1 = tupledArg[0];\n        const e2 = tupledArg[1];\n        const e3 = tupledArg[2];\n        return ((e1[\"System.Collections.IEnumerator.MoveNext\"]() ? e2[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? e3[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(mapping(e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), e3[\"System.Collections.Generic.IEnumerator`1.get_Current\"]())) : (void 0);\n    }, (tupledArg_1) => {\n        try {\n            tupledArg_1[0].Dispose();\n        }\n        finally {\n            try {\n                tupledArg_1[1].Dispose();\n            }\n            finally {\n                tupledArg_1[2].Dispose();\n            }\n        }\n    });\n}\n\nexport function readOnly(xs) {\n    checkNonNull(\"source\", xs);\n    return map((x) => x, xs);\n}\n\nexport function cache(xs) {\n    let cached = false;\n    const xsCache = [];\n    return delay(() => {\n        if (!cached) {\n            cached = true;\n            return map((x) => {\n                void (xsCache.push(x));\n                return x;\n            }, xs);\n        }\n        else {\n            return xsCache;\n        }\n    });\n}\n\nexport function allPairs(xs, ys) {\n    const ysCache = cache(ys);\n    return delay(() => concat(map((x) => map((y) => [x, y], ysCache), xs)));\n}\n\nexport function mapFold(mapping, state, xs) {\n    const patternInput = mapFold_1(mapping, state, toArray(xs));\n    return [readOnly(patternInput[0]), patternInput[1]];\n}\n\nexport function mapFoldBack(mapping, xs, state) {\n    const patternInput = mapFoldBack_1(mapping, toArray(xs), state);\n    return [readOnly(patternInput[0]), patternInput[1]];\n}\n\nexport function tryPick(chooser, xs) {\n    const e = ofSeq(xs);\n    try {\n        let res = void 0;\n        while ((res == null) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) {\n            res = chooser(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        return res;\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function pick(chooser, xs) {\n    const matchValue = tryPick(chooser, xs);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function reduce(folder, xs) {\n    const e = ofSeq(xs);\n    try {\n        const loop = (acc_mut) => {\n            loop:\n            while (true) {\n                const acc = acc_mut;\n                if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                    acc_mut = folder(acc, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n                    continue loop;\n                }\n                else {\n                    return acc;\n                }\n                break;\n            }\n        };\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            return loop(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n        }\n        else {\n            throw (new Error(SR_inputSequenceEmpty));\n        }\n    }\n    finally {\n        e.Dispose();\n    }\n}\n\nexport function reduceBack(folder, xs) {\n    const arr = toArray(xs);\n    if (arr.length > 0) {\n        return arr.reduceRight(folder);\n    }\n    else {\n        throw (new Error(SR_inputSequenceEmpty));\n    }\n}\n\nexport function replicate(n, x) {\n    return initialize(n, (_arg1) => x);\n}\n\nexport function reverse(xs) {\n    return delay(() => ofArray(reverse_1(toArray(xs))));\n}\n\nexport function scan(folder, state, xs) {\n    return delay(() => {\n        let acc = state;\n        return concat([singleton(state), map((x) => {\n            acc = folder(acc, x);\n            return acc;\n        }, xs)]);\n    });\n}\n\nexport function scanBack(folder, xs, state) {\n    return delay(() => ofArray(scanBack_1(folder, toArray(xs), state)));\n}\n\nexport function skip(count, xs) {\n    return mkSeq(() => {\n        const e = ofSeq(xs);\n        try {\n            for (let i = 1; i <= count; i++) {\n                if (!e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                    throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\n                }\n            }\n            return Enumerator_enumerateThenFinally(() => {\n            }, e);\n        }\n        catch (matchValue) {\n            e.Dispose();\n            throw matchValue;\n        }\n    });\n}\n\nexport function skipWhile(predicate, xs) {\n    return delay(() => {\n        let skipped = true;\n        return filter((x) => {\n            if (skipped) {\n                skipped = predicate(x);\n            }\n            return !skipped;\n        }, xs);\n    });\n}\n\nexport function tail(xs) {\n    return skip(1, xs);\n}\n\nexport function take(count, xs) {\n    return generateIndexed(() => ofSeq(xs), (i, e) => {\n        if (i < count) {\n            if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                return some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n            }\n            else {\n                throw (new Error((SR_notEnoughElements + \"\\\\nParameter name: \") + \"source\"));\n            }\n        }\n        else {\n            return void 0;\n        }\n    }, (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function takeWhile(predicate, xs) {\n    return generate(() => ofSeq(xs), (e) => ((e[\"System.Collections.IEnumerator.MoveNext\"]() ? predicate(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : false) ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0)), (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function truncate(count, xs) {\n    return generateIndexed(() => ofSeq(xs), (i, e) => (((i < count) ? e[\"System.Collections.IEnumerator.MoveNext\"]() : false) ? some(e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]()) : (void 0)), (e_1) => {\n        e_1.Dispose();\n    });\n}\n\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\n\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\n\nexport function collect(mapping, xs) {\n    return delay(() => concat(map(mapping, xs)));\n}\n\nexport function where(predicate, xs) {\n    return filter(predicate, xs);\n}\n\nexport function pairwise(xs) {\n    return delay(() => ofArray(pairwise_1(toArray(xs))));\n}\n\nexport function splitInto(chunks, xs) {\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), splitInto_1(chunks, toArray(xs)))));\n}\n\nexport function windowed(windowSize, xs) {\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), windowed_1(windowSize, toArray(xs)))));\n}\n\nexport function transpose(xss) {\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), transpose_1(map_1((xs_1) => toArray(xs_1), toArray(xss))))));\n}\n\nexport function sortWith(comparer, xs) {\n    return delay(() => {\n        const arr = toArray(xs);\n        arr.sort(comparer);\n        return ofArray(arr);\n    });\n}\n\nexport function sort(xs, comparer) {\n    return sortWith((x, y) => comparer.Compare(x, y), xs);\n}\n\nexport function sortBy(projection, xs, comparer) {\n    return sortWith((x, y) => comparer.Compare(projection(x), projection(y)), xs);\n}\n\nexport function sortDescending(xs, comparer) {\n    return sortWith((x, y) => (comparer.Compare(x, y) * -1), xs);\n}\n\nexport function sortByDescending(projection, xs, comparer) {\n    return sortWith((x, y) => (comparer.Compare(projection(x), projection(y)) * -1), xs);\n}\n\nexport function sum(xs, adder) {\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\n}\n\nexport function sumBy(f, xs, adder) {\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\n}\n\nexport function maxBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\n}\n\nexport function max(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\n}\n\nexport function minBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\n}\n\nexport function min(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\n}\n\nexport function average(xs, averager) {\n    let count = 0;\n    return averager.DivideByInt(fold((acc, x) => {\n        count = ((count + 1) | 0);\n        return averager.Add(acc, x);\n    }, averager.GetZero(), xs), count);\n}\n\nexport function averageBy(f, xs, averager) {\n    let count = 0;\n    return averager.DivideByInt(fold((acc, x) => {\n        count = ((count + 1) | 0);\n        return averager.Add(acc, f(x));\n    }, averager.GetZero(), xs), count);\n}\n\nexport function permute(f, xs) {\n    return delay(() => ofArray(permute_1(f, toArray(xs))));\n}\n\nexport function chunkBySize(chunkSize, xs) {\n    return delay(() => ofArray(map_1((arr) => ofArray(arr), chunkBySize_1(chunkSize, toArray(xs)))));\n}\n\n","import { useLayoutEffectWithDeps, useLayoutEffect, useEffectWithDeps, useEffect, useDebugValue } from \"./ReactInterop.js\";\r\nimport { class_type } from \"../fable-library.3.1.11/Reflection.js\";\r\nimport { iterate } from \"../fable-library.3.1.11/Seq.js\";\r\nimport { defaultArg, some, toArray } from \"../fable-library.3.1.11/Option.js\";\r\nimport { Interop_reactApi } from \"./Interop.fs.js\";\r\nimport { curry, uncurry } from \"../fable-library.3.1.11/Util.js\";\r\nimport { useState } from \"react\";\r\nimport * as react from \"react\";\r\n\r\nexport const ReactInterop_useDebugValueWithFormatter = useDebugValue;\r\n\r\nexport const ReactInterop_useEffect = useEffect;\r\n\r\nexport const ReactInterop_useEffectWithDeps = useEffectWithDeps;\r\n\r\nexport const ReactInterop_useLayoutEffect = useLayoutEffect;\r\n\r\nexport const ReactInterop_useLayoutEffectWithDeps = useLayoutEffectWithDeps;\r\n\r\nexport class Internal {\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport function Internal$reflection() {\r\n    return class_type(\"Feliz.Internal\", void 0, Internal);\r\n}\r\n\r\nexport function Internal_$ctor() {\r\n    return new Internal();\r\n}\r\n\r\n(() => {\r\n})();\r\n\r\nexport function Internal_functionComponent_Z1B155329(renderElement, name, withKey) {\r\n    iterate((name_1) => {\r\n        renderElement.displayName = name_1;\r\n    }, toArray(name));\r\n    console.warn(some(\"Feliz: using React.functionComponent in Fable 3 is obsolete, please consider using the [\\u003cReactComponent\\u003e] attribute instead which makes Feliz output better Javascript code that is compatible with react-refresh\"));\r\n    return (props) => Interop_reactApi.createElement(renderElement, Internal_propsWithKey(withKey, props));\r\n}\r\n\r\nexport function Internal_memo_Z603636D8(renderElement, name, areEqual, withKey) {\r\n    const memoElementType = Interop_reactApi.memo(renderElement, uncurry(2, defaultArg(curry(2, areEqual), null)));\r\n    iterate((name_1) => {\r\n        renderElement.displayName = name_1;\r\n    }, toArray(name));\r\n    return (props) => Interop_reactApi.createElement(memoElementType, Internal_propsWithKey(withKey, props));\r\n}\r\n\r\nfunction Internal_propsWithKey(withKey, props) {\r\n    if (withKey == null) {\r\n        return props;\r\n    }\r\n    else {\r\n        const f = withKey;\r\n        props.key = f(props);\r\n        return props;\r\n    }\r\n}\r\n\r\nexport class React {\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport function React$reflection() {\r\n    return class_type(\"Feliz.React\", void 0, React);\r\n}\r\n\r\nexport function React_createDisposable_3A5B6456(dispose) {\r\n    return {\r\n        Dispose() {\r\n            dispose();\r\n        },\r\n    };\r\n}\r\n\r\nexport function useReact_useState_FCFD9EF(initializer) {\r\n    return Interop_reactApi.useState(initializer);\r\n}\r\n\r\nexport function useReact_useReducer_2B9E6EA0(update, initialState) {\r\n    return Interop_reactApi.useReducer(update, initialState);\r\n}\r\n\r\nexport function useReact_useEffect_Z5ECA432F(effect) {\r\n    ReactInterop_useEffect(effect);\r\n}\r\n\r\nexport function useReact_useEffect_Z5234A374(effect, dependencies) {\r\n    ReactInterop_useEffectWithDeps(effect, dependencies);\r\n}\r\n\r\nexport function useReact_useLayoutEffect_Z5ECA432F(effect) {\r\n    ReactInterop_useLayoutEffect(effect);\r\n}\r\n\r\nexport function useReact_useLayoutEffect_Z5234A374(effect, dependencies) {\r\n    ReactInterop_useLayoutEffectWithDeps(effect, dependencies);\r\n}\r\n\r\nexport function useReact_useLayoutEffect_3A5B6456(effect) {\r\n    ReactInterop_useLayoutEffect((_arg1) => {\r\n        effect();\r\n        return React_createDisposable_3A5B6456(() => {\r\n        });\r\n    });\r\n}\r\n\r\nexport function useReact_useLayoutEffect_Z101E1A95(effect, dependencies) {\r\n    ReactInterop_useLayoutEffectWithDeps((_arg2) => {\r\n        effect();\r\n        return React_createDisposable_3A5B6456(() => {\r\n        });\r\n    }, dependencies);\r\n}\r\n\r\nexport function useReact_useEffectOnce_3A5B6456(effect) {\r\n    useReact_useEffect_Z101E1A95(effect, []);\r\n}\r\n\r\nexport function useReact_useEffectOnce_Z5ECA432F(effect) {\r\n    useReact_useEffect_Z5234A374(effect, []);\r\n}\r\n\r\nexport function useReact_useEffectOnce_6E825304(effect) {\r\n    useReact_useEffect_Z5234A374(() => {\r\n        const disposeOption = effect();\r\n        return {\r\n            Dispose() {\r\n                iterate((d) => {\r\n                    let copyOfStruct = d;\r\n                    copyOfStruct.Dispose();\r\n                }, toArray(disposeOption));\r\n            },\r\n        };\r\n    }, []);\r\n}\r\n\r\nexport function useReact_useEffect_3A5B6456(effect) {\r\n    ReactInterop_useEffect((_arg3) => {\r\n        effect();\r\n        return React_createDisposable_3A5B6456(() => {\r\n        });\r\n    });\r\n}\r\n\r\nexport function useReact_useEffect_Z101E1A95(effect, dependencies) {\r\n    ReactInterop_useEffectWithDeps((_arg4) => {\r\n        effect();\r\n        return React_createDisposable_3A5B6456(() => {\r\n        });\r\n    }, dependencies);\r\n}\r\n\r\nexport function useReact_useDebugValue_Z721C83C5(value) {\r\n    ReactInterop_useDebugValueWithFormatter(value, (x) => x);\r\n}\r\n\r\nexport function useReact_useDebugValue_77A55D6D(value, formatter) {\r\n    ReactInterop_useDebugValueWithFormatter(value, formatter);\r\n}\r\n\r\nexport function useReact_useCallback_93353E(callbackFunction, dependencies) {\r\n    return Interop_reactApi.useCallback(callbackFunction, defaultArg(dependencies, []));\r\n}\r\n\r\nexport function useReact_useRef_1505(initialValue) {\r\n    return Interop_reactApi.useRef(initialValue);\r\n}\r\n\r\nexport function useReact_useInputRef() {\r\n    return useReact_useRef_1505(void 0);\r\n}\r\n\r\nexport function useReact_useButtonRef() {\r\n    return useReact_useRef_1505(void 0);\r\n}\r\n\r\nexport function useReact_useElementRef() {\r\n    return useReact_useRef_1505(void 0);\r\n}\r\n\r\nexport function useReact_useMemo_CF4EA67(createFunction, dependencies) {\r\n    return Interop_reactApi.useMemo(createFunction, defaultArg(dependencies, []));\r\n}\r\n\r\nexport function React_functionComponent_2F9D7239(render, withKey) {\r\n    return Internal_functionComponent_Z1B155329(render, void 0, withKey);\r\n}\r\n\r\nexport function React_functionComponent_Z4C5FE1BE(name, render, withKey) {\r\n    return Internal_functionComponent_Z1B155329(render, name, withKey);\r\n}\r\n\r\nexport function React_functionComponent_19A12FB2(render, withKey) {\r\n    return Internal_functionComponent_Z1B155329((arg) => react.createElement(react.Fragment, {}, ...render(arg)), void 0, withKey);\r\n}\r\n\r\nexport function React_functionComponent_2E1DD889(name, render, withKey) {\r\n    return Internal_functionComponent_Z1B155329((arg) => react.createElement(react.Fragment, {}, ...render(arg)), name, withKey);\r\n}\r\n\r\nexport function React_memo_62A0F746(render, withKey, areEqual) {\r\n    return Internal_memo_Z603636D8(render, void 0, areEqual, withKey);\r\n}\r\n\r\nexport function React_memo_6648A89D(name, render, withKey, areEqual) {\r\n    return Internal_memo_Z603636D8(render, name, areEqual, withKey);\r\n}\r\n\r\nexport function React_memo_C2C6BED(render, withKey, areEqual) {\r\n    return Internal_memo_Z603636D8((arg) => react.createElement(react.Fragment, {}, ...render(arg)), void 0, areEqual, withKey);\r\n}\r\n\r\nexport function React_memo_Z4FCC584A(name, render, withKey, areEqual) {\r\n    return Internal_memo_Z603636D8((arg) => react.createElement(react.Fragment, {}, ...render(arg)), name, areEqual, withKey);\r\n}\r\n\r\nexport function React_createContext_1AE444D8(name, defaultValue) {\r\n    const contextObject = Interop_reactApi.createContext(defaultArg(defaultValue, void 0));\r\n    iterate((name_1) => {\r\n        contextObject.displayName = name_1;\r\n    }, toArray(name));\r\n    return contextObject;\r\n}\r\n\r\nexport function React_contextProvider_34D9BBBD(contextObject, contextValue, child) {\r\n    return Interop_reactApi.createElement(contextObject.Provider, {\r\n        value: contextValue,\r\n    }, child);\r\n}\r\n\r\nexport function React_contextProvider_138D2F56(contextObject, contextValue, children) {\r\n    return Interop_reactApi.createElement(contextObject.Provider, {\r\n        value: contextValue,\r\n    }, ...children);\r\n}\r\n\r\nexport function React_contextConsumer_Z68910595(contextObject, render) {\r\n    return Interop_reactApi.createElement(contextObject.Consumer, null, render);\r\n}\r\n\r\nexport function React_contextConsumer_56D53A40(contextObject, render) {\r\n    return Interop_reactApi.createElement(contextObject.Consumer, null, (arg) => react.createElement(react.Fragment, {}, ...render(arg)));\r\n}\r\n\r\nexport function useReact_useContext_37FA55CF(contextObject) {\r\n    return Interop_reactApi.useContext(contextObject);\r\n}\r\n\r\nexport function useReact_useCallbackRef_7C4B0DD6(callback) {\r\n    const lastRenderCallbackRef = useReact_useRef_1505(callback);\r\n    const callbackRef = useReact_useCallback_93353E((arg) => lastRenderCallbackRef.current(arg), []);\r\n    useReact_useLayoutEffect_3A5B6456(() => {\r\n        lastRenderCallbackRef.current = callback;\r\n    });\r\n    return callbackRef;\r\n}\r\n\r\nexport const React_useStateWithUpdater_1505 = useState;\r\n\r\nexport function React_forwardRef_3790D881(render) {\r\n    const forwardRefType = Interop_reactApi.forwardRef((props, ref) => render([props, ref]));\r\n    return (tupledArg) => {\r\n        let o;\r\n        return Interop_reactApi.createElement(forwardRefType, (o = {\r\n            props: tupledArg[0],\r\n            ref: tupledArg[1],\r\n        }, Object.assign({}, o)));\r\n    };\r\n}\r\n\r\nexport function React_forwardRef_7DC3DB1A(name, render) {\r\n    const forwardRefType = Interop_reactApi.forwardRef((props, ref) => render([props, ref]));\r\n    render.displayName = name;\r\n    return (tupledArg) => {\r\n        let o;\r\n        return Interop_reactApi.createElement(forwardRefType, (o = {\r\n            props: tupledArg[0],\r\n            ref: tupledArg[1],\r\n        }, Object.assign({}, o)));\r\n    };\r\n}\r\n\r\nexport function React_strictMode_6E3A73D(children) {\r\n    return Interop_reactApi.createElement(Interop_reactApi.StrictMode, void 0, ...children);\r\n}\r\n\r\nexport function React_lazy$0027_4712D3AE(dynamicImport, props) {\r\n    return Interop_reactApi.createElement(Interop_reactApi.lazy((() => dynamicImport)), props);\r\n}\r\n\r\nexport function React_lazy$0027_Z3D8450FC(dynamicImport, props) {\r\n    return Interop_reactApi.createElement(Interop_reactApi.lazy(dynamicImport), props);\r\n}\r\n\r\nexport function React_suspense_6E3A73D(children) {\r\n    let o;\r\n    return Interop_reactApi.createElement(Interop_reactApi.Suspense, (o = {\r\n        fallback: null,\r\n    }, Object.assign({}, o)), ...children);\r\n}\r\n\r\nexport function React_suspense_Z3796A576(children, fallback) {\r\n    let o;\r\n    return Interop_reactApi.createElement(Interop_reactApi.Suspense, (o = {\r\n        fallback: fallback,\r\n    }, Object.assign({}, o)), ...children);\r\n}\r\n\r\nexport function useReact_useImperativeHandle_596DDC25(ref, createHandle) {\r\n    Interop_reactApi.useImperativeHandle(ref, createHandle);\r\n}\r\n\r\nexport function useReact_useImperativeHandle_Z12F09548(ref, createHandle, dependencies) {\r\n    Interop_reactApi.useImperativeHandle(ref, createHandle, dependencies);\r\n}\r\n\r\nexport function useFeliz_React__React_useState_Static_1505(initial) {\r\n    return Interop_reactApi.useState(initial);\r\n}\r\n\r\nexport const Feliz_React__React_useStateWithUpdater_Static_FCFD9EF = useState;\r\n\r\n","import {\r\n    useEffect as useEffectReact,\r\n    useLayoutEffect as useLayoutEffectReact,\r\n    useDebugValue as useDebugValueReact } from 'react'\r\n\r\nexport const useEffect = getDisposable => {\r\n    useEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    })\r\n}\r\n\r\nexport const useEffectWithDeps = (getDisposable, deps) => {\r\n    useEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    }, deps)\r\n}\r\n\r\nexport const useLayoutEffect = getDisposable => {\r\n    useLayoutEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    })\r\n}\r\n\r\nexport const useLayoutEffectWithDeps = (getDisposable, deps) => {\r\n    useLayoutEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    }, deps)\r\n}\r\n\r\nexport const useDebugValue = (value, formatter) => useDebugValueReact(value, formatter)","import { bind, map } from \"../fable-library.3.1.11/Option.js\";\r\n\r\nexport const Impl_allowsPassiveEvents = (() => {\r\n    let passive = false;\r\n    try {\r\n        if ((typeof window !== 'undefined') ? (typeof window.addEventListener === 'function') : false) {\r\n            window.addEventListener(\"testPassiveEventSupport\", (value) => {\r\n            }, {\r\n                passive: true,\r\n            });\r\n            window.removeEventListener(\"testPassiveEventSupport\", (value_1) => {\r\n            });\r\n        }\r\n    }\r\n    catch (matchValue) {\r\n    }\r\n    return passive;\r\n})();\r\n\r\nexport const Impl_defaultPassive = {\r\n    passive: true,\r\n};\r\n\r\nexport function Impl_adjustPassive(maybeOptions) {\r\n    return map((options) => {\r\n        if (options.passive ? (!Impl_allowsPassiveEvents) : false) {\r\n            return {\r\n                capture: options.capture,\r\n                once: options.once,\r\n                passive: false,\r\n            };\r\n        }\r\n        else {\r\n            return options;\r\n        }\r\n    }, maybeOptions);\r\n}\r\n\r\nexport function Impl_createRemoveOptions(maybeOptions) {\r\n    return bind((options) => {\r\n        if (options.capture) {\r\n            return {\r\n                capture: true,\r\n            };\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, maybeOptions);\r\n}\r\n\r\n","// https://github.com/MikeMcl/big.js/blob/01b3ce3a6b0ba7b42442ea48ec4ffc88d1669ec4/big.mjs\n/* tslint:disable */\nimport { combineHashCodes } from \"../Util.js\";\nimport { symbol } from \"../Numeric.js\";\n// The shared prototype object.\nvar P = {\n    GetHashCode() { return combineHashCodes([this.s, this.e].concat(this.c)); },\n    Equals(x) { return !this.cmp(x); },\n    CompareTo(x) { return this.cmp(x); },\n    [symbol]() {\n        const _this = this;\n        return {\n            multiply: y => _this.mul(y),\n            toPrecision: sd => _this.toPrecision(sd),\n            toExponential: dp => _this.toExponential(dp),\n            toFixed: dp => _this.toFixed(dp),\n            toHex: () => (Number(_this) >>> 0).toString(16),\n        };\n    }\n};\n/*\n *  big.js v5.2.2\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\n *  Copyright (c) 2018 Michael Mclaughlin <M8ch88l@gmail.com>\n *  https://github.com/MikeMcl/big.js/LICENCE\n */\n/************************************** EDITABLE DEFAULTS *****************************************/\n// The default values below must be integers within the stated ranges.\n/*\n * The maximum number of decimal places (DP) of the results of operations involving division:\n * div and sqrt, and pow with negative exponents.\n */\nvar DP = 28, // 0 to MAX_DP\n/*\n * The rounding mode (RM) used when rounding to the above decimal places.\n *\n *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\n *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\n *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\n *  3  Away from zero.                                  (ROUND_UP)\n */\nRM = 1, // 0, 1, 2 or 3\n// The maximum value of DP and Big.DP.\nMAX_DP = 1E6, // 0 to 1000000\n// The maximum magnitude of the exponent argument to the pow method.\nMAX_POWER = 1E6, // 1 to 1000000\n/*\n * The negative exponent (NE) at and beneath which toString returns exponential notation.\n * (JavaScript numbers: -7)\n * -1000000 is the minimum recommended exponent value of a Big.\n */\nNE = -29, // 0 to -1000000\n/*\n * The positive exponent (PE) at and above which toString returns exponential notation.\n * (JavaScript numbers: 21)\n * 1000000 is the maximum recommended exponent value of a Big.\n * (This limit is not enforced or checked.)\n */\nPE = 29, // 0 to 1000000\n/**************************************************************************************************/\n// Error messages.\nNAME = '[big.js] ', INVALID = NAME + 'Invalid ', INVALID_DP = INVALID + 'decimal places', INVALID_RM = INVALID + 'rounding mode', DIV_BY_ZERO = NAME + 'Division by zero', UNDEFINED = void 0, NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\n/*\n * Create and return a Big constructor.\n *\n */\nfunction _Big_() {\n    /*\n     * The Big constructor and exported function.\n     * Create and return a new instance of a Big number object.\n     *\n     * n {number|string|Big} A numeric value.\n     */\n    function Big(n) {\n        var x = this;\n        // Enable constructor usage without new.\n        if (!(x instanceof Big))\n            return n === UNDEFINED ? _Big_() : new Big(n);\n        // Duplicate.\n        if (n instanceof Big) {\n            x.s = n.s;\n            x.e = n.e;\n            x.c = n.c.slice();\n            normalize(x);\n        }\n        else {\n            parse(x, n);\n        }\n        /*\n         * Retain a reference to this Big constructor, and shadow Big.prototype.constructor which\n         * points to Object.\n         */\n        x.constructor = Big;\n    }\n    Big.prototype = P;\n    Big.DP = DP;\n    Big.RM = RM;\n    Big.NE = NE;\n    Big.PE = PE;\n    Big.version = '5.2.2';\n    return Big;\n}\nfunction normalize(x) {\n    x = round(x, DP, 0);\n    if (x.c.length > 1 && !x.c[0]) {\n        let i = x.c.findIndex(x => x);\n        x.c = x.c.slice(i);\n        x.e = x.e - i;\n    }\n}\n/*\n * Parse the number or string value passed to a Big constructor.\n *\n * x {Big} A Big number instance.\n * n {number|string} A numeric value.\n */\nfunction parse(x, n) {\n    var e, i, nl;\n    // Minus zero?\n    if (n === 0 && 1 / n < 0)\n        n = '-0';\n    else if (!NUMERIC.test(n += ''))\n        throw Error(INVALID + 'number');\n    // Determine sign.\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\n    // Decimal point?\n    if ((e = n.indexOf('.')) > -1)\n        n = n.replace('.', '');\n    // Exponential form?\n    if ((i = n.search(/e/i)) > 0) {\n        // Determine exponent.\n        if (e < 0)\n            e = i;\n        e += +n.slice(i + 1);\n        n = n.substring(0, i);\n    }\n    else if (e < 0) {\n        // Integer.\n        e = n.length;\n    }\n    nl = n.length;\n    // Determine leading zeros before decimal point.\n    for (i = 0; i < e && i < nl && n.charAt(i) == '0';)\n        ++i;\n    // older version (ignores decimal point).\n    // // Determine leading zeros.\n    // for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\n    if (i == nl) {\n        // Zero.\n        x.c = [x.e = 0];\n    }\n    else {\n        x.e = e - i - 1;\n        x.c = [];\n        // Convert string to array of digits without leading zeros\n        for (e = 0; i < nl;)\n            x.c[e++] = +n.charAt(i++);\n        // older version (doesn't keep trailing zeroes).\n        // // Determine trailing zeros.\n        // for (; nl > 0 && n.charAt(--nl) == '0';);\n        // // Convert string to array of digits without leading/trailing zeros.\n        // for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\n    }\n    x = round(x, Big.DP, Big.RM);\n    return x;\n}\n/*\n * Round Big x to a maximum of dp decimal places using rounding mode rm.\n * Called by stringify, P.div, P.round and P.sqrt.\n *\n * x {Big} The Big to round.\n * dp {number} Integer, 0 to MAX_DP inclusive.\n * rm {number} 0, 1, 2 or 3 (DOWN, HALF_UP, HALF_EVEN, UP)\n * [more] {boolean} Whether the result of division was truncated.\n */\nfunction round(x, dp, rm, more) {\n    var xc = x.c, i = x.e + dp + 1;\n    if (i < xc.length) {\n        if (rm === 1) {\n            // xc[i] is the digit after the digit that may be rounded up.\n            more = xc[i] >= 5;\n        }\n        else if (rm === 2) {\n            more = xc[i] > 5 || xc[i] == 5 &&\n                (more || i < 0 || xc[i + 1] !== UNDEFINED || xc[i - 1] & 1);\n        }\n        else if (rm === 3) {\n            const isZero = xc.findIndex((xci, idx) => idx >= i && xci > 0) < 0;\n            more = more || !isZero;\n        }\n        else {\n            more = false;\n            if (rm !== 0)\n                throw Error(INVALID_RM);\n        }\n        if (i < 1) {\n            xc.length = 1;\n            if (more) {\n                // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n                x.e = -dp;\n                xc[0] = 1;\n            }\n            else {\n                // Zero.\n                xc[0] = x.e = 0;\n            }\n        }\n        else {\n            // Remove any digits after the required decimal places.\n            xc.length = i--;\n            // Round up?\n            if (more) {\n                // Rounding up may mean the previous digit has to be rounded up.\n                for (; ++xc[i] > 9;) {\n                    xc[i] = 0;\n                    if (!i--) {\n                        ++x.e;\n                        xc.unshift(1);\n                    }\n                }\n            }\n            // Remove trailing zeros.\n            for (i = xc.length; !xc[--i];)\n                xc.pop();\n        }\n    }\n    else if (rm < 0 || rm > 3 || rm !== ~~rm) {\n        throw Error(INVALID_RM);\n    }\n    return x;\n}\n/*\n * Return a string representing the value of Big x in normal or exponential notation.\n * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\n *\n * x {Big}\n * id? {number} Caller id.\n *         1 toExponential\n *         2 toFixed\n *         3 toPrecision\n *         4 valueOf\n * n? {number|undefined} Caller's argument.\n * k? {number|undefined}\n */\nfunction stringify(x, id, n, k) {\n    var e, s, Big = x.constructor, z = !x.c[0];\n    if (n !== UNDEFINED) {\n        if (n !== ~~n || n < (id == 3) || n > MAX_DP) {\n            throw Error(id == 3 ? INVALID + 'precision' : INVALID_DP);\n        }\n        x = new Big(x);\n        // The index of the digit that may be rounded up.\n        n = k - x.e;\n        // Round?\n        if (x.c.length > ++k)\n            round(x, n, Big.RM);\n        // toFixed: recalculate k as x.e may have changed if value rounded up.\n        if (id == 2)\n            k = x.e + n + 1;\n        // Append zeros?\n        for (; x.c.length < k;)\n            x.c.push(0);\n    }\n    e = x.e;\n    s = x.c.join('');\n    n = s.length;\n    // Exponential notation?\n    if (id != 2 && (id == 1 || id == 3 && k <= e || e <= Big.NE || e >= Big.PE)) {\n        s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\n        // Normal notation.\n    }\n    else if (e < 0) {\n        for (; ++e;)\n            s = '0' + s;\n        s = '0.' + s;\n    }\n    else if (e > 0) {\n        if (++e > n)\n            for (e -= n; e--;)\n                s += '0';\n        else if (e < n)\n            s = s.slice(0, e) + '.' + s.slice(e);\n    }\n    else if (n > 1) {\n        s = s.charAt(0) + '.' + s.slice(1);\n    }\n    return x.s < 0 && (!z || id == 4) ? '-' + s : s;\n}\n// Prototype/instance methods\n/*\n * Return a new Big whose value is the absolute value of this Big.\n */\nP.abs = function () {\n    var x = new this.constructor(this);\n    x.s = 1;\n    return x;\n};\n/*\n * Return 1 if the value of this Big is greater than the value of Big y,\n *       -1 if the value of this Big is less than the value of Big y, or\n *        0 if they have the same value.\n*/\nP.cmp = function (y) {\n    var isneg, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, i = x.s, j = y.s, k = x.e, l = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0])\n        return !xc[0] ? !yc[0] ? 0 : -j : i;\n    // Signs differ?\n    if (i != j)\n        return i;\n    isneg = i < 0;\n    // Compare exponents.\n    if (k != l)\n        return k > l ^ isneg ? 1 : -1;\n    // Compare digit by digit.\n    j = Math.max(xc.length, yc.length);\n    for (i = 0; i < j; i++) {\n        k = i < xc.length ? xc[i] : 0;\n        l = i < yc.length ? yc[i] : 0;\n        if (k != l)\n            return k > l ^ isneg ? 1 : -1;\n    }\n    return 0;\n    // old version (doesn't compare well trailing zeroes, e.g. 1.0 with 1.00)\n    // j = (k = xc.length) < (l = yc.length) ? k : l;\n    // // Compare digit by digit.\n    // for (i = -1; ++i < j;) {\n    //   if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\n    // }\n    // // Compare lengths.\n    // return k == l ? 0 : k > l ^ isneg ? 1 : -1;\n};\n/*\n * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\n * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.div = function (y) {\n    var Big = this.constructor, x = new Big(this), y = new Big(y), a = x.c, // dividend\n    b = y.c, // divisor\n    k = x.s == y.s ? 1 : -1, dp = Big.DP;\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    // Divisor is zero?\n    if (!b[0])\n        throw Error(DIV_BY_ZERO);\n    // Dividend is 0? Return +-0.\n    if (!a[0])\n        return new Big(k * 0);\n    var bl, bt, n, cmp, ri, bz = b.slice(), ai = bl = b.length, al = a.length, r = a.slice(0, bl), // remainder\n    rl = r.length, q = y, // quotient\n    qc = q.c = [], qi = 0, d = dp + (q.e = x.e - y.e) + 1; // number of digits of the result\n    q.s = k;\n    k = d < 0 ? 0 : d;\n    // Create version of divisor with leading zero.\n    bz.unshift(0);\n    // Add zeros to make remainder as long as divisor.\n    for (; rl++ < bl;)\n        r.push(0);\n    do {\n        // n is how many times the divisor goes into current remainder.\n        for (n = 0; n < 10; n++) {\n            // Compare divisor and remainder.\n            if (bl != (rl = r.length)) {\n                cmp = bl > rl ? 1 : -1;\n            }\n            else {\n                for (ri = -1, cmp = 0; ++ri < bl;) {\n                    if (b[ri] != r[ri]) {\n                        cmp = b[ri] > r[ri] ? 1 : -1;\n                        break;\n                    }\n                }\n            }\n            // If divisor < remainder, subtract divisor from remainder.\n            if (cmp < 0) {\n                // Remainder can't be more than 1 digit longer than divisor.\n                // Equalise lengths using divisor with extra leading zero?\n                for (bt = rl == bl ? b : bz; rl;) {\n                    if (r[--rl] < bt[rl]) {\n                        ri = rl;\n                        for (; ri && !r[--ri];)\n                            r[ri] = 9;\n                        --r[ri];\n                        r[rl] += 10;\n                    }\n                    r[rl] -= bt[rl];\n                }\n                for (; !r[0];)\n                    r.shift();\n            }\n            else {\n                break;\n            }\n        }\n        // Add the digit n to the result array.\n        qc[qi++] = cmp ? n : ++n;\n        // Update the remainder.\n        if (r[0] && cmp)\n            r[rl] = a[ai] || 0;\n        else\n            r = [a[ai]];\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\n    if (!qc[0] && qi != 1) {\n        // There can't be more than one zero.\n        qc.shift();\n        q.e--;\n    }\n    // Round?\n    if (qi > d)\n        round(q, dp, Big.RM, r[0] !== UNDEFINED);\n    return q;\n};\n/*\n * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\n */\nP.eq = function (y) {\n    return !this.cmp(y);\n};\n/*\n * Return true if the value of this Big is greater than the value of Big y, otherwise return\n * false.\n */\nP.gt = function (y) {\n    return this.cmp(y) > 0;\n};\n/*\n * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\n * return false.\n */\nP.gte = function (y) {\n    return this.cmp(y) > -1;\n};\n/*\n * Return true if the value of this Big is less than the value of Big y, otherwise return false.\n */\nP.lt = function (y) {\n    return this.cmp(y) < 0;\n};\n/*\n * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\n * return false.\n */\nP.lte = function (y) {\n    return this.cmp(y) < 1;\n};\n/*\n * Return a new Big whose value is the value of this Big minus the value of Big y.\n */\nP.minus = P.sub = function (y) {\n    var i, j, t, xlty, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.plus(y);\n    }\n    var xc = x.c.slice(), xe = x.e, yc = y.c, ye = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0]) {\n        // y is non-zero? x is non-zero? Or both are zero.\n        return yc[0] ? (y.s = -b, y) : new Big(xc[0] ? x : 0);\n    }\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\n    if (a = xe - ye) {\n        if (xlty = a < 0) {\n            a = -a;\n            t = xc;\n        }\n        else {\n            ye = xe;\n            t = yc;\n        }\n        t.reverse();\n        for (b = a; b--;)\n            t.push(0);\n        t.reverse();\n    }\n    else {\n        // Exponents equal. Check digit by digit.\n        j = ((xlty = xc.length < yc.length) ? xc : yc).length;\n        for (a = b = 0; b < j; b++) {\n            if (xc[b] != yc[b]) {\n                xlty = xc[b] < yc[b];\n                break;\n            }\n        }\n    }\n    // x < y? Point xc to the array of the bigger number.\n    if (xlty) {\n        t = xc;\n        xc = yc;\n        yc = t;\n        y.s = -y.s;\n    }\n    /*\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\n     * needs to start at yc.length.\n     */\n    if ((b = (j = yc.length) - (i = xc.length)) > 0)\n        for (; b--;)\n            xc[i++] = 0;\n    // Subtract yc from xc.\n    for (b = i; j > a;) {\n        if (xc[--j] < yc[j]) {\n            for (i = j; i && !xc[--i];)\n                xc[i] = 9;\n            --xc[i];\n            xc[j] += 10;\n        }\n        xc[j] -= yc[j];\n    }\n    // Remove trailing zeros.\n    for (; xc[--b] === 0;)\n        xc.pop();\n    // Remove leading zeros and adjust exponent accordingly.\n    for (; xc[0] === 0;) {\n        xc.shift();\n        --ye;\n    }\n    if (!xc[0]) {\n        // n - n = +0\n        y.s = 1;\n        // Result must be zero.\n        xc = [ye = 0];\n    }\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a new Big whose value is the value of this Big modulo the value of Big y.\n */\nP.mod = function (y) {\n    var ygtx, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    if (!y.c[0])\n        throw Error(DIV_BY_ZERO);\n    x.s = y.s = 1;\n    ygtx = y.cmp(x) == 1;\n    x.s = a;\n    y.s = b;\n    if (ygtx)\n        return new Big(x);\n    a = Big.DP;\n    b = Big.RM;\n    Big.DP = Big.RM = 0;\n    x = x.div(y);\n    Big.DP = a;\n    Big.RM = b;\n    return this.minus(x.times(y));\n};\n/*\n * Return a new Big whose value is the value of this Big plus the value of Big y.\n */\nP.plus = P.add = function (y) {\n    var t, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.minus(y);\n    }\n    var xe = x.e, xc = x.c, ye = y.e, yc = y.c;\n    // Either zero? y is non-zero? x is non-zero? Or both are zero.\n    if (!xc[0] || !yc[0])\n        return yc[0] ? y : new Big(xc[0] ? x : a * 0);\n    xc = xc.slice();\n    // Prepend zeros to equalise exponents.\n    // Note: reverse faster than unshifts.\n    if (a = xe - ye) {\n        if (a > 0) {\n            ye = xe;\n            t = yc;\n        }\n        else {\n            a = -a;\n            t = xc;\n        }\n        t.reverse();\n        for (; a--;)\n            t.push(0);\n        t.reverse();\n    }\n    // Point xc to the longer array.\n    if (xc.length - yc.length < 0) {\n        t = yc;\n        yc = xc;\n        xc = t;\n    }\n    a = yc.length;\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\n    for (b = 0; a; xc[a] %= 10)\n        b = (xc[--a] = xc[a] + yc[a] + b) / 10 | 0;\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n    if (b) {\n        xc.unshift(b);\n        ++ye;\n    }\n    // Remove trailing zeros.\n    for (a = xc.length; xc[--a] === 0;)\n        xc.pop();\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a Big whose value is the value of this Big raised to the power n.\n * If n is negative, round to a maximum of Big.DP decimal places using rounding\n * mode Big.RM.\n *\n * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\n */\nP.pow = function (n) {\n    var Big = this.constructor, x = new Big(this), y = new Big(1), one = new Big(1), isneg = n < 0;\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER)\n        throw Error(INVALID + 'exponent');\n    if (isneg)\n        n = -n;\n    for (;;) {\n        if (n & 1)\n            y = y.times(x);\n        n >>= 1;\n        if (!n)\n            break;\n        x = x.times(x);\n    }\n    return isneg ? one.div(y) : y;\n};\n/*\n * Return a new Big whose value is the value of this Big rounded using rounding mode rm\n * to a maximum of dp decimal places, or, if dp is negative, to an integer which is a\n * multiple of 10**-dp.\n * If dp is not specified, round to 0 decimal places.\n * If rm is not specified, use Big.RM.\n *\n * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\n * rm? 0, 1, 2 or 3 (ROUND_DOWN, ROUND_HALF_UP, ROUND_HALF_EVEN, ROUND_UP)\n */\nP.round = function (dp, rm) {\n    var Big = this.constructor;\n    if (dp === UNDEFINED)\n        dp = 0;\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    return round(new Big(this), dp, rm === UNDEFINED ? Big.RM : rm);\n};\n/*\n * Return a new Big whose value is the square root of the value of this Big, rounded, if\n * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.sqrt = function () {\n    var r, c, t, Big = this.constructor, x = new Big(this), s = x.s, e = x.e, half = new Big(0.5);\n    // Zero?\n    if (!x.c[0])\n        return new Big(x);\n    // Negative?\n    if (s < 0)\n        throw Error(NAME + 'No square root');\n    // Estimate.\n    s = Math.sqrt(x + '');\n    // Math.sqrt underflow/overflow?\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\n    if (s === 0 || s === 1 / 0) {\n        c = x.c.join('');\n        if (!(c.length + e & 1))\n            c += '0';\n        s = Math.sqrt(c);\n        e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\n        r = new Big((s == 1 / 0 ? '1e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\n    }\n    else {\n        r = new Big(s);\n    }\n    e = r.e + (Big.DP += 4);\n    // Newton-Raphson iteration.\n    do {\n        t = r;\n        r = half.times(t.plus(x.div(t)));\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\n    return round(r, Big.DP -= 4, Big.RM);\n};\n/*\n * Return a new Big whose value is the value of this Big times the value of Big y.\n */\nP.times = P.mul = function (y) {\n    var c, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, a = xc.length, b = yc.length, i = x.e, j = y.e;\n    // Determine sign of result.\n    y.s = x.s == y.s ? 1 : -1;\n    // Return signed 0 if either 0.\n    if (!xc[0] || !yc[0])\n        return new Big(y.s * 0);\n    // Initialise exponent of result as x.e + y.e.\n    y.e = i + j;\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\n    if (a < b) {\n        c = xc;\n        xc = yc;\n        yc = c;\n        j = a;\n        a = b;\n        b = j;\n    }\n    // Initialise coefficient array of result with zeros.\n    for (c = new Array(j = a + b); j--;)\n        c[j] = 0;\n    // Multiply.\n    // i is initially xc.length.\n    for (i = b; i--;) {\n        b = 0;\n        // a is yc.length.\n        for (j = a + i; j > i;) {\n            // Current sum of products at this digit position, plus carry.\n            b = c[j] + yc[i] * xc[j - i - 1] + b;\n            c[j--] = b % 10;\n            // carry\n            b = b / 10 | 0;\n        }\n        c[j] = (c[j] + b) % 10;\n    }\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\n    if (b)\n        ++y.e;\n    else\n        c.shift();\n    // Remove trailing zeros.\n    for (i = c.length; !c[--i];)\n        c.pop();\n    y.c = c;\n    return y;\n};\n/*\n * Return a string representing the value of this Big in exponential notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n */\nP.toExponential = function (dp) {\n    return stringify(this, 1, dp, dp);\n};\n/*\n * Return a string representing the value of this Big in normal notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n *\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\n */\nP.toFixed = function (dp) {\n    return stringify(this, 2, dp, this.e + dp);\n};\n/*\n * Return a string representing the value of this Big rounded to sd significant digits using\n * Big.RM. Use exponential notation if sd is less than the number of digits necessary to represent\n * the integer part of the value in normal notation.\n *\n * sd {number} Integer, 1 to MAX_DP inclusive.\n */\nP.toPrecision = function (sd) {\n    return stringify(this, 3, sd, sd - 1);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Omit the sign for negative zero.\n */\nP.toString = function () {\n    return stringify(this);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Include the sign for negative zero.\n */\nP.valueOf = P.toJSON = function () {\n    return stringify(this, 4);\n};\n// Export\nexport var Big = _Big_();\nexport default Big;\n","import Decimal from \"./lib/big.js\";\nimport { FSharpRef } from \"./Types.js\";\nexport default Decimal;\nexport const get_Zero = new Decimal(0);\nexport const get_One = new Decimal(1);\nexport const get_MinusOne = new Decimal(-1);\nexport const get_MaxValue = new Decimal(\"79228162514264337593543950335\");\nexport const get_MinValue = new Decimal(\"-79228162514264337593543950335\");\nexport function compare(x, y) {\n    return x.cmp(y);\n}\nexport function equals(x, y) {\n    return !x.cmp(y);\n}\nexport function abs(x) {\n    return x.abs();\n}\nexport function round(x, digits = 0) {\n    return x.round(digits, 2 /* ROUND_HALF_EVEN */);\n}\nexport function truncate(x) {\n    return x.round(0, 0 /* ROUND_DOWN */);\n}\nexport function ceiling(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 3 /* ROUND_UP */ : 0 /* ROUND_DOWN */);\n}\nexport function floor(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 0 /* ROUND_DOWN */ : 3 /* ROUND_UP */);\n}\nexport function pow(x, n) {\n    return x.pow(n);\n}\nexport function sqrt(x) {\n    return x.sqrt();\n}\nexport function op_Addition(x, y) {\n    return x.add(y);\n}\nexport function op_Subtraction(x, y) {\n    return x.sub(y);\n}\nexport function op_Multiply(x, y) {\n    return x.mul(y);\n}\nexport function op_Division(x, y) {\n    return x.div(y);\n}\nexport function op_Modulus(x, y) {\n    return x.mod(y);\n}\nexport function op_UnaryNegation(x) {\n    const x2 = new Decimal(x);\n    x2.s = -x2.s || 0;\n    return x2;\n}\nexport const add = op_Addition;\nexport const subtract = op_Subtraction;\nexport const multiply = op_Multiply;\nexport const divide = op_Division;\nexport const remainder = op_Modulus;\nexport const negate = op_UnaryNegation;\nexport function toString(x) {\n    return x.toString();\n}\nexport function tryParse(str, defValue) {\n    try {\n        defValue.contents = new Decimal(str.trim());\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function parse(str) {\n    const defValue = new FSharpRef(get_Zero);\n    if (tryParse(str, defValue)) {\n        return defValue.contents;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\nexport function toNumber(x) {\n    return +x;\n}\nfunction decimalToHex(dec, bitSize) {\n    const hex = new Uint8Array(bitSize / 4 | 0);\n    let hexCount = 1;\n    for (let d = 0; d < dec.length; d++) {\n        let value = dec[d];\n        for (let i = 0; i < hexCount; i++) {\n            const digit = hex[i] * 10 + value | 0;\n            hex[i] = digit & 0xF;\n            value = digit >> 4;\n        }\n        if (value !== 0) {\n            hex[hexCount++] = value;\n        }\n    }\n    return hex.slice(0, hexCount); // digits in reverse order\n}\nfunction hexToDecimal(hex, bitSize) {\n    const dec = new Uint8Array(bitSize * 301 / 1000 + 1 | 0);\n    let decCount = 1;\n    for (let d = hex.length - 1; d >= 0; d--) {\n        let carry = hex[d];\n        for (let i = 0; i < decCount; i++) {\n            const val = dec[i] * 16 + carry | 0;\n            dec[i] = (val % 10) | 0;\n            carry = (val / 10) | 0;\n        }\n        while (carry > 0) {\n            dec[decCount++] = (carry % 10) | 0;\n            carry = (carry / 10) | 0;\n        }\n    }\n    return dec.slice(0, decCount); // digits in reverse order\n}\nfunction setInt32Bits(hexDigits, bits, offset) {\n    for (let i = 0; i < 8; i++) {\n        hexDigits[offset + i] = (bits >> (i * 4)) & 0xF;\n    }\n}\nfunction getInt32Bits(hexDigits, offset) {\n    let bits = 0;\n    for (let i = 0; i < 8; i++) {\n        bits = bits | (hexDigits[offset + i] << (i * 4));\n    }\n    return bits;\n}\nexport function fromIntArray(bits) {\n    return fromInts(bits[0], bits[1], bits[2], bits[3]);\n}\nexport function fromInts(low, mid, high, signExp) {\n    const isNegative = signExp < 0;\n    const scale = (signExp >> 16) & 0x7F;\n    return fromParts(low, mid, high, isNegative, scale);\n}\nexport function fromParts(low, mid, high, isNegative, scale) {\n    const bitSize = 96;\n    const hexDigits = new Uint8Array(bitSize / 4);\n    setInt32Bits(hexDigits, low, 0);\n    setInt32Bits(hexDigits, mid, 8);\n    setInt32Bits(hexDigits, high, 16);\n    const decDigits = hexToDecimal(hexDigits, bitSize);\n    scale = scale & 0x7F;\n    const big = new Decimal(0);\n    big.c = Array.from(decDigits.reverse());\n    big.e = decDigits.length - scale - 1;\n    big.s = isNegative ? -1 : 1;\n    const d = new Decimal(big);\n    return d;\n}\nexport function getBits(d) {\n    const bitSize = 96;\n    const decDigits = Uint8Array.from(d.c);\n    const hexDigits = decimalToHex(decDigits, bitSize);\n    const low = getInt32Bits(hexDigits, 0);\n    const mid = getInt32Bits(hexDigits, 8);\n    const high = getInt32Bits(hexDigits, 16);\n    const decStr = d.toString();\n    const dotPos = decStr.indexOf(\".\");\n    const scale = dotPos < 0 ? 0 : decStr.length - dotPos - 1;\n    const signExp = ((scale & 0x7F) << 16) | (d.s < 0 ? 0x80000000 : 0);\n    return [low, mid, high, signExp];\n}\n// export function makeRangeStepFunction(step: Decimal, last: Decimal) {\n//   const stepComparedWithZero = step.cmp(get_Zero);\n//   if (stepComparedWithZero === 0) {\n//     throw new Error(\"The step of a range cannot be zero\");\n//   }\n//   const stepGreaterThanZero = stepComparedWithZero > 0;\n//   return (x: Decimal) => {\n//     const comparedWithLast = x.cmp(last);\n//     if ((stepGreaterThanZero && comparedWithLast <= 0)\n//       || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n//       return [x, op_Addition(x, step)];\n//     } else {\n//       return undefined;\n//     }\n//   };\n// }\n","import { split, trimEnd, isNullOrWhiteSpace, substring, join, endsWith } from \"../fable-library.3.1.11/String.js\";\r\nimport { ofArray, singleton, collect, head, empty, tail, isEmpty, reverse, map } from \"../fable-library.3.1.11/List.js\";\r\nimport { equalsWith } from \"../fable-library.3.1.11/Array.js\";\r\nimport { comparePrimitives } from \"../fable-library.3.1.11/Util.js\";\r\nimport { React_createDisposable_3A5B6456, useReact_useEffect_Z5ECA432F, useReact_useMemo_CF4EA67, useReact_useCallbackRef_7C4B0DD6, React_memo_62A0F746 } from \"../Feliz.1.40.0/React.fs.js\";\r\nimport { defaultArg } from \"../fable-library.3.1.11/Option.js\";\r\nimport { Impl_createRemoveOptions, Impl_adjustPassive } from \"../Feliz.UseListener.0.6.3/Listener.fs.js\";\r\nimport { tryParse } from \"../fable-library.3.1.11/Int32.js\";\r\nimport { FSharpRef } from \"../fable-library.3.1.11/Types.js\";\r\nimport { tryParse as tryParse_1, fromInt } from \"../fable-library.3.1.11/Long.js\";\r\nimport { tryParse as tryParse_2 } from \"../fable-library.3.1.11/Guid.js\";\r\nimport { tryParse as tryParse_3 } from \"../fable-library.3.1.11/Double.js\";\r\nimport { tryParse as tryParse_4 } from \"../fable-library.3.1.11/Decimal.js\";\r\nimport Decimal from \"../fable-library.3.1.11/Decimal.js\";\r\nimport { map as map_1, delay, toList } from \"../fable-library.3.1.11/Seq.js\";\r\n\r\nexport function RouterModule_String_$007CPrefix$007C(prefix, str) {\r\n    if (str.indexOf(prefix) === 0) {\r\n        return str;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function RouterModule_String_$007CSuffix$007C(suffix, str) {\r\n    if (endsWith(str, suffix)) {\r\n        return str;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function RouterModule_encodeQueryString(queryStringPairs) {\r\n    const _arg1 = join(\"\\u0026\", map((tupledArg) => join(\"=\", [encodeURIComponent(tupledArg[0]), encodeURIComponent(tupledArg[1])]), queryStringPairs));\r\n    if (_arg1 === \"\") {\r\n        return \"\";\r\n    }\r\n    else {\r\n        return \"?\" + _arg1;\r\n    }\r\n}\r\n\r\nexport function RouterModule_encodeQueryStringInts(queryStringIntPairs) {\r\n    const _arg1 = join(\"\\u0026\", map((tupledArg) => join(\"=\", [encodeURIComponent(tupledArg[0]), tupledArg[1]]), queryStringIntPairs));\r\n    if (_arg1 === \"\") {\r\n        return \"\";\r\n    }\r\n    else {\r\n        return \"?\" + _arg1;\r\n    }\r\n}\r\n\r\nfunction RouterModule_normalizeRoute(routeMode) {\r\n    if (routeMode === 1) {\r\n        return (_arg1) => {\r\n            let activePatternResult11406, path, activePatternResult11407, path_1, activePatternResult11408, path_2;\r\n            return activePatternResult11406 = RouterModule_String_$007CPrefix$007C(\"/\", _arg1), (activePatternResult11406 != null) ? (path = activePatternResult11406, \"#\" + path) : (activePatternResult11407 = RouterModule_String_$007CPrefix$007C(\"#/\", _arg1), (activePatternResult11407 != null) ? (path_1 = activePatternResult11407, path_1) : (activePatternResult11408 = RouterModule_String_$007CPrefix$007C(\"#\", _arg1), (activePatternResult11408 != null) ? (path_2 = activePatternResult11408, \"#/\" + substring(path_2, 1, path_2.length - 1)) : (\"#/\" + _arg1)));\r\n        };\r\n    }\r\n    else {\r\n        return (_arg2) => {\r\n            let activePatternResult11411, path_4;\r\n            return activePatternResult11411 = RouterModule_String_$007CPrefix$007C(\"/\", _arg2), (activePatternResult11411 != null) ? (path_4 = activePatternResult11411, path_4) : (\"/\" + _arg2);\r\n        };\r\n    }\r\n}\r\n\r\nexport function RouterModule_encodeParts(xs, routeMode) {\r\n    return RouterModule_normalizeRoute(routeMode)(join(\"/\", map((part) => {\r\n        if (((part.indexOf(\"?\") >= 0) ? true : (part.indexOf(\"#\") === 0)) ? true : (part.indexOf(\"/\") === 0)) {\r\n            return part;\r\n        }\r\n        else {\r\n            return encodeURIComponent(part);\r\n        }\r\n    }, xs)));\r\n}\r\n\r\nexport function RouterModule_trySeparateLast(xs) {\r\n    const matchValue = reverse(xs);\r\n    if (!isEmpty(matchValue)) {\r\n        if (isEmpty(tail(matchValue))) {\r\n            return [empty(), head(matchValue)];\r\n        }\r\n        else {\r\n            return [reverse(tail(matchValue)), head(matchValue)];\r\n        }\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function RouterModule_nav(xs, mode, routeMode) {\r\n    if (mode === 1) {\r\n        history.pushState(void 0, \"\", RouterModule_encodeParts(xs, routeMode));\r\n    }\r\n    else {\r\n        history.replaceState(void 0, \"\", RouterModule_encodeParts(xs, routeMode));\r\n    }\r\n    const ev = document.createEvent(\"CustomEvent\");\r\n    ev.initEvent(\"CUSTOM_NAVIGATION_EVENT\", true, true);\r\n    void window.dispatchEvent(ev);\r\n}\r\n\r\nexport function RouterModule_urlSegments(path, mode) {\r\n    return collect((segment) => {\r\n        if (isNullOrWhiteSpace(segment)) {\r\n            return empty();\r\n        }\r\n        else {\r\n            const segment_1 = trimEnd(segment, \"#\");\r\n            if (segment_1 === \"?\") {\r\n                return empty();\r\n            }\r\n            else if (RouterModule_String_$007CPrefix$007C(\"?\", segment_1) != null) {\r\n                return singleton(segment_1);\r\n            }\r\n            else {\r\n                const matchValue = segment_1.split(\"?\");\r\n                if ((!equalsWith((x, y) => comparePrimitives(x, y), matchValue, null)) ? (matchValue.length === 1) : false) {\r\n                    const value = matchValue[0];\r\n                    return singleton(decodeURIComponent(value));\r\n                }\r\n                else if ((!equalsWith((x_1, y_1) => comparePrimitives(x_1, y_1), matchValue, null)) ? (matchValue.length === 2) : false) {\r\n                    if (matchValue[1] === \"\") {\r\n                        const value_1 = matchValue[0];\r\n                        return singleton(decodeURIComponent(value_1));\r\n                    }\r\n                    else {\r\n                        const value_2 = matchValue[0];\r\n                        const query = matchValue[1];\r\n                        return ofArray([decodeURIComponent(value_2), \"?\" + query]);\r\n                    }\r\n                }\r\n                else {\r\n                    return empty();\r\n                }\r\n            }\r\n        }\r\n    }, ofArray(split((RouterModule_String_$007CPrefix$007C(\"#\", path) != null) ? substring(path, 1, path.length - 1) : ((mode === 1) ? ((RouterModule_String_$007CSuffix$007C(\"#\", path) != null) ? \"\" : ((RouterModule_String_$007CSuffix$007C(\"#/\", path) != null) ? \"\" : path)) : path), [\"/\"], null, 0)));\r\n}\r\n\r\nexport function RouterModule_onUrlChange(routeMode, urlChanged, ev) {\r\n    return urlChanged(RouterModule_urlSegments((routeMode === 2) ? (window.location.pathname + window.location.search) : window.location.hash, routeMode));\r\n}\r\n\r\nexport const RouterModule_router = React_memo_62A0F746((input) => {\r\n    const onChange = useReact_useCallbackRef_7C4B0DD6((ev) => {\r\n        const urlChanged = defaultArg(input.onUrlChanged, (value) => {\r\n        });\r\n        return RouterModule_onUrlChange(defaultArg(input.hashMode, 1), urlChanged, ev);\r\n    });\r\n    if (((window.navigator.userAgent).indexOf(\"Trident\") >= 0) ? true : ((window.navigator.userAgent).indexOf(\"MSIE\") >= 0)) {\r\n        const eventType = \"hashchange\";\r\n        const action_1 = (arg00) => {\r\n            onChange(arg00);\r\n        };\r\n        const options_1 = void 0;\r\n        const addOptions = useReact_useMemo_CF4EA67(() => Impl_adjustPassive(options_1), [options_1]);\r\n        const removeOptions = useReact_useMemo_CF4EA67(() => Impl_createRemoveOptions(options_1), [options_1]);\r\n        const fn = useReact_useMemo_CF4EA67(() => ((arg) => {\r\n            action_1(arg);\r\n        }), [action_1]);\r\n        useReact_useEffect_Z5ECA432F(useReact_useCallbackRef_7C4B0DD6(() => {\r\n            if (addOptions == null) {\r\n                window.addEventListener(eventType, fn);\r\n            }\r\n            else {\r\n                window.addEventListener(eventType, fn, addOptions);\r\n            }\r\n            return React_createDisposable_3A5B6456(() => {\r\n                if (removeOptions == null) {\r\n                    window.removeEventListener(eventType, fn);\r\n                }\r\n                else {\r\n                    window.removeEventListener(eventType, fn, removeOptions);\r\n                }\r\n            });\r\n        }));\r\n    }\r\n    else {\r\n        const eventType_1 = \"popstate\";\r\n        const action_3 = onChange;\r\n        const options_5 = void 0;\r\n        const addOptions_1 = useReact_useMemo_CF4EA67(() => Impl_adjustPassive(options_5), [options_5]);\r\n        const removeOptions_1 = useReact_useMemo_CF4EA67(() => Impl_createRemoveOptions(options_5), [options_5]);\r\n        const fn_1 = useReact_useMemo_CF4EA67(() => ((arg_1) => {\r\n            action_3(arg_1);\r\n        }), [action_3]);\r\n        useReact_useEffect_Z5ECA432F(useReact_useCallbackRef_7C4B0DD6(() => {\r\n            if (addOptions_1 == null) {\r\n                window.addEventListener(eventType_1, fn_1);\r\n            }\r\n            else {\r\n                window.addEventListener(eventType_1, fn_1, addOptions_1);\r\n            }\r\n            return React_createDisposable_3A5B6456(() => {\r\n                if (removeOptions_1 == null) {\r\n                    window.removeEventListener(eventType_1, fn_1);\r\n                }\r\n                else {\r\n                    window.removeEventListener(eventType_1, fn_1, removeOptions_1);\r\n                }\r\n            });\r\n        }));\r\n    }\r\n    const eventType_2 = \"CUSTOM_NAVIGATION_EVENT\";\r\n    const action_4 = onChange;\r\n    const options_8 = void 0;\r\n    const addOptions_2 = useReact_useMemo_CF4EA67(() => Impl_adjustPassive(options_8), [options_8]);\r\n    const removeOptions_2 = useReact_useMemo_CF4EA67(() => Impl_createRemoveOptions(options_8), [options_8]);\r\n    const fn_2 = useReact_useMemo_CF4EA67(() => ((arg_2) => {\r\n        action_4(arg_2);\r\n    }), [action_4]);\r\n    useReact_useEffect_Z5ECA432F(useReact_useCallbackRef_7C4B0DD6(() => {\r\n        if (addOptions_2 == null) {\r\n            window.addEventListener(eventType_2, fn_2);\r\n        }\r\n        else {\r\n            window.addEventListener(eventType_2, fn_2, addOptions_2);\r\n        }\r\n        return React_createDisposable_3A5B6456(() => {\r\n            if (removeOptions_2 == null) {\r\n                window.removeEventListener(eventType_2, fn_2);\r\n            }\r\n            else {\r\n                window.removeEventListener(eventType_2, fn_2, removeOptions_2);\r\n            }\r\n        });\r\n    }));\r\n    const matchValue = input.application;\r\n    return (matchValue == null) ? null : matchValue;\r\n});\r\n\r\nexport function Route_$007CInt$007C_$007C(input) {\r\n    let matchValue;\r\n    let outArg = 0;\r\n    matchValue = [tryParse(input, 511, false, 32, new FSharpRef(() => outArg, (v) => {\r\n        outArg = v;\r\n    })), outArg];\r\n    if (matchValue[0]) {\r\n        return matchValue[1];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function Route_$007CInt64$007C_$007C(input) {\r\n    let matchValue;\r\n    let outArg = fromInt(0);\r\n    matchValue = [tryParse_1(input, 511, false, 64, new FSharpRef(() => outArg, (v) => {\r\n        outArg = v;\r\n    })), outArg];\r\n    if (matchValue[0]) {\r\n        return matchValue[1];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function Route_$007CGuid$007C_$007C(input) {\r\n    let matchValue;\r\n    let outArg = \"00000000-0000-0000-0000-000000000000\";\r\n    matchValue = [tryParse_2(input, new FSharpRef(() => outArg, (v) => {\r\n        outArg = v;\r\n    })), outArg];\r\n    if (matchValue[0]) {\r\n        return matchValue[1];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function Route_$007CNumber$007C_$007C(input) {\r\n    let matchValue;\r\n    let outArg = 0;\r\n    matchValue = [tryParse_3(input, new FSharpRef(() => outArg, (v) => {\r\n        outArg = v;\r\n    })), outArg];\r\n    if (matchValue[0]) {\r\n        return matchValue[1];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function Route_$007CDecimal$007C_$007C(input) {\r\n    let matchValue;\r\n    let outArg = new Decimal(0);\r\n    matchValue = [tryParse_4(input, new FSharpRef(() => outArg, (v) => {\r\n        outArg = v;\r\n    })), outArg];\r\n    if (matchValue[0]) {\r\n        return matchValue[1];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function Route_$007CBool$007C_$007C(input) {\r\n    const matchValue = input.toLocaleLowerCase();\r\n    switch (matchValue) {\r\n        case \"1\":\r\n        case \"true\": {\r\n            return true;\r\n        }\r\n        case \"0\":\r\n        case \"false\": {\r\n            return false;\r\n        }\r\n        case \"\": {\r\n            return true;\r\n        }\r\n        default: {\r\n            return void 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function Route_$007CQuery$007C_$007C(input) {\r\n    try {\r\n        const urlParams = new URLSearchParams(input);\r\n        return toList(delay(() => map_1((entry) => [entry[0], entry[1]], urlParams.entries())));\r\n    }\r\n    catch (matchValue) {\r\n        return void 0;\r\n    }\r\n}\r\n\r\n","import { reverse, empty, cons, fold } from \"../fable-library.3.1.11/List.js\";\r\nimport { uncurry } from \"../fable-library.3.1.11/Util.js\";\r\nimport { toString } from \"../fable-library.3.1.11/Types.js\";\r\nimport { join } from \"../fable-library.3.1.11/String.js\";\r\n\r\nexport function Helpers_extractClasses(xs) {\r\n    return fold(uncurry(2, (tupledArg) => {\r\n        const classes = tupledArg[0];\r\n        const props = tupledArg[1];\r\n        return (x) => {\r\n            const matchValue = x;\r\n            return (matchValue[0] === \"className\") ? [cons(toString(matchValue[1]), classes), props] : [classes, cons(x, props)];\r\n        };\r\n    }), [empty(), empty()], reverse(xs));\r\n}\r\n\r\nexport function Helpers_combineClasses(cn, xs) {\r\n    const tupledArg = Helpers_extractClasses(xs);\r\n    return cons([\"className\", join(\" \", cons(cn, tupledArg[0]))], tupledArg[1]);\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const Responsavel = () => {\r\n    let [state, setState] = React.useState({ data: undefined })\r\n    let [form, setForm] = React.useState({ })\r\n    let [search, setSearch] = React.useState({ })\r\n\r\n    React.useEffect(() => {\r\n        console.log('!!! REACT EFFECT !!!')\r\n        if(!state.data) {\r\n            fetch(process.env.REACT_APP_BASE_URL + '/Responsavel/All?'+ new URLSearchParams(search))\r\n            .then(e => {\r\n                if(e.ok) return e.json()\r\n                throw new Error\r\n            })\r\n            .then(e => setState({...e}))\r\n            .catch(e => setState({data : false}))\r\n        }\r\n    }, [state])\r\n\r\n    const toggleModal = (modalState, modalAction, modalMethod) => {\r\n        setState(s => ({...s, errors: undefined}));\r\n        setForm(f => ({...f, action: modalAction, method: modalMethod, modal: modalState}))\r\n    }\r\n\r\n    const handleOnSubmit = (event) => {\r\n        event.preventDefault()\r\n        console.log('onSubmit', form)\r\n\r\n        fetch(process.env.REACT_APP_BASE_URL + form.action, {\r\n            method: form.method,\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                Id: event.target.id.value,\r\n                Cpf: event.target.cpf.value,\r\n                Nome: event.target.nome.value,\r\n                Email: event.target.email.value,\r\n                Foto: event.target.foto.value,\r\n            })\r\n        }).then(e =>{ \r\n            if(e.ok) return e.json()\r\n\r\n            e.text()\r\n            .then(text =>setState(s => ({...s, errors: JSON.parse(text).errors}) ))\r\n            throw new Error\r\n        })\r\n        .then(e => {\r\n            setState({data : undefined})\r\n            setForm({})\r\n            event.target.reset()\r\n        })\r\n        .catch(e => {\r\n            setState(s => ({...s, errors: { '': 'Não foi possível realizar a ação!'}}))\r\n        })\r\n    }\r\n\r\n    const handleOnSearch = (event) => {\r\n        event.preventDefault()\r\n        const data = [...event.target.elements].reduce((data, element) => {\r\n            if (element.name && element.value) {\r\n              data[element.name] = element.value;\r\n            }\r\n            return data;\r\n        }, {});\r\n        \r\n        data.page = 1\r\n\r\n        setSearch(data)\r\n        setState({data : undefined})\r\n    }\r\n\r\n    const error = (name) => {\r\n        return state && state.errors && Array.isArray(state.errors[name]) && state.errors[name].map(item =><p class=\"help is-danger\">{item}</p>)\r\n    }\r\n\r\n    return (\r\n        <div className=\"mt-5\">\r\n            {\r\n                form.modal &&\r\n                <div className={`modal ${form.modal && 'is-active'}`}>\r\n                    <div className=\"modal-background\"></div>\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"box\">\r\n                            <h2>Responsável</h2>\r\n                            <hr />\r\n                            <form action={form.action} method={form.method} onSubmit={handleOnSubmit}>\r\n                                {error('')}\r\n\r\n                                <input name=\"id\" className=\"input\" type=\"hidden\" defaultValue={form.id || 0} />\r\n                                <div className=\"field\">\r\n                                    <label className=\"label\">CPF</label>\r\n                                    <input name=\"cpf\" className=\"input\" type=\"text\" autoComplete=\"off\" defaultValue={form.cpf} ></input>\r\n                                    {error('Cpf')}\r\n                                </div>\r\n                                <div className=\"field\">\r\n                                    <label className=\"label\">Nome</label>\r\n                                    <input name=\"nome\" className=\"input\" type=\"text\" autoComplete=\"off\" defaultValue={form.nome} ></input>\r\n                                    {error('Nome')}\r\n                                </div>\r\n                                <div className=\"field\">\r\n                                    <label className=\"label\">E-mail</label>\r\n                                    <input name=\"email\" className=\"input\" type=\"text\" autoComplete=\"off\" defaultValue={form.email} ></input>\r\n                                    {error('Email')}\r\n                                </div>\r\n                                <div className=\"field is-horizontal\">\r\n                                    <label className=\"label\">Foto</label>\r\n                                    <input name=\"foto\" className=\"input\" type=\"text\" autoComplete=\"off\" defaultValue={form.foto} ></input>\r\n                                    {error('Foto')}\r\n                                </div>\r\n\r\n                                <div class=\"field is-grouped is-grouped-right\">\r\n                                    <p class=\"control\">\r\n                                        <button type=\"submit\" class=\"button is-primary\">Salvar</button>\r\n                                    </p>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"modal-close is-large\" aria-label=\"close\" onClick={ () => setForm({modal: false}) }></button>\r\n                </div>\r\n                \r\n            }\r\n            \r\n            <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                    <span className=\"card-header-title\">Responsável</span>\r\n                    <button className=\"button is-small is-primary\" onClick={ () => toggleModal(true, 'Responsavel/Create', 'POST') }>+ Novo responsável</button>\r\n                </div>\r\n                <div className=\"card-content\">\r\n                    <div className=\"content\">\r\n                        <form name=\"search\" action=\"\" method=\"GET\" onSubmit={handleOnSearch}>\r\n                            <input name=\"page\" className=\"input\" type=\"hidden\" value={search.page || 1} />\r\n                            <fieldset>\r\n                                <div className=\"columns\">\r\n                                    <div className=\"column\">\r\n                                        <div className=\"field\">\r\n                                            <label className=\"label\">CPF</label>\r\n                                            <input name=\"Cpf\" autoComplete=\"off\" className=\"input\" type=\"text\" data-mask=\"999.999\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"column\">\r\n                                        <div className=\"field\">\r\n                                            <label className=\"label\">Nome</label>\r\n                                            <input name=\"Nome\" autoComplete=\"off\" className=\"input\" type=\"text\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"column\">\r\n                                        <div className=\"field\">\r\n                                            <label className=\"label\">Número Unificado do processo</label>\r\n                                            <input name=\"NumeroProcessoUnificado\" autoComplete=\"off\" className=\"input\" type=\"text\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"column is-2\">\r\n                                        <div className=\"field is-grouped is-grouped-right mt-5\">\r\n                                            <button className=\"button is-primary\" type=\"search\">Consultar</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </fieldset>\r\n                        </form>\r\n\r\n\r\n                        {\r\n                state.data === undefined &&\r\n                <nav className=\"level mt-5\">\r\n                    <div className=\"level-item has-text-centered\">\r\n                        <div>\r\n                        <p className=\"heading\">Realizando consulta para...</p>\r\n                        <p className=\"title\">obter dados de responsáveis!</p>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            }\r\n\r\n            {\r\n                state.data === false &&\r\n                <nav className=\"level mt-5\">\r\n                    <div className=\"level-item has-text-centered\">\r\n                        <div>\r\n                        <p className=\"heading\">Foi realizado a consulta porém...</p>\r\n                        <p className=\"title\">ocorreu um erro!</p>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            }\r\n\r\n            {\r\n                state.data &&\r\n                Array.isArray(state.data) && state.data.length === 0 &&\r\n                <nav className=\"level mt-5\">\r\n                    <div className=\"level-item has-text-centered\">\r\n                        <div>\r\n                        <p className=\"heading\">Foi realizado a consulta porém...</p>\r\n                        <p className=\"title\">nenhum registro encontrado!</p>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            }\r\n\r\n            {\r\n                state.data &&\r\n                Array.isArray(state.data) && state.data.length > 0 &&\r\n                <>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Nome</th>\r\n                            <th>Ação</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                           {\r\n                                state.data.map(item =>\r\n                                    <tr>\r\n                                        <td>{item.cpf}</td>\r\n                                        <td>{item.nome}</td>\r\n                                        <td><button className=\"button is-small is-warning\" onClick={() => { toggleModal(true, `Responsavel/Update/${item.id}`, 'PATCH'); setForm(f => ({...f, ...item})); }}>Editar</button></td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                    </tbody>\r\n                </table>\r\n\r\n                <nav class=\"pagination is-centered\" role=\"navigation\" aria-label=\"pagination\">\r\n                    <a class=\"pagination-previous\" disabled={state && !state.previous} onClick={() => { setSearch(s => ({...s, page: state.previous})); setState({data: undefined}) }}>« Anterior</a>\r\n                    <a class=\"pagination-next\" disabled={state && !state.next} onClick={() => { setSearch(s => ({...s, page: state.next})); setState({data: undefined}) }}>Próximo »</a>\r\n                    <ul class=\"pagination-list\">\r\n                        <li><a class=\"pagination-link is-current\" aria-current=\"Página\">Página {state.page}</a></li>\r\n                    </ul>\r\n                </nav>\r\n                </>\r\n            }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Processo = () => {\r\n    let [state, setState] = React.useState({ data: undefined })\r\n    let [form, setForm] = React.useState({ })\r\n    let [search, setSearch] = React.useState({ })\r\n    let [responsaveis, setResponsaveis] = React.useState()\r\n\r\n    React.useEffect(() => {\r\n        console.log('!!! REACT EFFECT !!!')\r\n        console.log(state)\r\n        if(!responsaveis) {\r\n            fetch(process.env.REACT_APP_BASE_URL + '/Responsavel/All')\r\n            .then(e => {\r\n                if(e.ok) return e.json()\r\n                throw new Error\r\n            })\r\n            .then(data => setResponsaveis(data))\r\n            .catch(e => {\r\n                setTimeout(() => {\r\n                    setState({responsaveis : false})\r\n                }, 3000)\r\n            })\r\n        }\r\n\r\n        if(state.data === undefined) {\r\n            fetch(process.env.REACT_APP_BASE_URL + '/Processo/All?'+ new URLSearchParams(search))\r\n            .then(e => {\r\n                if(e.ok) return e.json()\r\n                throw new Error\r\n            })\r\n            .then(e => setState({...e}))\r\n            .catch(e => setState({data : false}))\r\n        }\r\n    }, [state])\r\n\r\n    const toggleModal = (modalState, modalAction, modalMethod) => {\r\n        setState(s => ({...s, errors: undefined}));\r\n        setForm(f => ({...f, action: modalAction, method: modalMethod, modal: modalState}))\r\n    }\r\n\r\n    const handleOnSubmit = (event) => {\r\n        event.preventDefault()\r\n\r\n        console.log(event.target.id)\r\n        console.log(process.env.REACT_APP_BASE_URL + form.action)\r\n\r\n        fetch(process.env.REACT_APP_BASE_URL + form.action, {\r\n            method: form.method,\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                Id: +(event.target.id.value || 0),\r\n                NumeroUnificado: event.target.numeroprocesso.value,\r\n                DataDistribuicao: event.target.datadistribuicao.value || '0001-01-01',\r\n                SegredoJustica: event.target.segredojustica.value,\r\n                PastaFisicaCliente: event.target.pastafisicacliente.value,\r\n                Descricao: event.target.descricao.value,\r\n                SituacaoId: event.target.situacaoid.value,\r\n                Responsaveis: [...event.target['responsaveis[]'].options].filter(f => f.selected).map(opt => ({Id: opt.value}))\r\n            })\r\n        }).then(e =>{ \r\n            if(e.ok) return e.json()\r\n\r\n            e.text()\r\n            .then(text =>setState(s => ({...s, errors: JSON.parse(text).errors}) ))\r\n            throw new Error\r\n        })\r\n        .then(e => {\r\n            setState({data : undefined})\r\n            setForm({})\r\n            event.target.reset()\r\n        })\r\n        .catch(e => {\r\n            setState(s => ({...s, errors: { '': 'Não foi possível realizar a ação!'}}))\r\n        })\r\n    }\r\n\r\n    const handleOnSearch = (event) => {\r\n        event.preventDefault()\r\n        const data = [...event.target.elements].reduce((data, element) => {\r\n            if (element.name && element.value) {\r\n              data[element.name] = element.value;\r\n            }\r\n            return data;\r\n        }, {});\r\n        \r\n        data.page = 1\r\n\r\n        console.log(data)\r\n\r\n        setSearch(data)\r\n        setState({data : undefined})\r\n    }\r\n\r\n    const error = (name) => {\r\n        return state && state.errors && Array.isArray(state.errors[name]) && state.errors[name].map(item =><p className=\"help is-danger\">{item}</p>)\r\n    }\r\n\r\n    return (\r\n        <div className=\"mt-5\">\r\n            {\r\n                form.modal &&\r\n                <div className={`modal ${form.modal && 'is-active'}`}>\r\n                    <div className=\"modal-background\"></div>\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"box\">\r\n                            <h2>Processo</h2>\r\n                            <hr />\r\n                            <form action={form.action} method={form.method} onSubmit={handleOnSubmit}>\r\n                                {error('')}\r\n                                <input name=\"id\" type=\"hidden\" defaultValue={form.id || 0} />\r\n                                <div className=\"columns\">\r\n                                    <div className=\"column is-5\">\r\n                                        <div className=\"field\">\r\n                                            <label className=\"label\">Número processo unificado</label>\r\n                                            <input name=\"numeroprocesso\" autoComplete=\"off\" className=\"input\" type=\"text\" defaultValue={form.numeroUnificado} />\r\n                                            {error('NumeroUnificado')}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"column is-3\">\r\n                                        <label className=\"label\">Data distribuição</label>\r\n                                        <div class=\"field\">\r\n                                            <p class=\"control\">\r\n                                                <input name=\"datadistribuicao\" class=\"input\" type=\"date\" placeholder=\"00/00/0000\" defaultValue={form.dataDistribuicao && form.dataDistribuicao.substring(0, 10)} />\r\n                                            </p>\r\n                                        </div>\r\n                                        {error('DataDistribuicao')}\r\n                                    </div>\r\n                                    <div className=\"column\">\r\n                                        <div className=\"field\">\r\n                                            <label className=\"label\">Situação</label>\r\n                                            <div class=\"field\">\r\n                                                <p class=\"control\">\r\n                                                    <span class=\"select\">\r\n                                                    <select name=\"situacaoid\" defaultValue={form.situacaoId}>\r\n                                                        <option disabled hidden selected value=\"0\">[ Selecione ]</option>\r\n                                                        <option value=\"1\">Arquivado</option>\r\n                                                        <option value=\"2\">Desmembrado</option>\r\n                                                        <option value=\"3\">Em andamento</option>\r\n                                                        <option value=\"4\">Em recurso</option>\r\n                                                        <option value=\"5\">Finalizado</option>\r\n                                                    </select>\r\n                                                    </span>\r\n                                                </p>\r\n                                            </div>\r\n                                        {error('SituacaoId')}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"column is-2\">\r\n                                        <div class=\"field\">\r\n                                            <label className=\"label\">Segredo de justiça</label>\r\n                                            <div class=\"control mt-3\">\r\n                                                <label class=\"radio\">\r\n                                                    <input type=\"radio\" name=\"segredojustica\" value=\"true\"  defaultChecked={form.segredoJustica} /> Sim\r\n                                                </label>\r\n                                                <label class=\"radio\">\r\n                                                    <input type=\"radio\" name=\"segredojustica\" value=\"false\" defaultChecked={!form.segredoJustica} /> Não\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        {error('SegredoJustica')}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"columns\">\r\n                                    <div className=\"column is-5\">\r\n                                        <div class=\"field\">\r\n                                            <label className=\"label\">Responsáveis</label>\r\n                                            {error('Responsaveis')}\r\n                                            <div class=\"select is-multiple\" style={{width: '100%'}}>\r\n                                                <select name=\"responsaveis[]\" multiple size=\"6\" style={{width: '100%'}}>\r\n                                                    {\r\n                                                        responsaveis && Array.isArray(responsaveis.data) && responsaveis.data.map(r => <option selected={form.responsaveis && [...form.responsaveis].some(x => x.responsavelId === r.id)} value={r.id}>{r.cpf} - {r.nome}</option>)\r\n                                                    }\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"column is-7\">\r\n                                        <div className=\"field\">\r\n                                            <label className=\"label\">Pasta física do cliente</label>\r\n                                            <input name=\"pastafisicacliente\" className=\"input\" type=\"text\" autoComplete=\"off\" defaultValue={form.pastaFisicaCliente} ></input>\r\n                                            {error('PastaFisicaCliente')}\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"field\">\r\n                                            <label className=\"label\">Descrição</label>\r\n                                            <textarea name=\"descricao\" className=\"textarea\" rows={5}>{form.descricao}</textarea>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"field\">\r\n                                    <label className=\"label\">Processo vinculado</label>\r\n                                    <input name=\"cpf\" className=\"input\" type=\"text\" autoComplete=\"off\" defaultValue={form.cpf} ></input>\r\n                                    {error('Cpf')}\r\n                                </div>\r\n\r\n                                <div className=\"field\">\r\n\r\n                                </div>\r\n\r\n                                <div className=\"field is-grouped is-grouped-right\">\r\n                                    <p className=\"control\">\r\n                                        <button type=\"submit\" className=\"button is-primary\">Salvar</button>\r\n                                    </p>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"modal-close is-large\" aria-label=\"close\" onClick={ () => setForm({modal: false}) }></button>\r\n                </div>\r\n                \r\n            }\r\n            \r\n            <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                    <span className=\"card-header-title\">Processo</span>\r\n                    <button className=\"button is-small is-primary\" onClick={ () => toggleModal(true, '/Processo/Create', 'POST') }>+ Novo processo</button>\r\n                </div>\r\n                <div className=\"card-content\">\r\n                    <div className=\"content\">\r\n                        <form name=\"search\" action=\"\" method=\"GET\" onSubmit={handleOnSearch}>\r\n                            <input name=\"page\" className=\"input\" type=\"hidden\" value={search.page || 1} />\r\n                            <fieldset>\r\n                                <div className=\"columns\">\r\n                                    <div className=\"column is-3\">\r\n                                        <div className=\"field\">\r\n                                            <label className=\"label\">Número processo unificado</label>\r\n                                            <input name=\"NumeroUnificado\" autoComplete=\"off\" className=\"input masked\" type=\"text\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"column is-5\">\r\n                                            <label className=\"label\">Data distribuição</label>\r\n                                        <div class=\"field-body\">\r\n                                            <div class=\"field\">\r\n                                                <p class=\"control\">\r\n                                                    <input name=\"DataDistribuicaoInicio\" class=\"input\" type=\"date\" placeholder=\"00/00/0000\" />\r\n                                                </p>\r\n                                            </div>\r\n                                            <div class=\"field\">\r\n                                                <p class=\"control\">\r\n                                                    <input name=\"DataDistribuicaoFim\" class=\"input\" type=\"date\" placeholder=\"00/00/0000\"  />\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"column\">\r\n                                        <div className=\"field\">\r\n                                            <label className=\"label\">Situação</label>\r\n                                            <div class=\"field\">\r\n                                                <p class=\"control\">\r\n                                                    <span class=\"select\">\r\n                                                        <select name=\"SituacaoId\">\r\n                                                            <option disabled hidden selected value=\"\">[Filtrar por]</option>\r\n                                                            <option value=\"\">TODOS</option>\r\n                                                            <option value=\"1\">Arquivado</option>\r\n                                                            <option value=\"2\">Desmembrado</option>\r\n                                                            <option value=\"3\">Em andamento</option>\r\n                                                            <option value=\"4\">Em recurso</option>\r\n                                                            <option value=\"5\">Finalizado</option>\r\n                                                        </select>\r\n                                                    </span>\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"column is-2\">\r\n                                        <div class=\"field\">\r\n                                            <label className=\"label\">Segredo de justiça</label>\r\n                                            <div class=\"field\">\r\n                                                <p class=\"control\">\r\n                                                    <span class=\"select\">\r\n                                                    <select name=\"SegredoJustica\">\r\n                                                        <option disabled hidden selected value=\"\">[Filtrar por]</option>\r\n                                                        <option value=\"\">TODOS</option>\r\n                                                        <option value=\"true\">Sim</option>\r\n                                                        <option value=\"false\">Não</option>\r\n                                                    </select>\r\n                                                    </span>\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"columns\">\r\n                                    <div className=\"column is-5\">\r\n                                        <div className=\"field\">\r\n                                            <label className=\"label\">Pasta física do cliente</label>\r\n                                            <input name=\"PastaFisicaCliente\" autoComplete=\"off\" className=\"input masked\" type=\"text\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"column is-5\">\r\n                                        <div className=\"field\">\r\n                                            <label className=\"label\">Responsável</label>\r\n                                            <input name=\"Responsavel\" autoComplete=\"off\" className=\"input masked\" type=\"text\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"column is-2\">\r\n                                        <div className=\"field is-grouped is-grouped-right mt-5\">\r\n                                            <button className=\"button is-primary\" type=\"search\">Consultar</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </fieldset>\r\n                        </form>\r\n\r\n\r\n            {\r\n                state.data === undefined &&\r\n                <nav className=\"level mt-5\">\r\n                    <div className=\"level-item has-text-centered\">\r\n                        <div>\r\n                        <p className=\"heading\">Realizando consulta para...</p>\r\n                        <p className=\"title\">obter dados de processos!</p>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            }\r\n\r\n            {\r\n                state.data === false &&\r\n                <nav className=\"level mt-5\">\r\n                    <div className=\"level-item has-text-centered\">\r\n                        <div>\r\n                        <p className=\"heading\">Foi realizado a consulta porém...</p>\r\n                        <p className=\"title\">ocorreu um erro!</p>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            }\r\n\r\n            {\r\n                state.data &&\r\n                Array.isArray(state.data) && state.data.length === 0 &&\r\n                <nav className=\"level mt-5\">\r\n                    <div className=\"level-item has-text-centered\">\r\n                        <div>\r\n                        <p className=\"heading\">Foi realizado a consulta porém...</p>\r\n                        <p className=\"title\">nenhum registro encontrado!</p>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            }\r\n\r\n            {\r\n                state.data &&\r\n                Array.isArray(state.data) && state.data.length > 0 &&\r\n                <>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Data de distribuição</th>\r\n                            <th>Pasta Física do Cliente</th>\r\n                            <th>Segredo de Justiça</th>\r\n                            <th>Responsáveis</th>\r\n                            <th>Ação</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                           {\r\n                                state.data.map(item =>\r\n                                    <tr>\r\n                                        <td>\r\n                                            {item.numeroUnificado} ({item.situacao.nome})\r\n                                            <br/>\r\n                                            {item.descricao}\r\n                                        </td>\r\n                                        <td>{Intl.DateTimeFormat('ot-BR').format(new Date(item.dataDistribuicao))}</td>\r\n                                        <td>{item.pastaFisicaCliente}</td>\r\n                                        <td>\r\n                                            {\r\n                                                item.segredoJustica\r\n                                                ? <span>Sim</span>\r\n                                                : <span>Não</span>\r\n                                            }\r\n                                        </td>\r\n                                        <td>{item.responsaveis.map(r => <span>{r.responsavel.nome}</span>)}</td>\r\n                                        <td><button className=\"button is-small is-warning\" onClick={() => { toggleModal(true, `/Processo/Update/${item.id}`, 'PATCH'); setForm(f => ({...f, ...item})); }}>Editar</button></td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                    </tbody>\r\n                </table>\r\n\r\n                <nav className=\"pagination is-centered\" role=\"navigation\" aria-label=\"pagination\">\r\n                    <a className=\"pagination-previous\" disabled={state && !state.previous} onClick={() => { setSearch(s => ({...s, page: state.previous})); setState({data: undefined}) }}>« Anterior</a>\r\n                    <a className=\"pagination-next\" disabled={state && !state.next} onClick={() => { setSearch(s => ({...s, page: state.next})); setState({data: undefined}) }}>Próximo »</a>\r\n                    <ul className=\"pagination-list\">\r\n                        <li><a className=\"pagination-link is-current\" aria-current=\"Página\">Página {state.page}</a></li>\r\n                    </ul>\r\n                </nav>\r\n                </>\r\n            }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { class_type } from \"./.fable/fable-library.3.1.11/Reflection.js\";\r\nimport { Interop_reactApi } from \"./.fable/Feliz.1.40.0/Interop.fs.js\";\r\nimport { createElement } from \"react\";\r\nimport * as react from \"react\";\r\nimport { tail, head, isEmpty, ofArray, singleton } from \"./.fable/fable-library.3.1.11/List.js\";\r\nimport { RouterModule_router, RouterModule_urlSegments, RouterModule_encodeParts } from \"./.fable/Feliz.Router.3.7.0/Router.fs.js\";\r\nimport { createObj } from \"./.fable/fable-library.3.1.11/Util.js\";\r\nimport { Helpers_combineClasses } from \"./.fable/Feliz.Bulma.2.15.0/ElementBuilders.fs.js\";\r\nimport { useFeliz_React__React_useState_Static_1505 } from \"./.fable/Feliz.1.40.0/React.fs.js\";\r\nimport { singleton as singleton_1, delay, toList } from \"./.fable/fable-library.3.1.11/Seq.js\";\r\nimport { Responsavel } from \"./components/Responsavel.jsx\";\r\nimport { Processo } from \"./components/Processo.jsx\";\r\n\r\nexport class Components {\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport function Components$reflection() {\r\n    return class_type(\"App.Components\", void 0, Components);\r\n}\r\n\r\nexport function Components_Responsavel() {\r\n    return null;\r\n}\r\n\r\nexport function Components_Processo() {\r\n    return null;\r\n}\r\n\r\nexport function Components_Layout_2B31D457(content) {\r\n    let props_20, elms_1, elms, elms_6, elms_2, props_3, props_5, props_7, elms_5, elms_4, elms_3, props_14, elms_8;\r\n    const children_9 = ofArray([(props_20 = ofArray([[\"className\", \"is-info\"], [\"children\", Interop_reactApi.Children.toArray([(elms_1 = singleton((elms = singleton(createElement(\"img\", {\r\n        src: \"https://bulma.io/images/bulma-logo-white.png\",\r\n        height: 28,\r\n        width: 112,\r\n    })), createElement(\"a\", {\r\n        className: \"navbar-item\",\r\n        children: Interop_reactApi.Children.toArray(Array.from(elms)),\r\n    }))), createElement(\"div\", {\r\n        className: \"navbar-brand\",\r\n        children: Interop_reactApi.Children.toArray(Array.from(elms_1)),\r\n    })), (elms_6 = ofArray([(elms_2 = ofArray([(props_3 = ofArray([[\"children\", \"Página Inicial\"], [\"href\", RouterModule_encodeParts(singleton(\"/\"), 1)]]), createElement(\"a\", createObj(Helpers_combineClasses(\"navbar-item\", props_3)))), (props_5 = ofArray([[\"children\", \"Responsável\"], [\"href\", RouterModule_encodeParts(singleton(\"responsavel\"), 1)]]), createElement(\"a\", createObj(Helpers_combineClasses(\"navbar-item\", props_5)))), (props_7 = ofArray([[\"children\", \"Processo\"], [\"href\", RouterModule_encodeParts(singleton(\"processo\"), 1)]]), createElement(\"a\", createObj(Helpers_combineClasses(\"navbar-item\", props_7))))]), createElement(\"div\", {\r\n        className: \"navbar-start\",\r\n        children: Interop_reactApi.Children.toArray(Array.from(elms_2)),\r\n    })), (elms_5 = singleton((elms_4 = singleton((elms_3 = singleton((props_14 = ofArray([[\"className\", \"has-text-right\"], [\"children\", Interop_reactApi.Children.toArray([createElement(\"p\", createObj(Helpers_combineClasses(\"title\", ofArray([[\"className\", \"has-text-weight-bold\"], [\"className\", \"is-6\"], [\"children\", \"Administrador\"]])))), createElement(\"p\", createObj(Helpers_combineClasses(\"subtitle\", ofArray([[\"className\", \"is-6\"], [\"className\", \"has-text-weight-light\"], [\"className\", \"has-text-white\"], [\"children\", \"@admin\"]]))))])]]), createElement(\"div\", createObj(Helpers_combineClasses(\"media-content\", props_14))))), createElement(\"article\", {\r\n        className: \"media\",\r\n        children: Interop_reactApi.Children.toArray(Array.from(elms_3)),\r\n    }))), createElement(\"div\", {\r\n        className: \"navbar-item\",\r\n        children: Interop_reactApi.Children.toArray(Array.from(elms_4)),\r\n    }))), createElement(\"div\", {\r\n        className: \"navbar-end\",\r\n        children: Interop_reactApi.Children.toArray(Array.from(elms_5)),\r\n    }))]), createElement(\"div\", {\r\n        className: \"navbar-menu\",\r\n        children: Interop_reactApi.Children.toArray(Array.from(elms_6)),\r\n    }))])]]), createElement(\"nav\", createObj(Helpers_combineClasses(\"navbar\", props_20)))), (elms_8 = singleton(createElement(\"div\", {\r\n        className: \"content\",\r\n        children: Interop_reactApi.Children.toArray([content]),\r\n    })), createElement(\"div\", {\r\n        className: \"container\",\r\n        children: Interop_reactApi.Children.toArray(Array.from(elms_8)),\r\n    }))]);\r\n    return createElement(\"div\", {\r\n        children: Interop_reactApi.Children.toArray(Array.from(children_9)),\r\n    });\r\n}\r\n\r\nexport function Components_Home() {\r\n    let elms_1, elms, children, children_2, children_4, children_6;\r\n    const children_10 = singleton((elms_1 = singleton((elms = ofArray([createElement(\"p\", {\r\n        className: \"title\",\r\n        children: \"Gerenciamento de processos judiciais\",\r\n    }), createElement(\"p\", {\r\n        className: \"subtitle\",\r\n        children: \"Backend\",\r\n    }), (children = ofArray([createElement(\"li\", {\r\n        children: [\"WebApiCore .net5\"],\r\n    }), createElement(\"li\", {\r\n        children: [\"Auto Mapper\"],\r\n    }), createElement(\"li\", {\r\n        children: [\"Entity Core\"],\r\n    }), createElement(\"li\", {\r\n        children: [\"Fluent Validation\"],\r\n    }), createElement(\"li\", {\r\n        children: [\"Hangfire\"],\r\n    }), createElement(\"li\", {\r\n        children: [\"Serilog\"],\r\n    }), createElement(\"li\", {\r\n        children: [\"Swagger\"],\r\n    })]), createElement(\"ul\", {\r\n        children: Interop_reactApi.Children.toArray(Array.from(children)),\r\n    })), createElement(\"p\", {\r\n        className: \"subtitle\",\r\n        children: \"Database\",\r\n    }), (children_2 = singleton(createElement(\"li\", {\r\n        children: [\"MSSql Server\"],\r\n    })), createElement(\"ul\", {\r\n        children: Interop_reactApi.Children.toArray(Array.from(children_2)),\r\n    })), createElement(\"p\", {\r\n        className: \"subtitle\",\r\n        children: \"Frontend\",\r\n    }), (children_4 = ofArray([createElement(\"li\", {\r\n        children: [\"Fable\"],\r\n    }), createElement(\"li\", {\r\n        children: [\"Feliz\"],\r\n    }), createElement(\"li\", {\r\n        children: [\"ReactJS\"],\r\n    }), createElement(\"li\", {\r\n        children: [\"Bulma CSS\"],\r\n    })]), createElement(\"ul\", {\r\n        children: Interop_reactApi.Children.toArray(Array.from(children_4)),\r\n    })), createElement(\"p\", {\r\n        className: \"subtitle\",\r\n        children: \"Infra\",\r\n    }), (children_6 = ofArray([createElement(\"li\", {\r\n        children: [\"Docker\"],\r\n    }), createElement(\"li\", {\r\n        children: [\"Docker Compose\"],\r\n    }), createElement(\"li\", {\r\n        children: [\"Github\"],\r\n    })]), createElement(\"ul\", {\r\n        children: Interop_reactApi.Children.toArray(Array.from(children_6)),\r\n    }))]), createElement(\"div\", {\r\n        className: \"hero-body\",\r\n        children: Interop_reactApi.Children.toArray(Array.from(elms)),\r\n    }))), createElement(\"section\", {\r\n        className: \"hero\",\r\n        children: Interop_reactApi.Children.toArray(Array.from(elms_1)),\r\n    })));\r\n    return createElement(\"div\", {\r\n        children: Interop_reactApi.Children.toArray(Array.from(children_10)),\r\n    });\r\n}\r\n\r\nexport function Components_Router() {\r\n    const patternInput = useFeliz_React__React_useState_Static_1505(RouterModule_urlSegments(window.location.hash, 1));\r\n    const currentUrl = patternInput[0];\r\n    return RouterModule_router({\r\n        onUrlChanged: patternInput[1],\r\n        application: react.createElement(react.Fragment, {}, ...toList(delay(() => ((!isEmpty(currentUrl)) ? ((head(currentUrl) === \"responsavel\") ? (isEmpty(tail(currentUrl)) ? singleton_1(Components_Layout_2B31D457(createElement(Responsavel, null))) : singleton_1(createElement(\"h1\", {\r\n            children: [\"Not found\"],\r\n        }))) : ((head(currentUrl) === \"processo\") ? (isEmpty(tail(currentUrl)) ? singleton_1(Components_Layout_2B31D457(createElement(Processo, null))) : singleton_1(createElement(\"h1\", {\r\n            children: [\"Not found\"],\r\n        }))) : singleton_1(createElement(\"h1\", {\r\n            children: [\"Not found\"],\r\n        })))) : singleton_1(Components_Layout_2B31D457(createElement(Components_Home, null))))))),\r\n    });\r\n}\r\n\r\n","import { render } from \"react-dom\";\r\nimport { createElement } from \"react\";\r\nimport { Components_Router } from \"./Components.fs.js\";\r\nimport \"./styles/global.scss\";\r\n\r\n\r\nrender(createElement(Components_Router, null), document.getElementById(\"feliz-app\"));\r\n\r\n"],"sourceRoot":""}